{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v3.json", "dbt_version": "0.21.1", "generated_at": "2022-09-21T23:02:35.635062Z", "invocation_id": "1d2c532b-8f30-4ea3-b264-f59b2487ea5f", "env": {}, "project_id": "8643513036d7ba80299cc6ce9d8bf7f3", "user_id": "4bbe5480-2d1c-4de2-9bd1-69b43ba72f7f", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.basedosdados.microdados": {"raw_sql": "SELECT \nSAFE_CAST(id_pesquisa AS STRING) id_pesquisa,\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(nome_municipio AS STRING) nome_municipio,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(data AS DATE) data,\nSAFE_CAST(data_referencia AS STRING) data_referencia,\nSAFE_CAST(instituto AS STRING) instituto,\nSAFE_CAST(contratante AS STRING) contratante,\nSAFE_CAST(orgao_registro AS STRING) orgao_registro,\nSAFE_CAST(numero_registro AS STRING) numero_registro,\nSAFE_CAST(quantidade_entrevistas AS FLOAT64) quantidade_entrevistas,\nSAFE_CAST(margem_mais AS FLOAT64) margem_mais,\nSAFE_CAST(margem_menos AS FLOAT64) margem_menos,\nSAFE_CAST(tipo AS STRING) tipo,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_voto AS STRING) tipo_voto,\nSAFE_CAST(id_cenario AS STRING) id_cenario,\nSAFE_CAST(descricao_cenario AS STRING) descricao_cenario,\nSAFE_CAST(id_candidato_poder360 AS STRING) id_candidato_poder360,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(condicao AS INT64) condicao,\nSAFE_CAST(percentual AS FLOAT64) percentual\nFROM basedosdados-staging.br_poder360_pesquisas_staging.microdados AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_poder360_pesquisas", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_poder360_pesquisas", "fqn": ["basedosdados", "br_poder360_pesquisas", "microdados"], "unique_id": "model.basedosdados.microdados", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_poder360_pesquisas/microdados.sql", "original_file_path": "models/br_poder360_pesquisas/microdados.sql", "name": "microdados", "alias": "microdados", "checksum": {"name": "sha256", "checksum": "607f6dc64ae1920832beb4bea49c922238ae68dc07b49bf529ed2bf8e14b7b3b"}, "tags": [], "refs": [], "sources": [], "description": "Microdados de pesquisas eleitorais", "columns": {"id_pesquisa": {"name": "id_pesquisa", "description": "ID da pesquisa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da Unidade da Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_municipio": {"name": "nome_municipio", "description": "Nome do munic\u00edpio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo": {"name": "cargo", "description": "Cargo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data": {"name": "data", "description": "Data", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_referencia": {"name": "data_referencia", "description": "Data de refer\u00eancia", "meta": {}, "data_type": null, "quote": null, "tags": []}, "instituto": {"name": "instituto", "description": "Instituto realizador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "contratante": {"name": "contratante", "description": "Contratante", "meta": {}, "data_type": null, "quote": null, "tags": []}, "orgao_registro": {"name": "orgao_registro", "description": "Org\u00e3o de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_registro": {"name": "numero_registro", "description": "N\u00famero de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "quantidade_entrevistas": {"name": "quantidade_entrevistas", "description": "Quantidade de entrevistas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "margem_mais": {"name": "margem_mais", "description": "Margem a mais", "meta": {}, "data_type": null, "quote": null, "tags": []}, "margem_menos": {"name": "margem_menos", "description": "Margem a menos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo": {"name": "tipo", "description": "Tipo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_voto": {"name": "tipo_voto", "description": "Tipo do voto", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_cenario": {"name": "id_cenario", "description": "ID do cen\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_cenario": {"name": "descricao_cenario", "description": "Descri\u00e7\u00e3o do cen\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_candidato_poder360": {"name": "id_candidato_poder360", "description": "ID do candidato - Poder360", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_candidato": {"name": "nome_candidato", "description": "Nome do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido": {"name": "sigla_partido", "description": "Sigla do partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "condicao": {"name": "condicao", "description": "Condi\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "percentual": {"name": "percentual", "description": "Percentual", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_poder360_pesquisas/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_poder360_pesquisas/microdados.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_poder360_pesquisas"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(id_pesquisa AS STRING) id_pesquisa,\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(nome_municipio AS STRING) nome_municipio,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(data AS DATE) data,\nSAFE_CAST(data_referencia AS STRING) data_referencia,\nSAFE_CAST(instituto AS STRING) instituto,\nSAFE_CAST(contratante AS STRING) contratante,\nSAFE_CAST(orgao_registro AS STRING) orgao_registro,\nSAFE_CAST(numero_registro AS STRING) numero_registro,\nSAFE_CAST(quantidade_entrevistas AS FLOAT64) quantidade_entrevistas,\nSAFE_CAST(margem_mais AS FLOAT64) margem_mais,\nSAFE_CAST(margem_menos AS FLOAT64) margem_menos,\nSAFE_CAST(tipo AS STRING) tipo,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_voto AS STRING) tipo_voto,\nSAFE_CAST(id_cenario AS STRING) id_cenario,\nSAFE_CAST(descricao_cenario AS STRING) descricao_cenario,\nSAFE_CAST(id_candidato_poder360 AS STRING) id_candidato_poder360,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(condicao AS INT64) condicao,\nSAFE_CAST(percentual AS FLOAT64) percentual\nFROM basedosdados-staging.br_poder360_pesquisas_staging.microdados AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_poder360_pesquisas`.`microdados`"}, "model.basedosdados.bens_candidato": {"raw_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(id_tipo_item AS STRING) id_tipo_item,\nSAFE_CAST(tipo_item AS STRING) tipo_item,\nSAFE_CAST(descricao_item AS STRING) descricao_item,\nSAFE_CAST(valor_item AS FLOAT64) valor_item\nFROM basedosdados-staging.br_tse_eleicoes_staging.bens_candidato AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_tse_eleicoes", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_tse_eleicoes", "fqn": ["basedosdados", "br_tse_eleicoes", "bens_candidato"], "unique_id": "model.basedosdados.bens_candidato", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_tse_eleicoes/bens_candidato.sql", "original_file_path": "models/br_tse_eleicoes/bens_candidato.sql", "name": "bens_candidato", "alias": "bens_candidato", "checksum": {"name": "sha256", "checksum": "f3d3f2e02674c5e81bc9d17eb1872c32c04595340b0f9259ab7f4bc7863c58f0"}, "tags": [], "refs": [], "sources": [], "description": "microdados bens candidato", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da Unidade da Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_eleicao": {"name": "tipo_eleicao", "description": "Tipo da Elei\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_candidato": {"name": "sequencial_candidato", "description": "Sequencial do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_candidato_bd": {"name": "id_candidato_bd", "description": "ID Candidato - Base dos Dados", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_tipo_item": {"name": "id_tipo_item", "description": "ID Tipo Item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_item": {"name": "tipo_item", "description": "Tipo Item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_item": {"name": "descricao_item", "description": "Descri\u00e7\u00e3o do Item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_item": {"name": "valor_item", "description": "Valor do Item (R$)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_tse_eleicoes/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_tse_eleicoes/bens_candidato.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_tse_eleicoes"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(id_tipo_item AS STRING) id_tipo_item,\nSAFE_CAST(tipo_item AS STRING) tipo_item,\nSAFE_CAST(descricao_item AS STRING) descricao_item,\nSAFE_CAST(valor_item AS FLOAT64) valor_item\nFROM basedosdados-staging.br_tse_eleicoes_staging.bens_candidato AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_tse_eleicoes`.`bens_candidato`"}, "model.basedosdados.despesas_candidato": {"raw_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nSAFE_CAST(numero_candidato AS STRING) numero_candidato,\nSAFE_CAST(cpf_candidato AS STRING) cpf_candidato,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(cpf_vice_suplente AS STRING) cpf_vice_suplente,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(nome_partido AS STRING) nome_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(sequencial_despesa AS STRING) sequencial_despesa,\nSAFE_CAST(data_despesa AS DATE) data_despesa,\nSAFE_CAST(tipo_despesa AS STRING) tipo_despesa,\nSAFE_CAST(descricao_despesa AS STRING) descricao_despesa,\nSAFE_CAST(origem_despesa AS STRING) origem_despesa,\nSAFE_CAST(valor_despesa AS FLOAT64) valor_despesa,\nSAFE_CAST(tipo_prestacao_contas AS STRING) tipo_prestacao_contas,\nSAFE_CAST(data_prestacao_contas AS DATE) data_prestacao_contas,\nSAFE_CAST(sequencial_prestador_contas AS STRING) sequencial_prestador_contas,\nSAFE_CAST(cnpj_prestador_contas AS STRING) cnpj_prestador_contas,\nSAFE_CAST(cnpj_candidato AS STRING) cnpj_candidato,\nSAFE_CAST(tipo_documento AS STRING) tipo_documento,\nSAFE_CAST(numero_documento AS STRING) numero_documento,\nSAFE_CAST(especie_recurso AS STRING) especie_recurso,\nSAFE_CAST(fonte_recurso AS STRING) fonte_recurso,\nSAFE_CAST(cpf_cnpj_fornecedor AS STRING) cpf_cnpj_fornecedor,\nSAFE_CAST(nome_fornecedor AS STRING) nome_fornecedor,\nSAFE_CAST(nome_fornecedor_rf AS STRING) nome_fornecedor_rf,\nSAFE_CAST(cnae_2_fornecedor AS STRING) cnae_2_fornecedor,\nSAFE_CAST(descricao_cnae_2_fornecedor AS STRING) descricao_cnae_2_fornecedor,\nSAFE_CAST(tipo_fornecedor AS STRING) tipo_fornecedor,\nSAFE_CAST(esfera_partidaria_fornecedor AS STRING) esfera_partidaria_fornecedor,\nSAFE_CAST(sigla_uf_fornecedor AS STRING) sigla_uf_fornecedor,\nSAFE_CAST(id_municipio_tse_fornecedor AS STRING) id_municipio_tse_fornecedor,\nSAFE_CAST(sequencial_candidato_fornecedor AS STRING) sequencial_candidato_fornecedor,\nSAFE_CAST(numero_candidato_fornecedor AS STRING) numero_candidato_fornecedor,\nSAFE_CAST(numero_partido_fornecedor AS STRING) numero_partido_fornecedor,\nSAFE_CAST(sigla_partido_fornecedor AS STRING) sigla_partido_fornecedor,\nSAFE_CAST(nome_partido_fornecedor AS STRING) nome_partido_fornecedor,\nSAFE_CAST(cargo_fornecedor AS STRING) cargo_fornecedor\nFROM basedosdados-staging.br_tse_eleicoes_staging.despesas_candidato AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_tse_eleicoes", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_tse_eleicoes", "fqn": ["basedosdados", "br_tse_eleicoes", "despesas_candidato"], "unique_id": "model.basedosdados.despesas_candidato", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_tse_eleicoes/despesas_candidato.sql", "original_file_path": "models/br_tse_eleicoes/despesas_candidato.sql", "name": "despesas_candidato", "alias": "despesas_candidato", "checksum": {"name": "sha256", "checksum": "163d02fd07d137c559877be7a063de24bd0870743ca9bbcc02325fb21274bf99"}, "tags": [], "refs": [], "sources": [], "description": "microdados despesas candidato", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_eleicao": {"name": "tipo_eleicao", "description": "Tipo da elei\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da unidade da federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID Munic\u00edpio - IBGE 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio_tse": {"name": "id_municipio_tse", "description": "ID Munic\u00edpio - TSE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_candidato": {"name": "numero_candidato", "description": "N\u00famero do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_candidato": {"name": "cpf_candidato", "description": "CPF do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_candidato": {"name": "sequencial_candidato", "description": "Sequencial do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_candidato_bd": {"name": "id_candidato_bd", "description": "ID Candidato - Base dos Dados", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_candidato": {"name": "nome_candidato", "description": "Nome do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_vice_suplente": {"name": "cpf_vice_suplente", "description": "CPF do vice ou suplente", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_partido": {"name": "numero_partido", "description": "N\u00famero do partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido": {"name": "sigla_partido", "description": "Sigla do partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_partido": {"name": "nome_partido", "description": "Nome do partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo": {"name": "cargo", "description": "Cargo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_despesa": {"name": "sequencial_despesa", "description": "Sequencial da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_despesa": {"name": "data_despesa", "description": "Data da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_despesa": {"name": "tipo_despesa", "description": "Tipo da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_despesa": {"name": "descricao_despesa", "description": "Descri\u00e7\u00e3o da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origem_despesa": {"name": "origem_despesa", "description": "Origem da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_despesa": {"name": "valor_despesa", "description": "Valor da despesa", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_prestacao_contas": {"name": "tipo_prestacao_contas", "description": "Tipo de presta\u00e7\u00e3o de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_prestacao_contas": {"name": "data_prestacao_contas", "description": "Data de presta\u00e7\u00e3o de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_prestador_contas": {"name": "sequencial_prestador_contas", "description": "Sequencial do prestador de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_prestador_contas": {"name": "cnpj_prestador_contas", "description": "CNPJ do prestador de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_candidato": {"name": "cnpj_candidato", "description": "CNPJ do candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_documento": {"name": "tipo_documento", "description": "Tipo do documento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_documento": {"name": "numero_documento", "description": "N\u00famero do documento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "especie_recurso": {"name": "especie_recurso", "description": "Esp\u00e9cie do recurso", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fonte_recurso": {"name": "fonte_recurso", "description": "Fonte do recurso", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_cnpj_fornecedor": {"name": "cpf_cnpj_fornecedor", "description": "CPF ou CNPJ do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_fornecedor": {"name": "nome_fornecedor", "description": "Nome do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_fornecedor_rf": {"name": "nome_fornecedor_rf", "description": "Nome do fornecedor - Receita Federal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnae_2_fornecedor": {"name": "cnae_2_fornecedor", "description": "Classifica\u00e7\u00e3o Nacional de Atividades Econ\u00f4micas 2.0 do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_cnae_2_fornecedor": {"name": "descricao_cnae_2_fornecedor", "description": "Descri\u00e7\u00e3o da Classifica\u00e7\u00e3o Nacional de Atividades Econ\u00f4micas 2.0 do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_fornecedor": {"name": "tipo_fornecedor", "description": "Tipo do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "esfera_partidaria_fornecedor": {"name": "esfera_partidaria_fornecedor", "description": "Esfera partid\u00e1ria do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf_fornecedor": {"name": "sigla_uf_fornecedor", "description": "Sigla da unidade da federa\u00e7\u00e3o do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio_tse_fornecedor": {"name": "id_municipio_tse_fornecedor", "description": "ID Munic\u00edpio do fornecedor - TSE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_candidato_fornecedor": {"name": "sequencial_candidato_fornecedor", "description": "Sequencial do candidato fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_candidato_fornecedor": {"name": "numero_candidato_fornecedor", "description": "N\u00famero do candidato do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_partido_fornecedor": {"name": "numero_partido_fornecedor", "description": "N\u00famero do partido do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido_fornecedor": {"name": "sigla_partido_fornecedor", "description": "Sigla do partido do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_partido_fornecedor": {"name": "nome_partido_fornecedor", "description": "Nome do partido do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo_fornecedor": {"name": "cargo_fornecedor", "description": "Cargo do fornecedor", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_tse_eleicoes/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_tse_eleicoes/despesas_candidato.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_tse_eleicoes"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nSAFE_CAST(numero_candidato AS STRING) numero_candidato,\nSAFE_CAST(cpf_candidato AS STRING) cpf_candidato,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(cpf_vice_suplente AS STRING) cpf_vice_suplente,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(nome_partido AS STRING) nome_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(sequencial_despesa AS STRING) sequencial_despesa,\nSAFE_CAST(data_despesa AS DATE) data_despesa,\nSAFE_CAST(tipo_despesa AS STRING) tipo_despesa,\nSAFE_CAST(descricao_despesa AS STRING) descricao_despesa,\nSAFE_CAST(origem_despesa AS STRING) origem_despesa,\nSAFE_CAST(valor_despesa AS FLOAT64) valor_despesa,\nSAFE_CAST(tipo_prestacao_contas AS STRING) tipo_prestacao_contas,\nSAFE_CAST(data_prestacao_contas AS DATE) data_prestacao_contas,\nSAFE_CAST(sequencial_prestador_contas AS STRING) sequencial_prestador_contas,\nSAFE_CAST(cnpj_prestador_contas AS STRING) cnpj_prestador_contas,\nSAFE_CAST(cnpj_candidato AS STRING) cnpj_candidato,\nSAFE_CAST(tipo_documento AS STRING) tipo_documento,\nSAFE_CAST(numero_documento AS STRING) numero_documento,\nSAFE_CAST(especie_recurso AS STRING) especie_recurso,\nSAFE_CAST(fonte_recurso AS STRING) fonte_recurso,\nSAFE_CAST(cpf_cnpj_fornecedor AS STRING) cpf_cnpj_fornecedor,\nSAFE_CAST(nome_fornecedor AS STRING) nome_fornecedor,\nSAFE_CAST(nome_fornecedor_rf AS STRING) nome_fornecedor_rf,\nSAFE_CAST(cnae_2_fornecedor AS STRING) cnae_2_fornecedor,\nSAFE_CAST(descricao_cnae_2_fornecedor AS STRING) descricao_cnae_2_fornecedor,\nSAFE_CAST(tipo_fornecedor AS STRING) tipo_fornecedor,\nSAFE_CAST(esfera_partidaria_fornecedor AS STRING) esfera_partidaria_fornecedor,\nSAFE_CAST(sigla_uf_fornecedor AS STRING) sigla_uf_fornecedor,\nSAFE_CAST(id_municipio_tse_fornecedor AS STRING) id_municipio_tse_fornecedor,\nSAFE_CAST(sequencial_candidato_fornecedor AS STRING) sequencial_candidato_fornecedor,\nSAFE_CAST(numero_candidato_fornecedor AS STRING) numero_candidato_fornecedor,\nSAFE_CAST(numero_partido_fornecedor AS STRING) numero_partido_fornecedor,\nSAFE_CAST(sigla_partido_fornecedor AS STRING) sigla_partido_fornecedor,\nSAFE_CAST(nome_partido_fornecedor AS STRING) nome_partido_fornecedor,\nSAFE_CAST(cargo_fornecedor AS STRING) cargo_fornecedor\nFROM basedosdados-staging.br_tse_eleicoes_staging.despesas_candidato AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_tse_eleicoes`.`despesas_candidato`"}, "model.basedosdados.receitas_candidato": {"raw_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nSAFE_CAST(numero_candidato AS STRING) numero_candidato,\nSAFE_CAST(cpf_candidato AS STRING) cpf_candidato,\nSAFE_CAST(cnpj_candidato AS STRING) cnpj_candidato,\nSAFE_CAST(titulo_eleitor_candidato AS STRING) titulo_eleitor_candidato,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(cpf_vice_suplente AS STRING) cpf_vice_suplente,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(nome_partido AS STRING) nome_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(sequencial_receita AS STRING) sequencial_receita,\nSAFE_CAST(data_receita AS DATE) data_receita,\nSAFE_CAST(fonte_receita AS STRING) fonte_receita,\nSAFE_CAST(origem_receita AS STRING) origem_receita,\nSAFE_CAST(natureza_receita AS STRING) natureza_receita,\nSAFE_CAST(especie_receita AS STRING) especie_receita,\nSAFE_CAST(situacao_receita AS STRING) situacao_receita,\nSAFE_CAST(descricao_receita AS STRING) descricao_receita,\nSAFE_CAST(valor_receita AS FLOAT64) valor_receita,\nSAFE_CAST(sequencial_candidato_doador AS STRING) sequencial_candidato_doador,\nSAFE_CAST(cpf_cnpj_doador AS STRING) cpf_cnpj_doador,\nSAFE_CAST(sigla_uf_doador AS STRING) sigla_uf_doador,\nSAFE_CAST(id_municipio_tse_doador AS STRING) id_municipio_tse_doador,\nSAFE_CAST(nome_doador AS STRING) nome_doador,\nSAFE_CAST(nome_doador_rf AS STRING) nome_doador_rf,\nSAFE_CAST(cargo_candidato_doador AS STRING) cargo_candidato_doador,\nSAFE_CAST(numero_partido_doador AS STRING) numero_partido_doador,\nSAFE_CAST(sigla_partido_doador AS STRING) sigla_partido_doador,\nSAFE_CAST(nome_partido_doador AS STRING) nome_partido_doador,\nSAFE_CAST(esfera_partidaria_doador AS STRING) esfera_partidaria_doador,\nSAFE_CAST(numero_candidato_doador AS STRING) numero_candidato_doador,\nSAFE_CAST(cnae_2_doador AS STRING) cnae_2_doador,\nSAFE_CAST(descricao_cnae_2_doador AS STRING) descricao_cnae_2_doador,\nSAFE_CAST(cpf_cnpj_doador_orig AS STRING) cpf_cnpj_doador_orig,\nSAFE_CAST(nome_doador_orig AS STRING) nome_doador_orig,\nSAFE_CAST(nome_doador_orig_rf AS STRING) nome_doador_orig_rf,\nSAFE_CAST(tipo_doador_orig AS STRING) tipo_doador_orig,\nSAFE_CAST(descricao_cnae_2_doador_orig AS STRING) descricao_cnae_2_doador_orig,\nSAFE_CAST(nome_administrador AS STRING) nome_administrador,\nSAFE_CAST(cpf_administrador AS STRING) cpf_administrador,\nSAFE_CAST(numero_recibo_eleitoral AS STRING) numero_recibo_eleitoral,\nSAFE_CAST(numero_documento AS STRING) numero_documento,\nSAFE_CAST(numero_recibo_doacao AS STRING) numero_recibo_doacao,\nSAFE_CAST(numero_documento_doacao AS STRING) numero_documento_doacao,\nSAFE_CAST(tipo_prestacao_contas AS STRING) tipo_prestacao_contas,\nSAFE_CAST(data_prestacao_contas AS STRING) data_prestacao_contas,\nSAFE_CAST(sequencial_prestador_contas AS STRING) sequencial_prestador_contas,\nSAFE_CAST(cnpj_prestador_contas AS STRING) cnpj_prestador_contas,\nSAFE_CAST(entrega_conjunto AS STRING) entrega_conjunto\nFROM basedosdados-staging.br_tse_eleicoes_staging.receitas_candidato AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_tse_eleicoes", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_tse_eleicoes", "fqn": ["basedosdados", "br_tse_eleicoes", "receitas_candidato"], "unique_id": "model.basedosdados.receitas_candidato", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_tse_eleicoes/receitas_candidato.sql", "original_file_path": "models/br_tse_eleicoes/receitas_candidato.sql", "name": "receitas_candidato", "alias": "receitas_candidato", "checksum": {"name": "sha256", "checksum": "35e0a0072dfa6bc8270e2bbb07fa47795ea79cc0f4262eafba82bf5e675db0b2"}, "tags": [], "refs": [], "sources": [], "description": "microdados receitas candidato", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_eleicao": {"name": "tipo_eleicao", "description": "Tipo da Elei\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da Unidade da Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID Munic\u00edpio - IBGE 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio_tse": {"name": "id_municipio_tse", "description": "ID Munic\u00edpio - TSE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_candidato": {"name": "numero_candidato", "description": "N\u00famero do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_candidato": {"name": "cpf_candidato", "description": "CPF do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_candidato": {"name": "cnpj_candidato", "description": "CNPJ do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "titulo_eleitor_candidato": {"name": "titulo_eleitor_candidato", "description": "T\u00edtulo Eleitoral do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_candidato": {"name": "sequencial_candidato", "description": "Sequencial do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_candidato_bd": {"name": "id_candidato_bd", "description": "ID Candidato - Base dos Dados", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_candidato": {"name": "nome_candidato", "description": "Nome do Candidato", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_vice_suplente": {"name": "cpf_vice_suplente", "description": "CPF do Vice Suplente", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_partido": {"name": "numero_partido", "description": "N\u00famero do Partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_partido": {"name": "nome_partido", "description": "Nome do Partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido": {"name": "sigla_partido", "description": "Sigla do Partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo": {"name": "cargo", "description": "Cargo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_receita": {"name": "sequencial_receita", "description": "Sequencial da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_receita": {"name": "data_receita", "description": "Data da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fonte_receita": {"name": "fonte_receita", "description": "Fonte da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origem_receita": {"name": "origem_receita", "description": "Origem da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "natureza_receita": {"name": "natureza_receita", "description": "Natureza da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "especie_receita": {"name": "especie_receita", "description": "Esp\u00e9cie da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "situacao_receita": {"name": "situacao_receita", "description": "Situa\u00e7\u00e3o da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_receita": {"name": "descricao_receita", "description": "Descri\u00e7\u00e3o da Receita", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_receita": {"name": "valor_receita", "description": "Valor da Receita (R$)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_candidato_doador": {"name": "sequencial_candidato_doador", "description": "Sequencial do Candidato Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_cnpj_doador": {"name": "cpf_cnpj_doador", "description": "CPF/CNPJ do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf_doador": {"name": "sigla_uf_doador", "description": "Sigla da UF do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio_tse_doador": {"name": "id_municipio_tse_doador", "description": "ID Munic\u00edpio - TSE do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_doador": {"name": "nome_doador", "description": "Nome do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_doador_rf": {"name": "nome_doador_rf", "description": "Nome do Doador - RF", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo_candidato_doador": {"name": "cargo_candidato_doador", "description": "Cargo do Candidato Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_partido_doador": {"name": "numero_partido_doador", "description": "N\u00famero do Partido do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido_doador": {"name": "sigla_partido_doador", "description": "Sigla do Partido do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_partido_doador": {"name": "nome_partido_doador", "description": "Nome do Partido do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "esfera_partidaria_doador": {"name": "esfera_partidaria_doador", "description": "Esfera Partid\u00e1ria do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_candidato_doador": {"name": "numero_candidato_doador", "description": "N\u00famero do Candidato do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnae_2_doador": {"name": "cnae_2_doador", "description": "CNAE 2 do Doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_cnae_2_doador": {"name": "descricao_cnae_2_doador", "description": "Descri\u00e7\u00e3o da Classifica\u00e7\u00e3o Nacional de Atividades Econ\u00f4micas 2.0 do doador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_cnpj_doador_orig": {"name": "cpf_cnpj_doador_orig", "description": "CPF ou CNPJ do doador origin\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_doador_orig": {"name": "nome_doador_orig", "description": "Nome do doador origin\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_doador_orig_rf": {"name": "nome_doador_orig_rf", "description": "Nome do doador origin\u00e1rio - Receita Federal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_doador_orig": {"name": "tipo_doador_orig", "description": "Tipo do doador origin\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descricao_cnae_2_doador_orig": {"name": "descricao_cnae_2_doador_orig", "description": "Descri\u00e7\u00e3o da Classifica\u00e7\u00e3o Nacional de Atividades Econ\u00f4micas 2.0 do doador origin\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_administrador": {"name": "nome_administrador", "description": "Nome do administrador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf_administrador": {"name": "cpf_administrador", "description": "CPF do administrador", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_recibo_eleitoral": {"name": "numero_recibo_eleitoral", "description": "N\u00famero do recibo eleitoral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_documento": {"name": "numero_documento", "description": "N\u00famero do documento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_recibo_doacao": {"name": "numero_recibo_doacao", "description": "N\u00famero do recibo da doa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_documento_doacao": {"name": "numero_documento_doacao", "description": "N\u00famero do documento da doa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_prestacao_contas": {"name": "tipo_prestacao_contas", "description": "Tipo de presta\u00e7\u00e3o de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_prestacao_contas": {"name": "data_prestacao_contas", "description": "Data de presta\u00e7\u00e3o de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial_prestador_contas": {"name": "sequencial_prestador_contas", "description": "Sequencial do prestador de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_prestador_contas": {"name": "cnpj_prestador_contas", "description": "CNPJ do prestador de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "entrega_conjunto": {"name": "entrega_conjunto", "description": "Entrega em conjunto", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_tse_eleicoes/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_tse_eleicoes/receitas_candidato.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_tse_eleicoes"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(turno AS INT64) turno,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nSAFE_CAST(numero_candidato AS STRING) numero_candidato,\nSAFE_CAST(cpf_candidato AS STRING) cpf_candidato,\nSAFE_CAST(cnpj_candidato AS STRING) cnpj_candidato,\nSAFE_CAST(titulo_eleitor_candidato AS STRING) titulo_eleitor_candidato,\nSAFE_CAST(sequencial_candidato AS STRING) sequencial_candidato,\nSAFE_CAST(id_candidato_bd AS STRING) id_candidato_bd,\nSAFE_CAST(nome_candidato AS STRING) nome_candidato,\nSAFE_CAST(cpf_vice_suplente AS STRING) cpf_vice_suplente,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(nome_partido AS STRING) nome_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(sequencial_receita AS STRING) sequencial_receita,\nSAFE_CAST(data_receita AS DATE) data_receita,\nSAFE_CAST(fonte_receita AS STRING) fonte_receita,\nSAFE_CAST(origem_receita AS STRING) origem_receita,\nSAFE_CAST(natureza_receita AS STRING) natureza_receita,\nSAFE_CAST(especie_receita AS STRING) especie_receita,\nSAFE_CAST(situacao_receita AS STRING) situacao_receita,\nSAFE_CAST(descricao_receita AS STRING) descricao_receita,\nSAFE_CAST(valor_receita AS FLOAT64) valor_receita,\nSAFE_CAST(sequencial_candidato_doador AS STRING) sequencial_candidato_doador,\nSAFE_CAST(cpf_cnpj_doador AS STRING) cpf_cnpj_doador,\nSAFE_CAST(sigla_uf_doador AS STRING) sigla_uf_doador,\nSAFE_CAST(id_municipio_tse_doador AS STRING) id_municipio_tse_doador,\nSAFE_CAST(nome_doador AS STRING) nome_doador,\nSAFE_CAST(nome_doador_rf AS STRING) nome_doador_rf,\nSAFE_CAST(cargo_candidato_doador AS STRING) cargo_candidato_doador,\nSAFE_CAST(numero_partido_doador AS STRING) numero_partido_doador,\nSAFE_CAST(sigla_partido_doador AS STRING) sigla_partido_doador,\nSAFE_CAST(nome_partido_doador AS STRING) nome_partido_doador,\nSAFE_CAST(esfera_partidaria_doador AS STRING) esfera_partidaria_doador,\nSAFE_CAST(numero_candidato_doador AS STRING) numero_candidato_doador,\nSAFE_CAST(cnae_2_doador AS STRING) cnae_2_doador,\nSAFE_CAST(descricao_cnae_2_doador AS STRING) descricao_cnae_2_doador,\nSAFE_CAST(cpf_cnpj_doador_orig AS STRING) cpf_cnpj_doador_orig,\nSAFE_CAST(nome_doador_orig AS STRING) nome_doador_orig,\nSAFE_CAST(nome_doador_orig_rf AS STRING) nome_doador_orig_rf,\nSAFE_CAST(tipo_doador_orig AS STRING) tipo_doador_orig,\nSAFE_CAST(descricao_cnae_2_doador_orig AS STRING) descricao_cnae_2_doador_orig,\nSAFE_CAST(nome_administrador AS STRING) nome_administrador,\nSAFE_CAST(cpf_administrador AS STRING) cpf_administrador,\nSAFE_CAST(numero_recibo_eleitoral AS STRING) numero_recibo_eleitoral,\nSAFE_CAST(numero_documento AS STRING) numero_documento,\nSAFE_CAST(numero_recibo_doacao AS STRING) numero_recibo_doacao,\nSAFE_CAST(numero_documento_doacao AS STRING) numero_documento_doacao,\nSAFE_CAST(tipo_prestacao_contas AS STRING) tipo_prestacao_contas,\nSAFE_CAST(data_prestacao_contas AS STRING) data_prestacao_contas,\nSAFE_CAST(sequencial_prestador_contas AS STRING) sequencial_prestador_contas,\nSAFE_CAST(cnpj_prestador_contas AS STRING) cnpj_prestador_contas,\nSAFE_CAST(entrega_conjunto AS STRING) entrega_conjunto\nFROM basedosdados-staging.br_tse_eleicoes_staging.receitas_candidato AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_tse_eleicoes`.`receitas_candidato`"}, "model.basedosdados.candidatos": {"raw_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nCAST(SPLIT(id_candidato_bd, '.')[OFFSET(0)]  AS STRING) id_candidato_bd,\nCAST(SPLIT(cpf, '.')[OFFSET(0)] AS STRING) cpf,\nSAFE_CAST(titulo_eleitoral AS STRING) titulo_eleitoral,\nSAFE_CAST(sequencial AS STRING) sequencial,\nSAFE_CAST(numero AS STRING) numero,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(nome_urna AS STRING) nome_urna,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(ocupacao AS STRING) ocupacao,\nSAFE_CAST(data_nascimento AS DATE) data_nascimento,\nCAST(SPLIT(idade, '.')[OFFSET(0)] AS INT64) idade,\nSAFE_CAST(genero AS STRING) genero,\nSAFE_CAST(instrucao AS STRING) instrucao,\nSAFE_CAST(estado_civil AS STRING) estado_civil,\nSAFE_CAST(nacionalidade AS STRING) nacionalidade,\nSAFE_CAST(sigla_uf_nascimento AS STRING) sigla_uf_nascimento,\nSAFE_CAST(municipio_nascimento AS STRING) municipio_nascimento,\nSAFE_CAST(email AS STRING) email,\nSAFE_CAST(raca AS STRING) raca,\nSAFE_CAST(situacao_totalizacao AS STRING) situacao_totalizacao,\nSAFE_CAST(numero_federacao AS STRING) numero_federacao,\nSAFE_CAST(nome_federacao AS STRING) nome_federacao,\nSAFE_CAST(sigla_federacao AS STRING) sigla_federacao,\nSAFE_CAST(composicao_federacao AS STRING) composicao_federacao,\nCASE\n  WHEN prestou_contas='N' THEN 'Nao'\n  WHEN prestou_contas='S' THEN 'Sim'\nEND AS prestou_contas\nFROM basedosdados-staging.br_tse_eleicoes_staging.candidatos AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_tse_eleicoes", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_tse_eleicoes", "fqn": ["basedosdados", "br_tse_eleicoes", "candidatos"], "unique_id": "model.basedosdados.candidatos", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_tse_eleicoes/candidatos.sql", "original_file_path": "models/br_tse_eleicoes/candidatos.sql", "name": "candidatos", "alias": "candidatos", "checksum": {"name": "sha256", "checksum": "3601127e87f03cf12e30286a67ab79e0177f3d73f2fe39ca04560ab5e7a2b7b1"}, "tags": [], "refs": [], "sources": [], "description": "microdados de candidatos", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_eleicao": {"name": "tipo_eleicao", "description": "Tipo da Elei\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da Unidade da Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID Munic\u00edpio - IBGE 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio_tse": {"name": "id_municipio_tse", "description": "ID Munic\u00edpio - TSE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_candidato_bd": {"name": "id_candidato_bd", "description": "ID Candidato no Banco de Dados", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cpf": {"name": "cpf", "description": "CPF", "meta": {}, "data_type": null, "quote": null, "tags": []}, "titulo_eleitoral": {"name": "titulo_eleitoral", "description": "T\u00edtulo Eleitoral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sequencial": {"name": "sequencial", "description": "Sequencial", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero": {"name": "numero", "description": "N\u00famero", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome": {"name": "nome", "description": "Nome", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_urna": {"name": "nome_urna", "description": "Nome Urna", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_partido": {"name": "numero_partido", "description": "N\u00famero do Partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido": {"name": "sigla_partido", "description": "Sigla do Partido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo": {"name": "cargo", "description": "Cargo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "situacao": {"name": "situacao", "description": "Situa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ocupacao": {"name": "ocupacao", "description": "Ocupa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_nascimento": {"name": "data_nascimento", "description": "Data de Nascimento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "idade": {"name": "idade", "description": "Idade", "meta": {}, "data_type": null, "quote": null, "tags": []}, "genero": {"name": "genero", "description": "G\u00eanero", "meta": {}, "data_type": null, "quote": null, "tags": []}, "instrucao": {"name": "instrucao", "description": "Instru\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "estado_civil": {"name": "estado_civil", "description": "Estado Civil", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nacionalidade": {"name": "nacionalidade", "description": "Nacionalidade", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf_nascimento": {"name": "sigla_uf_nascimento", "description": "Sigla da UF de Nascimento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "municipio_nascimento": {"name": "municipio_nascimento", "description": "Munic\u00edpio de Nascimento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "E-mail", "meta": {}, "data_type": null, "quote": null, "tags": []}, "raca": {"name": "raca", "description": "Ra\u00e7a ou cor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "situacao_totalizacao": {"name": "situacao_totalizacao", "description": "Situa\u00e7\u00e3o Totaliza\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_federacao": {"name": "numero_federacao", "description": "N\u00famero Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_federacao": {"name": "nome_federacao", "description": "Nome Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_federacao": {"name": "sigla_federacao", "description": "Sigla Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "composicao_federacao": {"name": "composicao_federacao", "description": "Composi\u00e7\u00e3o Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "prestou_contas": {"name": "prestou_contas", "description": "Indicador de presta\u00e7\u00e3o de contas", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_tse_eleicoes/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_tse_eleicoes/candidatos.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_tse_eleicoes"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(tipo_eleicao AS STRING) tipo_eleicao,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_municipio_tse AS STRING) id_municipio_tse,\nCAST(SPLIT(id_candidato_bd, '.')[OFFSET(0)]  AS STRING) id_candidato_bd,\nCAST(SPLIT(cpf, '.')[OFFSET(0)] AS STRING) cpf,\nSAFE_CAST(titulo_eleitoral AS STRING) titulo_eleitoral,\nSAFE_CAST(sequencial AS STRING) sequencial,\nSAFE_CAST(numero AS STRING) numero,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(nome_urna AS STRING) nome_urna,\nSAFE_CAST(numero_partido AS STRING) numero_partido,\nSAFE_CAST(sigla_partido AS STRING) sigla_partido,\nSAFE_CAST(cargo AS STRING) cargo,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(ocupacao AS STRING) ocupacao,\nSAFE_CAST(data_nascimento AS DATE) data_nascimento,\nCAST(SPLIT(idade, '.')[OFFSET(0)] AS INT64) idade,\nSAFE_CAST(genero AS STRING) genero,\nSAFE_CAST(instrucao AS STRING) instrucao,\nSAFE_CAST(estado_civil AS STRING) estado_civil,\nSAFE_CAST(nacionalidade AS STRING) nacionalidade,\nSAFE_CAST(sigla_uf_nascimento AS STRING) sigla_uf_nascimento,\nSAFE_CAST(municipio_nascimento AS STRING) municipio_nascimento,\nSAFE_CAST(email AS STRING) email,\nSAFE_CAST(raca AS STRING) raca,\nSAFE_CAST(situacao_totalizacao AS STRING) situacao_totalizacao,\nSAFE_CAST(numero_federacao AS STRING) numero_federacao,\nSAFE_CAST(nome_federacao AS STRING) nome_federacao,\nSAFE_CAST(sigla_federacao AS STRING) sigla_federacao,\nSAFE_CAST(composicao_federacao AS STRING) composicao_federacao,\nCASE\n  WHEN prestou_contas='N' THEN 'Nao'\n  WHEN prestou_contas='S' THEN 'Sim'\nEND AS prestou_contas\nFROM basedosdados-staging.br_tse_eleicoes_staging.candidatos AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_tse_eleicoes`.`candidatos`"}, "model.basedosdados.my_first_dbt_model": {"raw_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n{{ config(materialized='table') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "example", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "example", "fqn": ["basedosdados", "example", "my_first_dbt_model"], "unique_id": "model.basedosdados.my_first_dbt_model", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "example/my_first_dbt_model.sql", "original_file_path": "models/example/my_first_dbt_model.sql", "name": "my_first_dbt_model", "alias": "my_first_dbt_model", "checksum": {"name": "sha256", "checksum": "842251f5ed1d97920d3748d9686b8c05a3a0071ec7990f948f36796491788aed"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/example/my_first_dbt_model.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "example"}, "created_at": 1663801356, "compiled_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`example`.`my_first_dbt_model`"}, "model.basedosdados.my_second_dbt_model": {"raw_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.basedosdados.my_first_dbt_model"]}, "config": {"enabled": true, "alias": null, "schema": "example", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "example", "fqn": ["basedosdados", "example", "my_second_dbt_model"], "unique_id": "model.basedosdados.my_second_dbt_model", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "example/my_second_dbt_model.sql", "original_file_path": "models/example/my_second_dbt_model.sql", "name": "my_second_dbt_model", "alias": "my_second_dbt_model", "checksum": {"name": "sha256", "checksum": "b3aa346f283f3c9c9a75936f3b80d2572ca9ab39aee4c02b30553d3fe2ba5692"}, "tags": [], "refs": [["my_first_dbt_model"]], "sources": [], "description": "A starter dbt model", "columns": {"id": {"name": "id", "description": "The primary key for this table", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/example/schema.yml", "compiled_path": "target/compiled/basedosdados/models/example/my_second_dbt_model.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "example"}, "created_at": 1663801356, "compiled_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom `basedosdados-dev`.`example`.`my_first_dbt_model`\nwhere id = 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`example`.`my_second_dbt_model`"}, "model.basedosdados.br_ibge_ipca15__mes_categoria_rm": {"raw_sql": "{{ config(alias='mes_categoria_rm', schema='br_ibge_ipca15') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_rm AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_rm", "schema": "br_ibge_ipca15", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca15", "fqn": ["basedosdados", "br_ibge_ipca15", "br_ibge_ipca15__mes_categoria_rm"], "unique_id": "model.basedosdados.br_ibge_ipca15__mes_categoria_rm", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca15/br_ibge_ipca15__mes_categoria_rm.sql", "original_file_path": "models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_rm.sql", "name": "br_ibge_ipca15__mes_categoria_rm", "alias": "mes_categoria_rm", "checksum": {"name": "sha256", "checksum": "07b674b4375905046a5966fc5cddec58f2de2ac07e7092c74e346226e2b4f19e"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_rm", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_regiao_metropolitana": {"name": "id_regiao_metropolitana", "description": "ID da Regi\u00e3o Metropolitana - IBGE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca15/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_rm.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca15", "alias": "mes_categoria_rm"}, "created_at": 1663801356, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_rm AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca15`.`mes_categoria_rm`"}, "model.basedosdados.br_ibge_ipca15__mes_categoria_municipio": {"raw_sql": "{{ config(alias='mes_categoria_municipio', schema='br_ibge_ipca15') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_municipio AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_municipio", "schema": "br_ibge_ipca15", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca15", "fqn": ["basedosdados", "br_ibge_ipca15", "br_ibge_ipca15__mes_categoria_municipio"], "unique_id": "model.basedosdados.br_ibge_ipca15__mes_categoria_municipio", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca15/br_ibge_ipca15__mes_categoria_municipio.sql", "original_file_path": "models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_municipio.sql", "name": "br_ibge_ipca15__mes_categoria_municipio", "alias": "mes_categoria_municipio", "checksum": {"name": "sha256", "checksum": "9c3afa2ed1185523f4a35301b3f4f7fbc7843affa1781c6225474720e3f23b99"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_municipio", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID do Munic\u00edpio IBGE - 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca15/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_municipio.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca15", "alias": "mes_categoria_municipio"}, "created_at": 1663801356, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_municipio AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca15`.`mes_categoria_municipio`"}, "model.basedosdados.br_ibge_ipca15__mes_brasil": {"raw_sql": "{{ config(alias='mes_brasil', schema='br_ibge_ipca15') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_brasil", "schema": "br_ibge_ipca15", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca15", "fqn": ["basedosdados", "br_ibge_ipca15", "br_ibge_ipca15__mes_brasil"], "unique_id": "model.basedosdados.br_ibge_ipca15__mes_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca15/br_ibge_ipca15__mes_brasil.sql", "original_file_path": "models/br_ibge_ipca15/br_ibge_ipca15__mes_brasil.sql", "name": "br_ibge_ipca15__mes_brasil", "alias": "mes_brasil", "checksum": {"name": "sha256", "checksum": "a0b5423875fb39b868995cd808fcab9e6f7de1b850063b73fe3dc717703472e1"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "N\u00famero \u00edndice (dez 1993 = 100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_trimestral": {"name": "variacao_trimestral", "description": "Varia\u00e7\u00e3o percentual trimestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_semestral": {"name": "variacao_semestral", "description": "Varia\u00e7\u00e3o percentual semestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual anual", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca15/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca15/br_ibge_ipca15__mes_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca15", "alias": "mes_brasil"}, "created_at": 1663801356, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca15`.`mes_brasil`"}, "model.basedosdados.br_ibge_ipca15__mes_categoria_brasil": {"raw_sql": "{{ config(alias='mes_categoria_brasil', schema='br_ibge_ipca15') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_brasil", "schema": "br_ibge_ipca15", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca15", "fqn": ["basedosdados", "br_ibge_ipca15", "br_ibge_ipca15__mes_categoria_brasil"], "unique_id": "model.basedosdados.br_ibge_ipca15__mes_categoria_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca15/br_ibge_ipca15__mes_categoria_brasil.sql", "original_file_path": "models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_brasil.sql", "name": "br_ibge_ipca15__mes_categoria_brasil", "alias": "mes_categoria_brasil", "checksum": {"name": "sha256", "checksum": "8eabd547b315ab90b078d03c4fb5b332aaa8ff1ee56c7b9970e0c793631b6db8"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca15/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca15/br_ibge_ipca15__mes_categoria_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca15", "alias": "mes_categoria_brasil"}, "created_at": 1663801356, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca15_staging.mes_categoria_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca15`.`mes_categoria_brasil`"}, "model.basedosdados.columns": {"raw_sql": "SELECT\n  SAFE_CAST(table_id AS STRING) table_id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(bigquery_type AS STRING) bigquery_type,\n  SAFE_CAST(description AS STRING) description,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(covered_by_dictionary AS STRING) covered_by_dictionary,\n  SAFE_CAST(directory_column AS STRING) directory_column,\n  SAFE_CAST(measurement_unit AS STRING) measurement_unit,\n  SAFE_CAST(has_sensitive_data AS STRING) has_sensitive_data,\n  SAFE_CAST(observations AS STRING) observations,\n  SAFE_CAST(is_in_staging AS STRING) is_in_staging,\n  SAFE_CAST(is_partition AS STRING) is_partition\nFROM `basedosdados-dev.br_bd_metadados_staging.columns` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "columns"], "unique_id": "model.basedosdados.columns", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/columns.sql", "original_file_path": "models/br_bd_metadados/columns.sql", "name": "columns", "alias": "columns", "checksum": {"name": "sha256", "checksum": "1a28fb83837cbeecd7be6be980058b34a05d30ad6d518a6d5a24c049bb862266"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on columns in the BD+ platform.", "columns": {"table_id": {"name": "table_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bigquery_type": {"name": "bigquery_type", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "temporal_coverage": {"name": "temporal_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "covered_by_dictionary": {"name": "covered_by_dictionary", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "directory_column": {"name": "directory_column", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "measurement_unit": {"name": "measurement_unit", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "has_sensitive_data": {"name": "has_sensitive_data", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observations": {"name": "observations", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_in_staging": {"name": "is_in_staging", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_partition": {"name": "is_partition", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/columns.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  SAFE_CAST(table_id AS STRING) table_id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(bigquery_type AS STRING) bigquery_type,\n  SAFE_CAST(description AS STRING) description,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(covered_by_dictionary AS STRING) covered_by_dictionary,\n  SAFE_CAST(directory_column AS STRING) directory_column,\n  SAFE_CAST(measurement_unit AS STRING) measurement_unit,\n  SAFE_CAST(has_sensitive_data AS STRING) has_sensitive_data,\n  SAFE_CAST(observations AS STRING) observations,\n  SAFE_CAST(is_in_staging AS STRING) is_in_staging,\n  SAFE_CAST(is_partition AS STRING) is_partition\nFROM `basedosdados-dev.br_bd_metadados_staging.columns` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`columns`"}, "model.basedosdados.external_links": {"raw_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS date) date_created,\n  SAFE_CAST(date_last_modified AS date) date_last_modified,\n  SAFE_CAST(url AS STRING) url,\n  SAFE_CAST(language AS STRING) language,\n  SAFE_CAST(has_structured_data AS STRING) has_structured_data,\n  SAFE_CAST(has_api AS STRING) has_api,\n  SAFE_CAST(is_free AS STRING) is_free,\n  SAFE_CAST(requires_registration AS STRING) requires_registration,\n  SAFE_CAST(availability AS STRING) availability,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level\nFROM `basedosdados-dev.br_bd_metadados_staging.external_links` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "external_links"], "unique_id": "model.basedosdados.external_links", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/external_links.sql", "original_file_path": "models/br_bd_metadados/external_links.sql", "name": "external_links", "alias": "external_links", "checksum": {"name": "sha256", "checksum": "5afd44fae7f2a0cd980860440c373257a0cf359bd4399ca7acff43f66cb7e450"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on external links in the BD+ platform.", "columns": {"dataset_id": {"name": "dataset_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_last_modified": {"name": "date_last_modified", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "language": {"name": "language", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "has_structured_data": {"name": "has_structured_data", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "has_api": {"name": "has_api", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "is_free": {"name": "is_free", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requires_registration": {"name": "requires_registration", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "availability": {"name": "availability", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "spatial_coverage": {"name": "spatial_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "temporal_coverage": {"name": "temporal_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "update_frequency": {"name": "update_frequency", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observation_level": {"name": "observation_level", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/external_links.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS date) date_created,\n  SAFE_CAST(date_last_modified AS date) date_last_modified,\n  SAFE_CAST(url AS STRING) url,\n  SAFE_CAST(language AS STRING) language,\n  SAFE_CAST(has_structured_data AS STRING) has_structured_data,\n  SAFE_CAST(has_api AS STRING) has_api,\n  SAFE_CAST(is_free AS STRING) is_free,\n  SAFE_CAST(requires_registration AS STRING) requires_registration,\n  SAFE_CAST(availability AS STRING) availability,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level\nFROM `basedosdados-dev.br_bd_metadados_staging.external_links` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`external_links`"}, "model.basedosdados.organizations": {"raw_sql": "SELECT \n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(description AS STRING) description,\n  SAFE_CAST(display_name AS STRING) display_name,\n  SAFE_CAST(title AS STRING) title,\n  SAFE_CAST(package_count AS INT64) package_count,\n  SAFE_CAST(date_created AS DATE) date_created,\nFROM `basedosdados-dev.br_bd_metadados_staging.organizations` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "organizations"], "unique_id": "model.basedosdados.organizations", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/organizations.sql", "original_file_path": "models/br_bd_metadados/organizations.sql", "name": "organizations", "alias": "organizations", "checksum": {"name": "sha256", "checksum": "8cc6bb7a7163094d0e0fff6d78cb6fcae9c9dbd04cd0d161c58c55d9729ddf42"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on organizations in the BD+ platform.", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "display_name": {"name": "display_name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "package_count": {"name": "package_count", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/organizations.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT \n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(description AS STRING) description,\n  SAFE_CAST(display_name AS STRING) display_name,\n  SAFE_CAST(title AS STRING) title,\n  SAFE_CAST(package_count AS INT64) package_count,\n  SAFE_CAST(date_created AS DATE) date_created,\nFROM `basedosdados-dev.br_bd_metadados_staging.organizations` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`organizations`"}, "model.basedosdados.tables": {"raw_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level,\n  SAFE_CAST(number_rows AS INT64) number_rows,\n  SAFE_CAST(number_columns AS INT64) number_columns,\n  SAFE_CAST(outdated AS INT64) outdated\nFROM `basedosdados-dev.br_bd_metadados_staging.tables` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "tables"], "unique_id": "model.basedosdados.tables", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/tables.sql", "original_file_path": "models/br_bd_metadados/tables.sql", "name": "tables", "alias": "tables", "checksum": {"name": "sha256", "checksum": "5c13f3fe376e0e83ee6a5599254f60eb8cd9f151aa17c94a6cec00b8993f2b19"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on tables in the BD+ platform.", "columns": {"dataset_id": {"name": "dataset_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "table_id": {"name": "table_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_last_modified": {"name": "date_last_modified", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "spatial_coverage": {"name": "spatial_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "temporal_coverage": {"name": "temporal_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "update_frequency": {"name": "update_frequency", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observation_level": {"name": "observation_level", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "number_rows": {"name": "number_rows", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "number_columns": {"name": "number_columns", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "outdated": {"name": "outdated", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/tables.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level,\n  SAFE_CAST(number_rows AS INT64) number_rows,\n  SAFE_CAST(number_columns AS INT64) number_columns,\n  SAFE_CAST(outdated AS INT64) outdated\nFROM `basedosdados-dev.br_bd_metadados_staging.tables` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`tables`"}, "model.basedosdados.information_requests": {"raw_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(url AS STRING) url,\n  SAFE_CAST(origin AS STRING) origin,\n  SAFE_CAST(number AS STRING) number,\n  SAFE_CAST(opening_date AS DATE) opening_date,\n  SAFE_CAST(requested_by AS STRING) requested_by,\n  SAFE_CAST(status AS STRING) status,\n  SAFE_CAST(data_url AS STRING) data_url,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level\nFROM `basedosdados-dev.br_bd_metadados_staging.information_requests` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "information_requests"], "unique_id": "model.basedosdados.information_requests", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/information_requests.sql", "original_file_path": "models/br_bd_metadados/information_requests.sql", "name": "information_requests", "alias": "information_requests", "checksum": {"name": "sha256", "checksum": "ee554efb4133dd3ee39cb617737348ea89934d148fac9a72d744503442752e62"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on information requests in the BD+ platform.", "columns": {"dataset_id": {"name": "dataset_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_last_modified": {"name": "date_last_modified", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin": {"name": "origin", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "number": {"name": "number", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "opening_date": {"name": "opening_date", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requested_by": {"name": "requested_by", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_url": {"name": "data_url", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "spatial_coverage": {"name": "spatial_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "temporal_coverage": {"name": "temporal_coverage", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "update_frequency": {"name": "update_frequency", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observation_level": {"name": "observation_level", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/information_requests.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(url AS STRING) url,\n  SAFE_CAST(origin AS STRING) origin,\n  SAFE_CAST(number AS STRING) number,\n  SAFE_CAST(opening_date AS DATE) opening_date,\n  SAFE_CAST(requested_by AS STRING) requested_by,\n  SAFE_CAST(status AS STRING) status,\n  SAFE_CAST(data_url AS STRING) data_url,\n  SAFE_CAST(spatial_coverage AS STRING) spatial_coverage,\n  SAFE_CAST(temporal_coverage AS STRING) temporal_coverage,\n  SAFE_CAST(update_frequency AS STRING) update_frequency,\n  SAFE_CAST(observation_level AS STRING) observation_level\nFROM `basedosdados-dev.br_bd_metadados_staging.information_requests` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`information_requests`"}, "model.basedosdados.resources": {"raw_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(type AS STRING) type\nFROM `basedosdados-dev.br_bd_metadados_staging.resources` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "resources"], "unique_id": "model.basedosdados.resources", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/resources.sql", "original_file_path": "models/br_bd_metadados/resources.sql", "name": "resources", "alias": "resources", "checksum": {"name": "sha256", "checksum": "f7263f91bfdfc4ca559fde9632c10a14ac4a7402e9268058084b6f7133ca9e4f"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on resources in the BD+ platform.", "columns": {"dataset_id": {"name": "dataset_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_last_modified": {"name": "date_last_modified", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/resources.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  SAFE_CAST(dataset_id AS STRING) dataset_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(type AS STRING) type\nFROM `basedosdados-dev.br_bd_metadados_staging.resources` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`resources`"}, "model.basedosdados.datasets": {"raw_sql": "SELECT \n  SAFE_CAST(organization_id AS STRING) organization_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(title AS STRING) title,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(themes AS STRING) themes,\n  SAFE_CAST(tags AS STRING) tags\nFROM `basedosdados-dev.br_bd_metadados_staging.datasets` AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_metadados", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_metadados", "fqn": ["basedosdados", "br_bd_metadados", "datasets"], "unique_id": "model.basedosdados.datasets", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_metadados/datasets.sql", "original_file_path": "models/br_bd_metadados/datasets.sql", "name": "datasets", "alias": "datasets", "checksum": {"name": "sha256", "checksum": "b70f410cbd2758778d84972ac81113b06acce51b416c178b6820be6487de0c59"}, "tags": [], "refs": [], "sources": [], "description": "Metadata on datasets in the BD+ platform.", "columns": {"organization_id": {"name": "organization_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_created": {"name": "date_created", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_last_modified": {"name": "date_last_modified", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "themes": {"name": "themes", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_metadados/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_metadados/datasets.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_metadados"}, "created_at": 1663801356, "compiled_sql": "SELECT \n  SAFE_CAST(organization_id AS STRING) organization_id,\n  SAFE_CAST(id AS STRING) id,\n  SAFE_CAST(name AS STRING) name,\n  SAFE_CAST(title AS STRING) title,\n  SAFE_CAST(date_created AS DATE) date_created,\n  SAFE_CAST(date_last_modified AS DATE) date_last_modified,\n  SAFE_CAST(themes AS STRING) themes,\n  SAFE_CAST(tags AS STRING) tags\nFROM `basedosdados-dev.br_bd_metadados_staging.datasets` AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_metadados`.`datasets`"}, "model.basedosdados.twitter_metrics_agg": {"raw_sql": "SELECT\n  EXTRACT(DATE FROM TIMESTAMP_MILLIS(upload_ts*1000)) AS upload_day,\n  SUM(retweet_count) AS retweets,\n  SUM(reply_count) AS replies,\n  SUM(like_count) AS likes,\n  SUM(quote_count) AS quote_tweets,\n  SUM(impression_count) AS impressions,\n  SUM(user_profile_clicks) AS profile_clicks,\n  SUM(url_link_clicks) AS links_clicks,\n  ANY_VALUE(following_count) AS followings,\n  ANY_VALUE(followers_count) AS followers,\n  ANY_VALUE(tweet_count) AS tweets,\n  ANY_VALUE(listed_count) AS listed\nFROM `basedosdados-dev.br_bd_indicadores.twitter_metrics`\nGROUP BY upload_day\nORDER BY upload_day", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_indicadores", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_indicadores", "fqn": ["basedosdados", "br_bd_indicadores", "twitter_metrics_agg"], "unique_id": "model.basedosdados.twitter_metrics_agg", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_indicadores/twitter_metrics_agg.sql", "original_file_path": "models/br_bd_indicadores/twitter_metrics_agg.sql", "name": "twitter_metrics_agg", "alias": "twitter_metrics_agg", "checksum": {"name": "sha256", "checksum": "83c37ac27a675ac206e6d63a6dfd4dc21de301ffb4c4c4e7591302ffb11ecf97"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for twitter_metrics_agg", "columns": {"upload_day": {"name": "upload_day", "description": "day of data extraction [partition variable]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "retweets": {"name": "retweets", "description": "total day's retweets", "meta": {}, "data_type": null, "quote": null, "tags": []}, "replies": {"name": "replies", "description": "total day's replies", "meta": {}, "data_type": null, "quote": null, "tags": []}, "likes": {"name": "likes", "description": "total day's likes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "quote_tweets": {"name": "quote_tweets", "description": "total day's quote tweets", "meta": {}, "data_type": null, "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "total day's impressions", "meta": {}, "data_type": null, "quote": null, "tags": []}, "profile_clicks": {"name": "profile_clicks", "description": "total day's profile clicks", "meta": {}, "data_type": null, "quote": null, "tags": []}, "links_clicks": {"name": "links_clicks", "description": "total day's clicks in embeded tweet links", "meta": {}, "data_type": null, "quote": null, "tags": []}, "followings": {"name": "followings", "description": "total followings up to upload_day", "meta": {}, "data_type": null, "quote": null, "tags": []}, "followers": {"name": "followers", "description": "total followers up to upload_day", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tweets": {"name": "tweets", "description": "total tweets up to upload_day", "meta": {}, "data_type": null, "quote": null, "tags": []}, "listed": {"name": "listed", "description": "total list that BD's account was listed up to upload_day", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_bd_indicadores/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_bd_indicadores/twitter_metrics_agg.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_bd_indicadores"}, "created_at": 1663801356, "compiled_sql": "SELECT\n  EXTRACT(DATE FROM TIMESTAMP_MILLIS(upload_ts*1000)) AS upload_day,\n  SUM(retweet_count) AS retweets,\n  SUM(reply_count) AS replies,\n  SUM(like_count) AS likes,\n  SUM(quote_count) AS quote_tweets,\n  SUM(impression_count) AS impressions,\n  SUM(user_profile_clicks) AS profile_clicks,\n  SUM(url_link_clicks) AS links_clicks,\n  ANY_VALUE(following_count) AS followings,\n  ANY_VALUE(followers_count) AS followers,\n  ANY_VALUE(tweet_count) AS tweets,\n  ANY_VALUE(listed_count) AS listed\nFROM `basedosdados-dev.br_bd_indicadores.twitter_metrics`\nGROUP BY upload_day\nORDER BY upload_day", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_indicadores`.`twitter_metrics_agg`"}, "model.basedosdados.twitter_metrics": {"raw_sql": "{{\n    config(\n        materialized='incremental',\n        partition_by={\n            \"field\": \"upload_day\",\n            \"data_type\": \"date\",\n            \"granularity\": \"month\",\n        }\n    )\n}}\n\n\nSELECT *\nFROM\n(SELECT\nSAFE_CAST(upload_ts AS INT64) upload_ts,\nEXTRACT(DATE FROM TIMESTAMP_MILLIS(upload_ts*1000)) AS upload_day,\nSAFE_CAST(id AS STRING) id,\nSAFE_CAST(text AS STRING) text,\nSAFE_CAST(created_at AS STRING) created_at,\nSAFE_CAST(retweet_count AS INT64) retweet_count,\nSAFE_CAST(reply_count AS INT64) reply_count,\nSAFE_CAST(like_count AS INT64) like_count,\nSAFE_CAST(quote_count AS INT64) quote_count,\nSAFE_CAST(impression_count AS FLOAT64) impression_count,\nSAFE_CAST(user_profile_clicks AS FLOAT64) user_profile_clicks,\nSAFE_CAST(url_link_clicks AS FLOAT64) url_link_clicks,\nSAFE_CAST(following_count AS INT64) following_count,\nSAFE_CAST(followers_count AS INT64) followers_count,\nSAFE_CAST(tweet_count AS INT64) tweet_count,\nSAFE_CAST(listed_count AS INT64) listed_count\nFROM `basedosdados-dev.br_bd_indicadores_staging.twitter_metrics`)\nWHERE\n    upload_day <= CURRENT_DATE('America/Sao_Paulo')\n\n{% if is_incremental() %}\n\n{% set max_partition = run_query(\"SELECT gr FROM (SELECT IF(max(upload_day) > CURRENT_DATE('America/Sao_Paulo'), CURRENT_DATE('America/Sao_Paulo'), max(upload_day)) as gr FROM \" ~ this ~ \")\").columns[0].values()[0] %}\n\nAND\n    upload_day > (\"{{ max_partition }}\")\n\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.run_query"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_bd_indicadores", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "partition_by": {"field": "upload_day", "data_type": "date", "granularity": "month"}, "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_bd_indicadores", "fqn": ["basedosdados", "br_bd_indicadores", "twitter_metrics"], "unique_id": "model.basedosdados.twitter_metrics", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_bd_indicadores/twitter_metrics.sql", "original_file_path": "models/br_bd_indicadores/twitter_metrics.sql", "name": "twitter_metrics", "alias": "twitter_metrics", "checksum": {"name": "sha256", "checksum": "b7189b4577253d1f1278cf91c3094a52f9d8786a9591603d10d71d16ea624df0"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/br_bd_indicadores/twitter_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "incremental", "schema": "br_bd_indicadores", "partition_by": {"field": "upload_day", "data_type": "date", "granularity": "month"}}, "created_at": 1663801356, "compiled_sql": "\n\n\nSELECT *\nFROM\n(SELECT\nSAFE_CAST(upload_ts AS INT64) upload_ts,\nEXTRACT(DATE FROM TIMESTAMP_MILLIS(upload_ts*1000)) AS upload_day,\nSAFE_CAST(id AS STRING) id,\nSAFE_CAST(text AS STRING) text,\nSAFE_CAST(created_at AS STRING) created_at,\nSAFE_CAST(retweet_count AS INT64) retweet_count,\nSAFE_CAST(reply_count AS INT64) reply_count,\nSAFE_CAST(like_count AS INT64) like_count,\nSAFE_CAST(quote_count AS INT64) quote_count,\nSAFE_CAST(impression_count AS FLOAT64) impression_count,\nSAFE_CAST(user_profile_clicks AS FLOAT64) user_profile_clicks,\nSAFE_CAST(url_link_clicks AS FLOAT64) url_link_clicks,\nSAFE_CAST(following_count AS INT64) following_count,\nSAFE_CAST(followers_count AS INT64) followers_count,\nSAFE_CAST(tweet_count AS INT64) tweet_count,\nSAFE_CAST(listed_count AS INT64) listed_count\nFROM `basedosdados-dev.br_bd_indicadores_staging.twitter_metrics`)\nWHERE\n    upload_day <= CURRENT_DATE('America/Sao_Paulo')\n\n\n\n\n\nAND\n    upload_day > (\"2022-09-21\")\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_bd_indicadores`.`twitter_metrics`"}, "model.basedosdados.pessoa_fisica": {"raw_sql": "SELECT \nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(data_registro AS DATE) data_registro,\nSAFE_CAST(data_cancelamento AS DATE) data_cancelamento,\nSAFE_CAST(motivo_cancelamento AS STRING) motivo_cancelamento,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(data_inicio_situacao AS DATE) data_inicio_situacao,\nSAFE_CAST(categoria_registro AS STRING) categoria_registro\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.pessoa_fisica AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_cvm_administradores_carteira", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_cvm_administradores_carteira", "fqn": ["basedosdados", "br_cvm_administradores_carteira", "pessoa_fisica"], "unique_id": "model.basedosdados.pessoa_fisica", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_cvm_administradores_carteira/pessoa_fisica.sql", "original_file_path": "models/br_cvm_administradores_carteira/pessoa_fisica.sql", "name": "pessoa_fisica", "alias": "pessoa_fisica", "checksum": {"name": "sha256", "checksum": "814ba652b6326d26697a63ed58c738cc4478fd7aa9ce7b46a5ed0edd619f2872"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for pessoa_fisica", "columns": {"nome": {"name": "nome", "description": "Nome", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_registro": {"name": "data_registro", "description": "Data de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_cancelamento": {"name": "data_cancelamento", "description": "Data de cancelamento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "motivo_cancelamento": {"name": "motivo_cancelamento", "description": "Motivo de cancelamento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "situacao": {"name": "situacao", "description": "Situa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_inicio_situacao": {"name": "data_inicio_situacao", "description": "Data de in\u00edcio da situa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria_registro": {"name": "categoria_registro", "description": "Categoria de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_cvm_administradores_carteira/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_cvm_administradores_carteira/pessoa_fisica.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_cvm_administradores_carteira"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(data_registro AS DATE) data_registro,\nSAFE_CAST(data_cancelamento AS DATE) data_cancelamento,\nSAFE_CAST(motivo_cancelamento AS STRING) motivo_cancelamento,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(data_inicio_situacao AS DATE) data_inicio_situacao,\nSAFE_CAST(categoria_registro AS STRING) categoria_registro\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.pessoa_fisica AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_cvm_administradores_carteira`.`pessoa_fisica`"}, "model.basedosdados.pessoa_juridica": {"raw_sql": "SELECT \nSAFE_CAST(cnpj AS STRING) cnpj,\nSAFE_CAST(denominacao_social AS STRING) denominacao_social,\nSAFE_CAST(denominacao_comercial AS STRING) denominacao_comercial,\nSAFE_CAST(data_registro AS DATE) data_registro,\nSAFE_CAST(data_cancelamento AS DATE) data_cancelamento,\nSAFE_CAST(motivo_cancelamento AS STRING) motivo_cancelamento,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(data_inicio_situacao AS DATE) data_inicio_situacao,\nSAFE_CAST(categoria_registro AS STRING) categoria_registro,\nSAFE_CAST(subcategoria_registro AS STRING) subcategoria_registro,\nSAFE_CAST(controle_acionario AS STRING) controle_acionario,\nSAFE_CAST(tipo_endereco AS STRING) tipo_endereco,\nSAFE_CAST(logradouro AS STRING) logradouro,\nSAFE_CAST(complemento AS STRING) complemento,\nSAFE_CAST(bairro AS STRING) bairro,\nSAFE_CAST(municipio AS STRING) municipio,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(cep AS STRING) cep,\nSAFE_CAST(ddd AS STRING) ddd,\nSAFE_CAST(telefone AS STRING) telefone,\nSAFE_CAST(valor_patrimonial_liquido AS STRING) valor_patrimonial_liquido,\nSAFE_CAST(data_patrimonio_liquido AS DATE) data_patrimonio_liquido,\nSAFE_CAST(email AS STRING) email,\nSAFE_CAST(website AS STRING) website\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.pessoa_juridica AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_cvm_administradores_carteira", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_cvm_administradores_carteira", "fqn": ["basedosdados", "br_cvm_administradores_carteira", "pessoa_juridica"], "unique_id": "model.basedosdados.pessoa_juridica", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_cvm_administradores_carteira/pessoa_juridica.sql", "original_file_path": "models/br_cvm_administradores_carteira/pessoa_juridica.sql", "name": "pessoa_juridica", "alias": "pessoa_juridica", "checksum": {"name": "sha256", "checksum": "749b8267946b2deed88305ceb65d3b41305039c29c37383c7adbccaf7241213d"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for pessoa_juridica", "columns": {"cnpj": {"name": "cnpj", "description": "Cadastro Nacional de Pessoas Jur\u00eddicas (CNPJ)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "denominacao_social": {"name": "denominacao_social", "description": "Denomina\u00e7\u00e3o social", "meta": {}, "data_type": null, "quote": null, "tags": []}, "denominacao_comercial": {"name": "denominacao_comercial", "description": "Denomina\u00e7\u00e3o comercial", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_registro": {"name": "data_registro", "description": "Data de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_cancelamento": {"name": "data_cancelamento", "description": "Data de cancelamento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "motivo_cancelamento": {"name": "motivo_cancelamento", "description": "Motivo de cancelamento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "situacao": {"name": "situacao", "description": "Situa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_inicio_situacao": {"name": "data_inicio_situacao", "description": "Data de in\u00edcio da situa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria_registro": {"name": "categoria_registro", "description": "Categoria de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subcategoria_registro": {"name": "subcategoria_registro", "description": "Subcategoria de registro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "controle_acionario": {"name": "controle_acionario", "description": "Controle acion\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_endereco": {"name": "tipo_endereco", "description": "Tipo de endere\u00e7o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "logradouro": {"name": "logradouro", "description": "Logradouro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "complemento": {"name": "complemento", "description": "Complemento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bairro": {"name": "bairro", "description": "Bairro", "meta": {}, "data_type": null, "quote": null, "tags": []}, "municipio": {"name": "municipio", "description": "Munic\u00edpio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "Sigla da Unidade da Federa\u00e7\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cep": {"name": "cep", "description": "CEP", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ddd": {"name": "ddd", "description": "C\u00f3digo DDD", "meta": {}, "data_type": null, "quote": null, "tags": []}, "telefone": {"name": "telefone", "description": "Telefone", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_patrimonial_liquido": {"name": "valor_patrimonial_liquido", "description": "Valor Patrimonial L\u00edquido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_patrimonio_liquido": {"name": "data_patrimonio_liquido", "description": "Data Patrim\u00f4nio L\u00edquido", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "Email", "meta": {}, "data_type": null, "quote": null, "tags": []}, "website": {"name": "website", "description": "Website", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_cvm_administradores_carteira/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_cvm_administradores_carteira/pessoa_juridica.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_cvm_administradores_carteira"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(cnpj AS STRING) cnpj,\nSAFE_CAST(denominacao_social AS STRING) denominacao_social,\nSAFE_CAST(denominacao_comercial AS STRING) denominacao_comercial,\nSAFE_CAST(data_registro AS DATE) data_registro,\nSAFE_CAST(data_cancelamento AS DATE) data_cancelamento,\nSAFE_CAST(motivo_cancelamento AS STRING) motivo_cancelamento,\nSAFE_CAST(situacao AS STRING) situacao,\nSAFE_CAST(data_inicio_situacao AS DATE) data_inicio_situacao,\nSAFE_CAST(categoria_registro AS STRING) categoria_registro,\nSAFE_CAST(subcategoria_registro AS STRING) subcategoria_registro,\nSAFE_CAST(controle_acionario AS STRING) controle_acionario,\nSAFE_CAST(tipo_endereco AS STRING) tipo_endereco,\nSAFE_CAST(logradouro AS STRING) logradouro,\nSAFE_CAST(complemento AS STRING) complemento,\nSAFE_CAST(bairro AS STRING) bairro,\nSAFE_CAST(municipio AS STRING) municipio,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(cep AS STRING) cep,\nSAFE_CAST(ddd AS STRING) ddd,\nSAFE_CAST(telefone AS STRING) telefone,\nSAFE_CAST(valor_patrimonial_liquido AS STRING) valor_patrimonial_liquido,\nSAFE_CAST(data_patrimonio_liquido AS DATE) data_patrimonio_liquido,\nSAFE_CAST(email AS STRING) email,\nSAFE_CAST(website AS STRING) website\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.pessoa_juridica AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_cvm_administradores_carteira`.`pessoa_juridica`"}, "model.basedosdados.responsavel": {"raw_sql": "SELECT \nSAFE_CAST(cnpj AS STRING) cnpj,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(tipo AS STRING) tipo\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.responsavel AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_cvm_administradores_carteira", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_cvm_administradores_carteira", "fqn": ["basedosdados", "br_cvm_administradores_carteira", "responsavel"], "unique_id": "model.basedosdados.responsavel", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_cvm_administradores_carteira/responsavel.sql", "original_file_path": "models/br_cvm_administradores_carteira/responsavel.sql", "name": "responsavel", "alias": "responsavel", "checksum": {"name": "sha256", "checksum": "e7799781599539be2d9847529157ca10689a1952dbbd888bbf8c1d38f8efbfa6"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for responsavel", "columns": {"cnpj": {"name": "cnpj", "description": "Cadastro Nacional de Pessoas Jur\u00eddicas (CNPJ)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome": {"name": "nome", "description": "Nome", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo": {"name": "tipo", "description": "Tipo", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_cvm_administradores_carteira/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_cvm_administradores_carteira/responsavel.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_cvm_administradores_carteira"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(cnpj AS STRING) cnpj,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(tipo AS STRING) tipo\nFROM basedosdados-staging.br_cvm_administradores_carteira_staging.responsavel AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_cvm_administradores_carteira`.`responsavel`"}, "model.basedosdados.igp_m_mes": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_primeiro_decendio AS FLOAT64) variacao_primeiro_decendio,\nSAFE_CAST(variacao_segundo_decendio AS FLOAT64) variacao_segundo_decendio,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_m_mes AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_m_mes"], "unique_id": "model.basedosdados.igp_m_mes", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_m_mes.sql", "original_file_path": "models/br_fgv_igp/igp_m_mes.sql", "name": "igp_m_mes", "alias": "igp_m_mes", "checksum": {"name": "sha256", "checksum": "30214a569410953f7c678f7945b835471ab9733c8fa08bc07834be6a9b194373"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_m month table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "IGP-M no m\u00eas (base ago/1994=100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o do \u00edndice no m\u00eas em rela\u00e7\u00e3o ao m\u00eas anterior", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_12_meses": {"name": "variacao_12_meses", "description": "Varia\u00e7\u00e3o do \u00edndice nos \u00faltimos 12 meses", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_primeiro_decendio": {"name": "variacao_primeiro_decendio", "description": "Varia\u00e7\u00e3o nos primeiros 10 dias do m\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_segundo_decendio": {"name": "variacao_segundo_decendio", "description": "Varia\u00e7\u00e3o entre o 11\u00b0 e o 20\u00b0 dias do m\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_acumulada_ano": {"name": "variacao_acumulada_ano", "description": "Varia\u00e7\u00e3o acumulada no ano (a partir de janeiro do ano corrente)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_mensal": {"name": "indice_fechamento_mensal", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_m_mes.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_primeiro_decendio AS FLOAT64) variacao_primeiro_decendio,\nSAFE_CAST(variacao_segundo_decendio AS FLOAT64) variacao_segundo_decendio,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_m_mes AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_m_mes`"}, "model.basedosdados.igp_di_ano": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_di_ano AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_di_ano"], "unique_id": "model.basedosdados.igp_di_ano", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_di_ano.sql", "original_file_path": "models/br_fgv_igp/igp_di_ano.sql", "name": "igp_di_ano", "alias": "igp_di_ano", "checksum": {"name": "sha256", "checksum": "5141d434b1ee6bfeca42c6accbdb97951a5a9d90e034fd80db119fa1da9f2306"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_di year table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_medio": {"name": "indice_medio", "description": "M\u00e9dia dos \u00edndices mensais (Ipeadata)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "Valor do \u00edndice do IGP-DI no \u00faltimo dia do ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o do \u00edndice no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_anual": {"name": "indice_fechamento_anual", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_di_ano.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_di_ano AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_di_ano`"}, "model.basedosdados.igp_og_mes": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) var_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_og_mes AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_og_mes"], "unique_id": "model.basedosdados.igp_og_mes", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_og_mes.sql", "original_file_path": "models/br_fgv_igp/igp_og_mes.sql", "name": "igp_og_mes", "alias": "igp_og_mes", "checksum": {"name": "sha256", "checksum": "75f6d8f82176d4d146412da64761bdd3cb5dbc385f6ad73946b2348271e69bc1"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_og month table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "IGP-OG no m\u00eas (base ago/1994=100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o do \u00edndice no m\u00eas em rela\u00e7\u00e3o ao m\u00eas anterior", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_12_meses": {"name": "variacao_12_meses", "description": "Varia\u00e7\u00e3o do \u00edndice nos \u00faltimos 12 meses", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_acumulada_ano": {"name": "variacao_acumulada_ano", "description": "Varia\u00e7\u00e3o acumulada no ano (a partir de janeiro do ano corrente)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_mensal": {"name": "indice_fechamento_mensal", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_og_mes.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) var_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_og_mes AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_og_mes`"}, "model.basedosdados.igp_og_ano": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_og_ano AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_og_ano"], "unique_id": "model.basedosdados.igp_og_ano", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_og_ano.sql", "original_file_path": "models/br_fgv_igp/igp_og_ano.sql", "name": "igp_og_ano", "alias": "igp_og_ano", "checksum": {"name": "sha256", "checksum": "eadac84a6890d4e485d2bbe21e8edb22fe092f3f3ccc708b0add82bb55864632"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_og year table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_medio": {"name": "indice_medio", "description": "M\u00e9dia dos \u00edndices mensais (Ipeadata)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "Valor do \u00edndice do IGP-OG no \u00faltimo dia do ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o do \u00edndice no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_anual": {"name": "indice_fechamento_anual", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_og_ano.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_og_ano AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_og_ano`"}, "model.basedosdados.igp_m_ano": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_m_ano AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_m_ano"], "unique_id": "model.basedosdados.igp_m_ano", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_m_ano.sql", "original_file_path": "models/br_fgv_igp/igp_m_ano.sql", "name": "igp_m_ano", "alias": "igp_m_ano", "checksum": {"name": "sha256", "checksum": "57f0caffa180ede1e13b347f82a5954e573ea4604f8fc7736824b534b937589f"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_m year table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_medio": {"name": "indice_medio", "description": "M\u00e9dia dos \u00edndices mensais (Ipeadata)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "Valor do \u00edndice do IGP-M no \u00faltimo dia do ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o do \u00edndice no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_anual": {"name": "indice_fechamento_anual", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_m_ano.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(indice_medio AS FLOAT64) indice_medio,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(indice_fechamento_anual AS FLOAT64) indice_fechamento_anual\nFROM basedosdados-staging.br_fgv_igp_staging.igp_m_ano AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_m_ano`"}, "model.basedosdados.igp_10_mes": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_10_mes AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_10_mes"], "unique_id": "model.basedosdados.igp_10_mes", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_10_mes.sql", "original_file_path": "models/br_fgv_igp/igp_10_mes.sql", "name": "igp_10_mes", "alias": "igp_10_mes", "checksum": {"name": "sha256", "checksum": "465408be7757c53192a11f456f0d74e3400c6638a4229ac1714db3ce0ae2f03f"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_10 month table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "IGP-10 no m\u00eas (base ago/1994=100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o do \u00edndice no m\u00eas em rela\u00e7\u00e3o ao m\u00eas anterior", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_12_meses": {"name": "variacao_12_meses", "description": "Varia\u00e7\u00e3o do \u00edndice nos \u00faltimos 12 meses", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_acumulada_ano": {"name": "variacao_acumulada_ano", "description": "Varia\u00e7\u00e3o acumulada no ano (a partir de janeiro do ano corrente)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_mensal": {"name": "indice_fechamento_mensal", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_10_mes.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_10_mes AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_10_mes`"}, "model.basedosdados.igp_di_mes": {"raw_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_di_mes AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_fgv_igp", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_fgv_igp", "fqn": ["basedosdados", "br_fgv_igp", "igp_di_mes"], "unique_id": "model.basedosdados.igp_di_mes", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_fgv_igp/igp_di_mes.sql", "original_file_path": "models/br_fgv_igp/igp_di_mes.sql", "name": "igp_di_mes", "alias": "igp_di_mes", "checksum": {"name": "sha256", "checksum": "15f6628fa222cfb7e3473ebb708a3a5d12b778712d8a60e983b849b13761f286"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for igp_di month table", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "IGP-DI no m\u00eas (base ago/1994=100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o do \u00edndice no m\u00eas em rela\u00e7\u00e3o ao m\u00eas anterior", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_12_meses": {"name": "variacao_12_meses", "description": "Varia\u00e7\u00e3o do \u00edndice nos \u00faltimos 12 meses", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_acumulada_ano": {"name": "variacao_acumulada_ano", "description": "Varia\u00e7\u00e3o acumulada no ano (a partir de janeiro do ano corrente)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice_fechamento_mensal": {"name": "indice_fechamento_mensal", "description": "Elabora\u00e7\u00e3o Ipeadata - calculado a partir da m\u00e9dia geom\u00e9trica dos valores dos meses corrente e seguinte da s\u00e9rie original do IGP-DI.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_fgv_igp/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_fgv_igp/igp_di_mes.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_fgv_igp"}, "created_at": 1663801356, "compiled_sql": "SELECT\nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_12_meses AS FLOAT64) variacao_12_meses,\nSAFE_CAST(variacao_acumulada_ano AS FLOAT64) variacao_acumulada_ano,\nSAFE_CAST(indice_fechamento_mensal AS FLOAT64) indice_fechamento_mensal\nFROM basedosdados-staging.br_fgv_igp_staging.igp_di_mes AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_fgv_igp`.`igp_di_mes`"}, "model.basedosdados.mes": {"raw_sql": "SELECT * FROM `basedosdados-dev.br_sp_saopaulo_dieese_icv_staging.mes`", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_sp_saopaulo_dieese_icv", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_sp_saopaulo_dieese_icv", "fqn": ["basedosdados", "br_sp_saopaulo_dieese_icv", "mes"], "unique_id": "model.basedosdados.mes", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_sp_saopaulo_dieese_icv/mes.sql", "original_file_path": "models/br_sp_saopaulo_dieese_icv/mes.sql", "name": "mes", "alias": "mes", "checksum": {"name": "sha256", "checksum": "a3d58b8d756ab1feb7e4ca866fdbe60ebd77febee6ac897245ec308218710a90"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/br_sp_saopaulo_dieese_icv/mes.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_sp_saopaulo_dieese_icv"}, "created_at": 1663801356, "compiled_sql": "SELECT * FROM `basedosdados-dev.br_sp_saopaulo_dieese_icv_staging.mes`", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_sp_saopaulo_dieese_icv`.`mes`"}, "model.basedosdados.br_ibge_ipca__mes_categoria_rm": {"raw_sql": "{{ config(alias='mes_categoria_rm', schema='br_ibge_ipca') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_rm AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_rm", "schema": "br_ibge_ipca", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca", "fqn": ["basedosdados", "br_ibge_ipca", "br_ibge_ipca__mes_categoria_rm"], "unique_id": "model.basedosdados.br_ibge_ipca__mes_categoria_rm", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca/br_ibge_ipca__mes_categoria_rm.sql", "original_file_path": "models/br_ibge_ipca/br_ibge_ipca__mes_categoria_rm.sql", "name": "br_ibge_ipca__mes_categoria_rm", "alias": "mes_categoria_rm", "checksum": {"name": "sha256", "checksum": "3766b4165838ecf283cc4ae3c05eeac779f047f9d59cd567f6c979d872633b71"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_rm", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_regiao_metropolitana": {"name": "id_regiao_metropolitana", "description": "ID da Regi\u00e3o Metropolitana - IBGE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca/br_ibge_ipca__mes_categoria_rm.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca", "alias": "mes_categoria_rm"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_rm AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca`.`mes_categoria_rm`"}, "model.basedosdados.br_ibge_ipca__mes_brasil": {"raw_sql": "{{ config(alias='mes_brasil', schema='br_ibge_ipca') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_brasil", "schema": "br_ibge_ipca", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca", "fqn": ["basedosdados", "br_ibge_ipca", "br_ibge_ipca__mes_brasil"], "unique_id": "model.basedosdados.br_ibge_ipca__mes_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca/br_ibge_ipca__mes_brasil.sql", "original_file_path": "models/br_ibge_ipca/br_ibge_ipca__mes_brasil.sql", "name": "br_ibge_ipca__mes_brasil", "alias": "mes_brasil", "checksum": {"name": "sha256", "checksum": "982a1455ce05d39a87e64b46ea85914c1b20a2eefeee5702d8b2455308a7e279"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "N\u00famero \u00edndice (dez 1993 = 100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_trimestral": {"name": "variacao_trimestral", "description": "Varia\u00e7\u00e3o percentual trimestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_semestral": {"name": "variacao_semestral", "description": "Varia\u00e7\u00e3o percentual semestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual anual", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca/br_ibge_ipca__mes_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca", "alias": "mes_brasil"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca`.`mes_brasil`"}, "model.basedosdados.br_ibge_ipca__mes_categoria_municipio": {"raw_sql": "{{ config(alias='mes_categoria_municipio', schema='br_ibge_ipca') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_municipio AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_municipio", "schema": "br_ibge_ipca", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca", "fqn": ["basedosdados", "br_ibge_ipca", "br_ibge_ipca__mes_categoria_municipio"], "unique_id": "model.basedosdados.br_ibge_ipca__mes_categoria_municipio", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca/br_ibge_ipca__mes_categoria_municipio.sql", "original_file_path": "models/br_ibge_ipca/br_ibge_ipca__mes_categoria_municipio.sql", "name": "br_ibge_ipca__mes_categoria_municipio", "alias": "mes_categoria_municipio", "checksum": {"name": "sha256", "checksum": "f0abd1c9ea295cefd2d0351cd7593c637264b2b876aa9480f2457209a62c6c30"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_municipio", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID do Munic\u00edpio IBGE - 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca/br_ibge_ipca__mes_categoria_municipio.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca", "alias": "mes_categoria_municipio"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_municipio AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca`.`mes_categoria_municipio`"}, "model.basedosdados.br_ibge_ipca__mes_categoria_brasil": {"raw_sql": "{{ config(alias='mes_categoria_brasil', schema='br_ibge_ipca') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_brasil", "schema": "br_ibge_ipca", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_ipca", "fqn": ["basedosdados", "br_ibge_ipca", "br_ibge_ipca__mes_categoria_brasil"], "unique_id": "model.basedosdados.br_ibge_ipca__mes_categoria_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_ipca/br_ibge_ipca__mes_categoria_brasil.sql", "original_file_path": "models/br_ibge_ipca/br_ibge_ipca__mes_categoria_brasil.sql", "name": "br_ibge_ipca__mes_categoria_brasil", "alias": "mes_categoria_brasil", "checksum": {"name": "sha256", "checksum": "3a04f413fb05bceeb51f6b062c6fca0bcc30b50cd7ff720b2f896e367277c185"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_ipca/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_ipca/br_ibge_ipca__mes_categoria_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_ipca", "alias": "mes_categoria_brasil"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_ipca_staging.mes_categoria_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_ipca`.`mes_categoria_brasil`"}, "model.basedosdados.br_ibge_inpc__mes_categoria_rm": {"raw_sql": "{{ config(alias='mes_categoria_rm', schema='br_ibge_inpc') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_rm AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_rm", "schema": "br_ibge_inpc", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_inpc", "fqn": ["basedosdados", "br_ibge_inpc", "br_ibge_inpc__mes_categoria_rm"], "unique_id": "model.basedosdados.br_ibge_inpc__mes_categoria_rm", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_inpc/br_ibge_inpc__mes_categoria_rm.sql", "original_file_path": "models/br_ibge_inpc/br_ibge_inpc__mes_categoria_rm.sql", "name": "br_ibge_inpc__mes_categoria_rm", "alias": "mes_categoria_rm", "checksum": {"name": "sha256", "checksum": "681e19a6a0711959116f6f8b55648aeb661cd21fd2ce4dabfcae92495915482e"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_rm", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "Mes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_regiao_metropolitana": {"name": "id_regiao_metropolitana", "description": "ID da Regi\u00e3o Metropolitana - IBGE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_inpc/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_inpc/br_ibge_inpc__mes_categoria_rm.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_inpc", "alias": "mes_categoria_rm"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_regiao_metropolitana AS STRING) id_regiao_metropolitana,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_rm AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_inpc`.`mes_categoria_rm`"}, "model.basedosdados.br_ibge_inpc__mes_categoria_municipio": {"raw_sql": "{{ config(alias='mes_categoria_municipio', schema='br_ibge_inpc') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_municipio AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_municipio", "schema": "br_ibge_inpc", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_inpc", "fqn": ["basedosdados", "br_ibge_inpc", "br_ibge_inpc__mes_categoria_municipio"], "unique_id": "model.basedosdados.br_ibge_inpc__mes_categoria_municipio", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_inpc/br_ibge_inpc__mes_categoria_municipio.sql", "original_file_path": "models/br_ibge_inpc/br_ibge_inpc__mes_categoria_municipio.sql", "name": "br_ibge_inpc__mes_categoria_municipio", "alias": "mes_categoria_municipio", "checksum": {"name": "sha256", "checksum": "94dc3bd080fe6140149e28b2073c38c7a6e84f6211b0fd122970b691afc3c2d7"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_municipio", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "Mes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_municipio": {"name": "id_municipio", "description": "ID do Munic\u00edpio IBGE - 7 D\u00edgitos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_inpc/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_inpc/br_ibge_inpc__mes_categoria_municipio.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_inpc", "alias": "mes_categoria_municipio"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_municipio AS STRING) id_municipio,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_municipio AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_inpc`.`mes_categoria_municipio`"}, "model.basedosdados.br_ibge_inpc__mes_categoria_brasil": {"raw_sql": "{{ config(alias='mes_categoria_brasil', schema='br_ibge_inpc') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_categoria_brasil", "schema": "br_ibge_inpc", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_inpc", "fqn": ["basedosdados", "br_ibge_inpc", "br_ibge_inpc__mes_categoria_brasil"], "unique_id": "model.basedosdados.br_ibge_inpc__mes_categoria_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_inpc/br_ibge_inpc__mes_categoria_brasil.sql", "original_file_path": "models/br_ibge_inpc/br_ibge_inpc__mes_categoria_brasil.sql", "name": "br_ibge_inpc__mes_categoria_brasil", "alias": "mes_categoria_brasil", "checksum": {"name": "sha256", "checksum": "2cc5374cd1d35639bcda588c43264a79e5afa5c257d43cfea3598c2347b76110"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_categoria_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "Mes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria": {"name": "id_categoria", "description": "C\u00f3digo identificador grupo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_categoria_bd": {"name": "id_categoria_bd", "description": "C\u00f3digo identificador grupo - Base dos dados - Baseado em id_categoria para cria\u00e7\u00e3o de estrutura hier\u00e1rquica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Descri\u00e7\u00e3o da categoria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_mensal": {"name": "peso_mensal", "description": "Peso percentual mensal do item", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual acumulada no ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual acumulada em doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_inpc/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_inpc/br_ibge_inpc__mes_categoria_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_inpc", "alias": "mes_categoria_brasil"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(id_categoria AS STRING) id_categoria,\nSAFE_CAST(id_categoria_bd AS STRING) id_categoria_bd,\nSAFE_CAST(categoria AS STRING) categoria,\nSAFE_CAST(peso_mensal AS FLOAT64) peso_mensal,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_categoria_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_inpc`.`mes_categoria_brasil`"}, "model.basedosdados.br_ibge_inpc__mes_brasil": {"raw_sql": "{{ config(alias='mes_brasil', schema='br_ibge_inpc') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_brasil AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "mes_brasil", "schema": "br_ibge_inpc", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_inpc", "fqn": ["basedosdados", "br_ibge_inpc", "br_ibge_inpc__mes_brasil"], "unique_id": "model.basedosdados.br_ibge_inpc__mes_brasil", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_inpc/br_ibge_inpc__mes_brasil.sql", "original_file_path": "models/br_ibge_inpc/br_ibge_inpc__mes_brasil.sql", "name": "br_ibge_inpc__mes_brasil", "alias": "mes_brasil", "checksum": {"name": "sha256", "checksum": "ba4a9da28e2c7eaec961af753b70af2c81747ce733b06ca0f233cde08b91ebe6"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table mes_brasil", "columns": {"ano": {"name": "ano", "description": "Ano", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mes": {"name": "mes", "description": "M\u00eas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "indice": {"name": "indice", "description": "N\u00famero \u00edndice (dez 1993 = 100)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_mensal": {"name": "variacao_mensal", "description": "Varia\u00e7\u00e3o percentual mensal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_trimestral": {"name": "variacao_trimestral", "description": "Varia\u00e7\u00e3o percentual trimestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_semestral": {"name": "variacao_semestral", "description": "Varia\u00e7\u00e3o percentual semestral", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_anual": {"name": "variacao_anual", "description": "Varia\u00e7\u00e3o percentual anual", "meta": {}, "data_type": null, "quote": null, "tags": []}, "variacao_doze_meses": {"name": "variacao_doze_meses", "description": "Varia\u00e7\u00e3o percentual doze meses", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_ibge_inpc/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_ibge_inpc/br_ibge_inpc__mes_brasil.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_inpc", "alias": "mes_brasil"}, "created_at": 1663801357, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(mes AS INT64) mes,\nSAFE_CAST(indice AS FLOAT64) indice,\nSAFE_CAST(variacao_mensal AS FLOAT64) variacao_mensal,\nSAFE_CAST(variacao_trimestral AS FLOAT64) variacao_trimestral,\nSAFE_CAST(variacao_semestral AS FLOAT64) variacao_semestral,\nSAFE_CAST(variacao_anual AS FLOAT64) variacao_anual,\nSAFE_CAST(variacao_doze_meses AS FLOAT64) variacao_doze_meses\nFROM basedosdados-staging.br_ibge_inpc_staging.mes_brasil AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_inpc`.`mes_brasil`"}, "model.basedosdados.eleicao_perfil_candidato_2022": {"raw_sql": "SELECT\n    sequencial, \n    CONCAT(ano,sequencial) as ano_sequencial_candidato,\n    nome_urna, \n    sigla_partido, \n    INITCAP(cargo) as cargo, \n    sigla_uf,\n    INITCAP(genero) as genero, \n    INITCAP(raca) as raca, \n    idade,\n    CASE \n    WHEN SAFE_CAST(idade as INT64) < 29 THEN \"18-29\"\n    WHEN SAFE_CAST(idade as INT64) < 50 THEN \"30-49\"\n    WHEN SAFE_CAST(idade as INT64) < 70 THEN \"50-69\"\n    WHEN SAFE_CAST(idade as INT64) >=70 THEN \"70-100\"\n    END AS faixa_etaria\nFROM `basedosdados.br_tse_eleicoes.candidatos` \nWHERE ano = 2022", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_jota", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_jota", "fqn": ["basedosdados", "br_jota", "eleicao_perfil_candidato_2022"], "unique_id": "model.basedosdados.eleicao_perfil_candidato_2022", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_jota/eleicao_perfil_candidato_2022.sql", "original_file_path": "models/br_jota/eleicao_perfil_candidato_2022.sql", "name": "eleicao_perfil_candidato_2022", "alias": "eleicao_perfil_candidato_2022", "checksum": {"name": "sha256", "checksum": "d29955dc1758c1691bd290c4add824a9d3373cdaf231cf8432beb69bb1867e91"}, "tags": [], "refs": [], "sources": [], "description": "Descreve o perfil dos candidatos da elei\u00e7\u00e3o de 2022", "columns": {"sequencial": {"name": "sequencial", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ano_sequencial_candidato": {"name": "ano_sequencial_candidato", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_urna": {"name": "nome_urna", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_partido": {"name": "sigla_partido", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cargo": {"name": "cargo", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sigla_uf": {"name": "sigla_uf", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "genero": {"name": "genero", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "raca": {"name": "raca", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "idade": {"name": "idade", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "faixa_etaria": {"name": "faixa_etaria", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_jota/schema.yaml", "compiled_path": "target/compiled/basedosdados/models/br_jota/eleicao_perfil_candidato_2022.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_jota"}, "created_at": 1663801357, "compiled_sql": "SELECT\n    sequencial, \n    CONCAT(ano,sequencial) as ano_sequencial_candidato,\n    nome_urna, \n    sigla_partido, \n    INITCAP(cargo) as cargo, \n    sigla_uf,\n    INITCAP(genero) as genero, \n    INITCAP(raca) as raca, \n    idade,\n    CASE \n    WHEN SAFE_CAST(idade as INT64) < 29 THEN \"18-29\"\n    WHEN SAFE_CAST(idade as INT64) < 50 THEN \"30-49\"\n    WHEN SAFE_CAST(idade as INT64) < 70 THEN \"50-69\"\n    WHEN SAFE_CAST(idade as INT64) >=70 THEN \"70-100\"\n    END AS faixa_etaria\nFROM `basedosdados.br_tse_eleicoes.candidatos` \nWHERE ano = 2022", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_jota`.`eleicao_perfil_candidato_2022`"}, "model.basedosdados.br_jota.eleicao_prestacao_contas_candidato_2022": {"raw_sql": "WITH soma_receitas_candidato AS (\nSELECT\n    sequencial_candidato,\n    SUM(CASE WHEN origem = 'Recursos De Partido Politico' THEN valor END) as receita_partido,\n    SUM(valor) AS valor_total\nFROM `basedosdados-perguntas.br_jota.eleicao_prestacao_contas_candidato_origem_2022`\nWHERE sequencial_candidato IS NOT NULL\nAND receita_despesa = 'Receita'\nGROUP BY 1\n)\n\nSELECT\ncandidato_info.*,\nRANK() OVER (PARTITION BY cargo ORDER BY valor_total DESC ) AS rank_cargo,\nRANK() OVER (PARTITION BY sigla_partido ORDER BY valor_total DESC ) AS rank_partido,\nRANK() OVER (PARTITION BY sigla_partido,cargo ORDER BY valor_total DESC ) AS rank_cargo_partido,\nvalores.* EXCEPT (sequencial_candidato)\nFROM `basedosdados-perguntas.br_jota.eleicao_perfil_candidato_2022` AS candidato_info\nLEFT JOIN soma_receitas_candidato AS valores\nON candidato_info.sequencial = valores.sequencial_candidato", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_jota", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_jota", "fqn": ["basedosdados", "br_jota", "br_jota.eleicao_prestacao_contas_candidato_2022"], "unique_id": "model.basedosdados.br_jota.eleicao_prestacao_contas_candidato_2022", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_jota/br_jota.eleicao_prestacao_contas_candidato_2022.sql", "original_file_path": "models/br_jota/br_jota.eleicao_prestacao_contas_candidato_2022.sql", "name": "br_jota.eleicao_prestacao_contas_candidato_2022", "alias": "br_jota.eleicao_prestacao_contas_candidato_2022", "checksum": {"name": "sha256", "checksum": "fd7d79513b41659d21398504a21fc167566ac6af5f13c8d632f2548298e8eb24"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/br_jota/br_jota.eleicao_prestacao_contas_candidato_2022.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_jota"}, "created_at": 1663801356, "compiled_sql": "WITH soma_receitas_candidato AS (\nSELECT\n    sequencial_candidato,\n    SUM(CASE WHEN origem = 'Recursos De Partido Politico' THEN valor END) as receita_partido,\n    SUM(valor) AS valor_total\nFROM `basedosdados-perguntas.br_jota.eleicao_prestacao_contas_candidato_origem_2022`\nWHERE sequencial_candidato IS NOT NULL\nAND receita_despesa = 'Receita'\nGROUP BY 1\n)\n\nSELECT\ncandidato_info.*,\nRANK() OVER (PARTITION BY cargo ORDER BY valor_total DESC ) AS rank_cargo,\nRANK() OVER (PARTITION BY sigla_partido ORDER BY valor_total DESC ) AS rank_partido,\nRANK() OVER (PARTITION BY sigla_partido,cargo ORDER BY valor_total DESC ) AS rank_cargo_partido,\nvalores.* EXCEPT (sequencial_candidato)\nFROM `basedosdados-perguntas.br_jota.eleicao_perfil_candidato_2022` AS candidato_info\nLEFT JOIN soma_receitas_candidato AS valores\nON candidato_info.sequencial = valores.sequencial_candidato", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_jota`.`br_jota.eleicao_prestacao_contas_candidato_2022`"}, "model.basedosdados.eleicao_prestacao_contas_candidato_origem_2022": {"raw_sql": "WITH despesa AS (\n    SELECT \n      sequencial_candidato,\n      CONCAT(ano,sequencial_candidato) as ano_sequencial_candidato,\n      'Despesa' AS receita_despesa,\n      INITCAP(origem_despesa) AS origem,\n      SUM(valor_despesa) AS valor\n    FROM `basedosdados.br_tse_eleicoes.despesas_candidato`\n    WHERE ano = 2022\n    GROUP BY 1,2,3,4\n  ),\n\n  receita AS (\n    SELECT   \n      sequencial_candidato,\n      CONCAT(ano,sequencial_candidato) as ano_sequencial_candidato,\n      'Receita' AS receita_despesa,\n      INITCAP(origem_receita) AS origem, \n      SUM(valor_receita) AS valor \n    FROM `basedosdados.br_tse_eleicoes.receitas_candidato` \n    WHERE ano = 2022 \n    GROUP BY 1,2,3,4\n  ),\n\n  receita_despesa AS (\n    SELECT *\n    FROM despesa\n    UNION ALL \n    SELECT *\n    FROM receita)\n\nSELECT t1.*,\nt2.categoria\nFROM receita_despesa as t1\nLEFT JOIN `basedosdados-perguntas.br_jota.eleicao_auxiliar_categoria_origem` as t2\nON t1.origem = t2.origem", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_jota", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_jota", "fqn": ["basedosdados", "br_jota", "eleicao_prestacao_contas_candidato_origem_2022"], "unique_id": "model.basedosdados.eleicao_prestacao_contas_candidato_origem_2022", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_jota/eleicao_prestacao_contas_candidato_origem_2022.sql", "original_file_path": "models/br_jota/eleicao_prestacao_contas_candidato_origem_2022.sql", "name": "eleicao_prestacao_contas_candidato_origem_2022", "alias": "eleicao_prestacao_contas_candidato_origem_2022", "checksum": {"name": "sha256", "checksum": "8a95b198445c81f861454f284ff66ab7ac66ef821a05e2c8e72f078cf137e06d"}, "tags": [], "refs": [], "sources": [], "description": "Informa\u00e7\u00f5es de presta\u00e7\u00e3o de contas no n\u00edvel de candidato e da origem da despesa ou receita ", "columns": {"sequencial_candidato": {"name": "sequencial_candidato", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ano_sequencial_candidato": {"name": "ano_sequencial_candidato", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "receita_despesa": {"name": "receita_despesa", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origem": {"name": "origem", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor": {"name": "valor", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ultima_atualizacao": {"name": "ultima_atualizacao", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_jota/schema.yaml", "compiled_path": "target/compiled/basedosdados/models/br_jota/eleicao_prestacao_contas_candidato_origem_2022.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_jota"}, "created_at": 1663801357, "compiled_sql": "WITH despesa AS (\n    SELECT \n      sequencial_candidato,\n      CONCAT(ano,sequencial_candidato) as ano_sequencial_candidato,\n      'Despesa' AS receita_despesa,\n      INITCAP(origem_despesa) AS origem,\n      SUM(valor_despesa) AS valor\n    FROM `basedosdados.br_tse_eleicoes.despesas_candidato`\n    WHERE ano = 2022\n    GROUP BY 1,2,3,4\n  ),\n\n  receita AS (\n    SELECT   \n      sequencial_candidato,\n      CONCAT(ano,sequencial_candidato) as ano_sequencial_candidato,\n      'Receita' AS receita_despesa,\n      INITCAP(origem_receita) AS origem, \n      SUM(valor_receita) AS valor \n    FROM `basedosdados.br_tse_eleicoes.receitas_candidato` \n    WHERE ano = 2022 \n    GROUP BY 1,2,3,4\n  ),\n\n  receita_despesa AS (\n    SELECT *\n    FROM despesa\n    UNION ALL \n    SELECT *\n    FROM receita)\n\nSELECT t1.*,\nt2.categoria\nFROM receita_despesa as t1\nLEFT JOIN `basedosdados-perguntas.br_jota.eleicao_auxiliar_categoria_origem` as t2\nON t1.origem = t2.origem", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_jota`.`eleicao_prestacao_contas_candidato_origem_2022`"}, "model.basedosdados.terceirizados": {"raw_sql": "SELECT \nSAFE_CAST(ano AS STRING) ano,\nSAFE_CAST(mes AS STRING) mes,\nSAFE_CAST(id_terceirizado AS STRING) id_terceirizado,\nSAFE_CAST(sigla_orgao_superior_unidade_gestora AS STRING) sigla_orgao_superior_unidade_gestora,\nSAFE_CAST(codigo_unidade_gestora AS STRING) codigo_unidade_gestora,\nSAFE_CAST(unidade_gestora AS STRING) unidade_gestora,\nSAFE_CAST(sigla_unidade_gestora AS STRING) sigla_unidade_gestora,\nSAFE_CAST(contrato_empresa AS STRING) contrato_empresa,\nSAFE_CAST(cnpj_empresa AS STRING) cnpj_empresa,\nSAFE_CAST(razao_social_empresa AS STRING) razao_social_empresa,\nSAFE_CAST(cpf AS STRING) cpf,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(categoria_profissional AS STRING) categoria_profissional,\nSAFE_CAST(nivel_escolaridade AS STRING) nivel_escolaridade,\nSAFE_CAST(quantidade_horas_trabalhadas_semanais AS STRING) quantidade_horas_trabalhadas_semanais,\nSAFE_CAST(unidade_trabalho AS STRING) unidade_trabalho,\nSAFE_CAST(valor_mensal AS STRING) valor_mensal,\nSAFE_CAST(custo_mensal AS STRING) custo_mensal,\nSAFE_CAST(sigla_orgao_trabalho AS STRING) sigla_orgao_trabalho,\nSAFE_CAST(nome_orgao_trabalho AS STRING) nome_orgao_trabalho,\nSAFE_CAST(codigo_siafi_trabalho AS STRING) codigo_siafi_trabalho,\nSAFE_CAST(codigo_siape_trabalho AS STRING) codigo_siape_trabalho\nFROM basedosdados-staging.br_cgu_pessoal_executivo_federal_staging.terceirizados AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_cgu_pessoal_executivo_federal", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_cgu_pessoal_executivo_federal", "fqn": ["basedosdados", "br_cgu_pessoal_executivo_federal", "terceirizados"], "unique_id": "model.basedosdados.terceirizados", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_cgu_pessoal_executivo_federal/terceirizados.sql", "original_file_path": "models/br_cgu_pessoal_executivo_federal/terceirizados.sql", "name": "terceirizados", "alias": "terceirizados", "checksum": {"name": "sha256", "checksum": "0bd09d5041c62c7ee72f2c1c612b6596223c7e8fabe679ed1089fa3d467eb63d"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/br_cgu_pessoal_executivo_federal/terceirizados.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_cgu_pessoal_executivo_federal"}, "created_at": 1663801356, "compiled_sql": "SELECT \nSAFE_CAST(ano AS STRING) ano,\nSAFE_CAST(mes AS STRING) mes,\nSAFE_CAST(id_terceirizado AS STRING) id_terceirizado,\nSAFE_CAST(sigla_orgao_superior_unidade_gestora AS STRING) sigla_orgao_superior_unidade_gestora,\nSAFE_CAST(codigo_unidade_gestora AS STRING) codigo_unidade_gestora,\nSAFE_CAST(unidade_gestora AS STRING) unidade_gestora,\nSAFE_CAST(sigla_unidade_gestora AS STRING) sigla_unidade_gestora,\nSAFE_CAST(contrato_empresa AS STRING) contrato_empresa,\nSAFE_CAST(cnpj_empresa AS STRING) cnpj_empresa,\nSAFE_CAST(razao_social_empresa AS STRING) razao_social_empresa,\nSAFE_CAST(cpf AS STRING) cpf,\nSAFE_CAST(nome AS STRING) nome,\nSAFE_CAST(categoria_profissional AS STRING) categoria_profissional,\nSAFE_CAST(nivel_escolaridade AS STRING) nivel_escolaridade,\nSAFE_CAST(quantidade_horas_trabalhadas_semanais AS STRING) quantidade_horas_trabalhadas_semanais,\nSAFE_CAST(unidade_trabalho AS STRING) unidade_trabalho,\nSAFE_CAST(valor_mensal AS STRING) valor_mensal,\nSAFE_CAST(custo_mensal AS STRING) custo_mensal,\nSAFE_CAST(sigla_orgao_trabalho AS STRING) sigla_orgao_trabalho,\nSAFE_CAST(nome_orgao_trabalho AS STRING) nome_orgao_trabalho,\nSAFE_CAST(codigo_siafi_trabalho AS STRING) codigo_siafi_trabalho,\nSAFE_CAST(codigo_siape_trabalho AS STRING) codigo_siape_trabalho\nFROM basedosdados-staging.br_cgu_pessoal_executivo_federal_staging.terceirizados AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_cgu_pessoal_executivo_federal`.`terceirizados`"}, "model.basedosdados.dia": {"raw_sql": "SELECT \nSAFE_CAST(numero_processo AS STRING) numero_processo,\nSAFE_CAST(numero_registro_oferta AS STRING) numero_registro_oferta,\nSAFE_CAST(tipo_oferta AS STRING) tipo_oferta,\nSAFE_CAST(tipo_componente_oferta_mista AS STRING) tipo_componente_oferta_mista,\nSAFE_CAST(tipo_ativo AS STRING) tipo_ativo,\nSAFE_CAST(cnpj_emissor AS STRING) cnpj_emissor,\nSAFE_CAST(nome_emissor AS STRING) nome_emissor,\nSAFE_CAST(cnpj_lider AS STRING) cnpj_lider,\nSAFE_CAST(nome_lider AS STRING) nome_lider,\nSAFE_CAST(nome_vendedor AS STRING) nome_vendedor,\nSAFE_CAST(cnpj_ofertante AS STRING) cnpj_ofertante,\nSAFE_CAST(nome_ofertante AS STRING) nome_ofertante,\nSAFE_CAST(rito_oferta AS STRING) rito_oferta,\nSAFE_CAST(modalidade_oferta AS STRING) modalidade_oferta,\nSAFE_CAST(modalidade_registro AS STRING) modalidade_registro,\nSAFE_CAST(modalidade_dispensa_registro AS STRING) modalidade_dispensa_registro,\nSAFE_CAST(data_abertura_processo AS DATE) data_abertura_processo,\nSAFE_CAST(data_protocolo AS DATE) data_protocolo,\nSAFE_CAST(data_dispensa_oferta AS DATE) data_dispensa_oferta,\nSAFE_CAST(data_registro_oferta AS DATE) data_registro_oferta,\nSAFE_CAST(data_inicio_oferta AS DATE) data_inicio_oferta,\nSAFE_CAST(data_encerramento_oferta AS DATE) data_encerramento_oferta,\nSAFE_CAST(emissao AS STRING) emissao,\nSAFE_CAST(classe_ativo AS STRING) classe_ativo,\nSAFE_CAST(serie AS STRING) serie,\nSAFE_CAST(especie_ativo AS STRING) especie_ativo,\nSAFE_CAST(forma_ativo AS STRING) forma_ativo,\nSAFE_CAST(data_emissao AS DATE) data_emissao,\nSAFE_CAST(data_vencimento AS DATE) data_vencimento,\nSAFE_CAST(quantidade_sem_lote_suplementar AS STRING) quantidade_sem_lote_suplementar,\nSAFE_CAST(quantidade_no_lote_suplementar AS STRING) quantidade_no_lote_suplementar,\nSAFE_CAST(quantidade_total AS STRING) quantidade_total,\nSAFE_CAST(preco_unitario AS STRING) preco_unitario,\nSAFE_CAST(valor_total AS STRING) valor_total,\nSAFE_CAST(oferta_inicial AS STRING) oferta_inicial,\nSAFE_CAST(oferta_incentivo_fiscal AS STRING) oferta_incentivo_fiscal,\nSAFE_CAST(oferta_regime_fiduciario AS STRING) oferta_regime_fiduciario,\nSAFE_CAST(atualizacao_monetaria AS STRING) atualizacao_monetaria,\nSAFE_CAST(juros AS STRING) juros,\nSAFE_CAST(projeto_audiovisual AS STRING) projeto_audiovisual,\nSAFE_CAST(tipo_societario_emissor AS STRING) tipo_societario_emissor,\nSAFE_CAST(tipo_fundo_investimento AS STRING) tipo_fundo_investimento,\nSAFE_CAST(ultimo_comunicado AS STRING) ultimo_comunicado,\nSAFE_CAST(data_comunicado AS DATE) data_comunicado\nFROM basedosdados-staging.br_cvm_oferta_publica_distribuicao_staging.dia AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "br_cvm_oferta_publica_distribuicao", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_cvm_oferta_publica_distribuicao", "fqn": ["basedosdados", "br_cvm_oferta_publica_distribuicao", "dia"], "unique_id": "model.basedosdados.dia", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_cvm_oferta_publica_distribuicao/dia.sql", "original_file_path": "models/br_cvm_oferta_publica_distribuicao/dia.sql", "name": "dia", "alias": "dia", "checksum": {"name": "sha256", "checksum": "f9c3bb9c9a8ad145dbadb0b1d006565ba2af6fb70dfd4591a5c4c7ed10145746"}, "tags": [], "refs": [], "sources": [], "description": "dbt model for table dia", "columns": {"numero_processo": {"name": "numero_processo", "description": "N\u00famero do processo administrativo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "numero_registro_oferta": {"name": "numero_registro_oferta", "description": "N\u00famero de registro da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_oferta": {"name": "tipo_oferta", "description": "Tipo da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_componente_oferta_mista": {"name": "tipo_componente_oferta_mista", "description": "Tipo do componente de uma oferta mista", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_ativo": {"name": "tipo_ativo", "description": "Tipo do ativo (valor mobili\u00e1rio)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_emissor": {"name": "cnpj_emissor", "description": "CNPJ do emissor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_emissor": {"name": "nome_emissor", "description": "Nome do emissor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_lider": {"name": "cnpj_lider", "description": "CNPJ do l\u00edder", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_lider": {"name": "nome_lider", "description": "Nome do l\u00edder", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_vendedor": {"name": "nome_vendedor", "description": "Nome do vendedor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cnpj_ofertante": {"name": "cnpj_ofertante", "description": "CNPJ do ofertante", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nome_ofertante": {"name": "nome_ofertante", "description": "Nome do ofertante", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rito_oferta": {"name": "rito_oferta", "description": "Rito seguido para a realiza\u00e7\u00e3o da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modalidade_registro_oferta": {"name": "modalidade_registro_oferta", "description": "Modalidade de registro da oferta. Aplic\u00e1vel a ofertas registradas.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modalidade_dispensa_oferta": {"name": "modalidade_dispensa_oferta", "description": "Modalidade de dispensa da oferta. Aplic\u00e1vel a ofertas dispensadas de registro.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_abertura_processo": {"name": "data_abertura_processo", "description": "Data de abertura do processo administrativo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_protocolo": {"name": "data_protocolo", "description": "Data do protocolo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_dispensa_oferta": {"name": "data_dispensa_oferta", "description": "Data de dispensa da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_registro_oferta": {"name": "data_registro_oferta", "description": "Data de registro da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_encerramento_oferta": {"name": "data_encerramento_oferta", "description": "Data de encerramento da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "emissao": {"name": "emissao", "description": "Emiss\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "classe_ativo": {"name": "classe_ativo", "description": "Classe do ativo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "serie": {"name": "serie", "description": "S\u00e9rie", "meta": {}, "data_type": null, "quote": null, "tags": []}, "especie_ativo": {"name": "especie_ativo", "description": "Esp\u00e9cie do ativo (valor mobili\u00e1rio) objeto da oferta", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forma_ativo": {"name": "forma_ativo", "description": "Forma do ativo (valor mobili\u00e1rio) objeto da oferta.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_emissao": {"name": "data_emissao", "description": "Data da emiss\u00e3o", "meta": {}, "data_type": null, "quote": null, "tags": []}, "data_vencimento": {"name": "data_vencimento", "description": "Data do vencimento", "meta": {}, "data_type": null, "quote": null, "tags": []}, "quantidade_sem_lote_suplementar": {"name": "quantidade_sem_lote_suplementar", "description": "Quantidade sem lote suplementar", "meta": {}, "data_type": null, "quote": null, "tags": []}, "quantidade_no_lote_suplementar": {"name": "quantidade_no_lote_suplementar", "description": "Quantidade no lote suplementar", "meta": {}, "data_type": null, "quote": null, "tags": []}, "quantidade_total": {"name": "quantidade_total", "description": "Quantidade total", "meta": {}, "data_type": null, "quote": null, "tags": []}, "preco_unitario": {"name": "preco_unitario", "description": "Pre\u00e7o unit\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_total": {"name": "valor_total", "description": "Valor total", "meta": {}, "data_type": null, "quote": null, "tags": []}, "oferta_inicial": {"name": "oferta_inicial", "description": "Oferta inicial (IPO)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "oferta_incentivo_fiscal": {"name": "oferta_incentivo_fiscal", "description": "Indica se a oferta \u00e9 eleg\u00edvel ao incentivo previsto na Lei n\u00ba 12.431/11.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "oferta_regime_fiduciario": {"name": "oferta_regime_fiduciario", "description": "Indica se os cr\u00e9ditos que lastream a emiss\u00e3o dos ativos (valores mobili\u00e1rios) objeto da oferta contam com regime fiduci\u00e1rio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "atualizacao_monetaria": {"name": "atualizacao_monetaria", "description": "Atualiza\u00e7\u00e3o monet\u00e1ria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "juros": {"name": "juros", "description": "Taxa de juros", "meta": {}, "data_type": null, "quote": null, "tags": []}, "projeto_audiovisual": {"name": "projeto_audiovisual", "description": "Projeto audiovisual", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/br_cvm_oferta_publica_distribuicao/schema.yml", "compiled_path": "target/compiled/basedosdados/models/br_cvm_oferta_publica_distribuicao/dia.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_cvm_oferta_publica_distribuicao"}, "created_at": 1663801357, "compiled_sql": "SELECT \nSAFE_CAST(numero_processo AS STRING) numero_processo,\nSAFE_CAST(numero_registro_oferta AS STRING) numero_registro_oferta,\nSAFE_CAST(tipo_oferta AS STRING) tipo_oferta,\nSAFE_CAST(tipo_componente_oferta_mista AS STRING) tipo_componente_oferta_mista,\nSAFE_CAST(tipo_ativo AS STRING) tipo_ativo,\nSAFE_CAST(cnpj_emissor AS STRING) cnpj_emissor,\nSAFE_CAST(nome_emissor AS STRING) nome_emissor,\nSAFE_CAST(cnpj_lider AS STRING) cnpj_lider,\nSAFE_CAST(nome_lider AS STRING) nome_lider,\nSAFE_CAST(nome_vendedor AS STRING) nome_vendedor,\nSAFE_CAST(cnpj_ofertante AS STRING) cnpj_ofertante,\nSAFE_CAST(nome_ofertante AS STRING) nome_ofertante,\nSAFE_CAST(rito_oferta AS STRING) rito_oferta,\nSAFE_CAST(modalidade_oferta AS STRING) modalidade_oferta,\nSAFE_CAST(modalidade_registro AS STRING) modalidade_registro,\nSAFE_CAST(modalidade_dispensa_registro AS STRING) modalidade_dispensa_registro,\nSAFE_CAST(data_abertura_processo AS DATE) data_abertura_processo,\nSAFE_CAST(data_protocolo AS DATE) data_protocolo,\nSAFE_CAST(data_dispensa_oferta AS DATE) data_dispensa_oferta,\nSAFE_CAST(data_registro_oferta AS DATE) data_registro_oferta,\nSAFE_CAST(data_inicio_oferta AS DATE) data_inicio_oferta,\nSAFE_CAST(data_encerramento_oferta AS DATE) data_encerramento_oferta,\nSAFE_CAST(emissao AS STRING) emissao,\nSAFE_CAST(classe_ativo AS STRING) classe_ativo,\nSAFE_CAST(serie AS STRING) serie,\nSAFE_CAST(especie_ativo AS STRING) especie_ativo,\nSAFE_CAST(forma_ativo AS STRING) forma_ativo,\nSAFE_CAST(data_emissao AS DATE) data_emissao,\nSAFE_CAST(data_vencimento AS DATE) data_vencimento,\nSAFE_CAST(quantidade_sem_lote_suplementar AS STRING) quantidade_sem_lote_suplementar,\nSAFE_CAST(quantidade_no_lote_suplementar AS STRING) quantidade_no_lote_suplementar,\nSAFE_CAST(quantidade_total AS STRING) quantidade_total,\nSAFE_CAST(preco_unitario AS STRING) preco_unitario,\nSAFE_CAST(valor_total AS STRING) valor_total,\nSAFE_CAST(oferta_inicial AS STRING) oferta_inicial,\nSAFE_CAST(oferta_incentivo_fiscal AS STRING) oferta_incentivo_fiscal,\nSAFE_CAST(oferta_regime_fiduciario AS STRING) oferta_regime_fiduciario,\nSAFE_CAST(atualizacao_monetaria AS STRING) atualizacao_monetaria,\nSAFE_CAST(juros AS STRING) juros,\nSAFE_CAST(projeto_audiovisual AS STRING) projeto_audiovisual,\nSAFE_CAST(tipo_societario_emissor AS STRING) tipo_societario_emissor,\nSAFE_CAST(tipo_fundo_investimento AS STRING) tipo_fundo_investimento,\nSAFE_CAST(ultimo_comunicado AS STRING) ultimo_comunicado,\nSAFE_CAST(data_comunicado AS DATE) data_comunicado\nFROM basedosdados-staging.br_cvm_oferta_publica_distribuicao_staging.dia AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_cvm_oferta_publica_distribuicao`.`dia`"}, "model.basedosdados.br_ibge_pnadc__microdados": {"raw_sql": "{{ config(alias='microdados', schema='br_ibge_pnadc') }}\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(trimestre AS INT64) trimestre,\nSAFE_CAST(id_uf AS STRING) id_uf,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(capital AS STRING) capital,\nSAFE_CAST(rm_ride AS STRING) rm_ride,\nSAFE_CAST(id_upa AS STRING) id_upa,\nSAFE_CAST(id_estrato AS STRING) id_estrato,\nSAFE_CAST(id_domicilio AS STRING) id_domicilio,\nSAFE_CAST(V1008 AS INT64) V1008,\nSAFE_CAST(V1014 AS INT64) V1014,\nSAFE_CAST(V1016 AS INT64) V1016,\nSAFE_CAST(V1022 AS STRING) V1022,\nSAFE_CAST(V1023 AS STRING) V1023,\nSAFE_CAST(V1027 AS FLOAT64) V1027,\nSAFE_CAST(V1028 AS FLOAT64) V1028,\nSAFE_CAST(V1029 AS INT64) V1029,\nSAFE_CAST(V1033 AS INT64) V1033,\nSAFE_CAST(posest AS STRING) posest,\nSAFE_CAST(posest_sxi AS STRING) posest_sxi,\nSAFE_CAST(V2001 AS INT64) V2001,\nSAFE_CAST(V2003 AS INT64) V2003,\nSAFE_CAST(V2005 AS STRING) V2005,\nSAFE_CAST(V2007 AS STRING) V2007,\nSAFE_CAST(V2008 AS INT64) V2008,\nSAFE_CAST(V20081 AS INT64) V20081,\nSAFE_CAST(V20082 AS INT64) V20082,\nSAFE_CAST(V2009 AS INT64) V2009,\nSAFE_CAST(V2010 AS STRING) V2010,\nSAFE_CAST(V3001 AS STRING) V3001,\nSAFE_CAST(V3002 AS STRING) V3002,\nSAFE_CAST(V3002A AS STRING) V3002A,\nSAFE_CAST(V3003 AS STRING) V3003,\nSAFE_CAST(V3003A AS STRING) V3003A,\nSAFE_CAST(V3004 AS STRING) V3004,\nSAFE_CAST(V3005 AS STRING) V3005,\nSAFE_CAST(V3005A AS STRING) V3005A,\nSAFE_CAST(V3006 AS STRING) V3006,\nSAFE_CAST(V3006A AS STRING) V3006A,\nSAFE_CAST(V3007 AS STRING) V3007,\nSAFE_CAST(V3008 AS STRING) V3008,\nSAFE_CAST(V3009 AS STRING) V3009,\nSAFE_CAST(V3009A AS STRING) V3009A,\nSAFE_CAST(V3010 AS STRING) V3010,\nSAFE_CAST(V3011 AS STRING) V3011,\nSAFE_CAST(V3011A AS STRING) V3011A,\nSAFE_CAST(V3012 AS STRING) V3012,\nSAFE_CAST(V3013 AS STRING) V3013,\nSAFE_CAST(V3013A AS STRING) V3013A,\nSAFE_CAST(V3013B AS STRING) V3013B,\nSAFE_CAST(V3014 AS STRING) V3014,\nSAFE_CAST(V4001 AS STRING) V4001,\nSAFE_CAST(V4002 AS STRING) V4002,\nSAFE_CAST(V4003 AS STRING) V4003,\nSAFE_CAST(V4004 AS STRING) V4004,\nSAFE_CAST(V4005 AS STRING) V4005,\nSAFE_CAST(V4006 AS STRING) V4006,\nSAFE_CAST(V4006A AS STRING) V4006A,\nSAFE_CAST(V4007 AS STRING) V4007,\nSAFE_CAST(V4008 AS STRING) V4008,\nSAFE_CAST(V40081 AS INT64) V40081,\nSAFE_CAST(V40082 AS INT64) V40082,\nSAFE_CAST(V40083 AS INT64) V40083,\nSAFE_CAST(V4009 AS STRING) V4009,\nSAFE_CAST(V4010 AS STRING) V4010,\nSAFE_CAST(V4012 AS STRING) V4012,\nSAFE_CAST(V40121 AS STRING) V40121,\nSAFE_CAST(V4013 AS STRING) V4013,\nSAFE_CAST(V40132 AS STRING) V40132,\nSAFE_CAST(V40132A AS STRING) V40132A,\nSAFE_CAST(V4014 AS STRING) V4014,\nSAFE_CAST(V4015 AS STRING) V4015,\nSAFE_CAST(V40151 AS STRING) V40151,\nSAFE_CAST(V401511 AS INT64) V401511,\nSAFE_CAST(V401512 AS INT64) V401512,\nSAFE_CAST(V4016 AS STRING) V4016,\nSAFE_CAST(V40161 AS INT64) V40161,\nSAFE_CAST(V40162 AS INT64) V40162,\nSAFE_CAST(V40163 AS INT64) V40163,\nSAFE_CAST(V4017 AS STRING) V4017,\nSAFE_CAST(V40171 AS STRING) V40171,\nSAFE_CAST(V401711 AS INT64) V401711,\nSAFE_CAST(V4018 AS STRING) V4018,\nSAFE_CAST(V40181 AS INT64) V40181,\nSAFE_CAST(V40182 AS INT64) V40182,\nSAFE_CAST(V40183 AS INT64) V40183,\nSAFE_CAST(V4019 AS STRING) V4019,\nSAFE_CAST(V4020 AS STRING) V4020,\nSAFE_CAST(V4021 AS STRING) V4021,\nSAFE_CAST(V4022 AS STRING) V4022,\nSAFE_CAST(V4024 AS STRING) V4024,\nSAFE_CAST(V4025 AS STRING) V4025,\nSAFE_CAST(V4026 AS STRING) V4026,\nSAFE_CAST(V4027 AS STRING) V4027,\nSAFE_CAST(V4028 AS STRING) V4028,\nSAFE_CAST(V4029 AS STRING) V4029,\nSAFE_CAST(V4032 AS STRING) V4032,\nSAFE_CAST(V4033 AS STRING) V4033,\nSAFE_CAST(V40331 AS STRING) V40331,\nSAFE_CAST(V403311 AS STRING) V403311,\nSAFE_CAST(V403312 AS FLOAT64) V403312,\nSAFE_CAST(V40332 AS STRING) V40332,\nSAFE_CAST(V403321 AS STRING) V403321,\nSAFE_CAST(V403322 AS FLOAT64) V403322,\nSAFE_CAST(V40333 AS STRING) V40333,\nSAFE_CAST(V403331 AS STRING) V403331,\nSAFE_CAST(V4034 AS STRING) V4034,\nSAFE_CAST(V40341 AS STRING) V40341,\nSAFE_CAST(V403411 AS STRING) V403411,\nSAFE_CAST(V403412 AS FLOAT64) V403412,\nSAFE_CAST(V40342 AS STRING) V40342,\nSAFE_CAST(V403421 AS STRING) V403421,\nSAFE_CAST(V403422 AS FLOAT64) V403422,\nSAFE_CAST(V4039 AS INT64) V4039,\nSAFE_CAST(V4039C AS INT64) V4039C,\nSAFE_CAST(V4040 AS STRING) V4040,\nSAFE_CAST(V40401 AS STRING) V40401,\nSAFE_CAST(V40402 AS STRING) V40402,\nSAFE_CAST(V40403 AS STRING) V40403,\nSAFE_CAST(V4041 AS STRING) V4041,\nSAFE_CAST(V4043 AS STRING) V4043,\nSAFE_CAST(V40431 AS STRING) V40431,\nSAFE_CAST(V4044 AS STRING) V4044,\nSAFE_CAST(V4045 AS STRING) V4045,\nSAFE_CAST(V4046 AS STRING) V4046,\nSAFE_CAST(V4047 AS STRING) V4047,\nSAFE_CAST(V4048 AS STRING) V4048,\nSAFE_CAST(V4049 AS STRING) V4049,\nSAFE_CAST(V4050 AS STRING) V4050,\nSAFE_CAST(V40501 AS STRING) V40501,\nSAFE_CAST(V405011 AS STRING) V405011,\nSAFE_CAST(V405012 AS FLOAT64) V405012,\nSAFE_CAST(V40502 AS STRING) V40502,\nSAFE_CAST(V405021 AS STRING) V405021,\nSAFE_CAST(V405022 AS FLOAT64) V405022,\nSAFE_CAST(V40503 AS STRING) V40503,\nSAFE_CAST(V405031 AS STRING) V405031,\nSAFE_CAST(V4051 AS STRING) V4051,\nSAFE_CAST(V40511 AS STRING) V40511,\nSAFE_CAST(V405111 AS STRING) V405111,\nSAFE_CAST(V405112 AS FLOAT64) V405112,\nSAFE_CAST(V40512 AS STRING) V40512,\nSAFE_CAST(V405121 AS STRING) V405121,\nSAFE_CAST(V405122 AS FLOAT64) V405122,\nSAFE_CAST(V4056 AS INT64) V4056,\nSAFE_CAST(V4056C AS INT64) V4056C,\nSAFE_CAST(V4057 AS STRING) V4057,\nSAFE_CAST(V4058 AS STRING) V4058,\nSAFE_CAST(V40581 AS STRING) V40581,\nSAFE_CAST(V405811 AS STRING) V405811,\nSAFE_CAST(V405812 AS FLOAT64) V405812,\nSAFE_CAST(V40582 AS STRING) V40582,\nSAFE_CAST(V405821 AS STRING) V405821,\nSAFE_CAST(V405822 AS FLOAT64) V405822,\nSAFE_CAST(V40583 AS STRING) V40583,\nSAFE_CAST(V405831 AS STRING) V405831,\nSAFE_CAST(V40584 AS STRING) V40584,\nSAFE_CAST(V4059 AS STRING) V4059,\nSAFE_CAST(V40591 AS STRING) V40591,\nSAFE_CAST(V405911 AS STRING) V405911,\nSAFE_CAST(V405912 AS FLOAT64) V405912,\nSAFE_CAST(V40592 AS STRING) V40592,\nSAFE_CAST(V405921 AS STRING) V405921,\nSAFE_CAST(V405922 AS FLOAT64) V405922,\nSAFE_CAST(V4062 AS INT64) V4062,\nSAFE_CAST(V4062C AS INT64) V4062C,\nSAFE_CAST(V4063 AS STRING) V4063,\nSAFE_CAST(V4063A AS STRING) V4063A,\nSAFE_CAST(V4064 AS STRING) V4064,\nSAFE_CAST(V4064A AS STRING) V4064A,\nSAFE_CAST(V4071 AS STRING) V4071,\nSAFE_CAST(V4072 AS STRING) V4072,\nSAFE_CAST(V4072A AS STRING) V4072A,\nSAFE_CAST(V4073 AS STRING) V4073,\nSAFE_CAST(V4074 AS STRING) V4074,\nSAFE_CAST(V4074A AS STRING) V4074A,\nSAFE_CAST(V4075A AS STRING) V4075A,\nSAFE_CAST(V4075A1 AS INT64) V4075A1,\nSAFE_CAST(V4076 AS STRING) V4076,\nSAFE_CAST(V40761 AS INT64) V40761,\nSAFE_CAST(V40762 AS INT64) V40762,\nSAFE_CAST(V40763 AS INT64) V40763,\nSAFE_CAST(V4077 AS STRING) V4077,\nSAFE_CAST(V4078 AS STRING) V4078,\nSAFE_CAST(V4078A AS STRING) V4078A,\nSAFE_CAST(V4082 AS STRING) V4082,\nSAFE_CAST(VD2002 AS STRING) VD2002,\nSAFE_CAST(VD2003 AS INT64) VD2003,\nSAFE_CAST(VD2004 AS STRING) VD2004,\nSAFE_CAST(VD3004 AS STRING) VD3004,\nSAFE_CAST(VD3005 AS INT64) VD3005,\nSAFE_CAST(VD3006 AS STRING) VD3006,\nSAFE_CAST(VD4001 AS STRING) VD4001,\nSAFE_CAST(VD4002 AS STRING) VD4002,\nSAFE_CAST(VD4003 AS STRING) VD4003,\nSAFE_CAST(VD4004 AS STRING) VD4004,\nSAFE_CAST(VD4004A AS STRING) VD4004A,\nSAFE_CAST(VD4005 AS STRING) VD4005,\nSAFE_CAST(VD4007 AS STRING) VD4007,\nSAFE_CAST(VD4008 AS STRING) VD4008,\nSAFE_CAST(VD4009 AS STRING) VD4009,\nSAFE_CAST(VD4010 AS STRING) VD4010,\nSAFE_CAST(VD4011 AS STRING) VD4011,\nSAFE_CAST(VD4012 AS STRING) VD4012,\nSAFE_CAST(VD4013 AS STRING) VD4013,\nSAFE_CAST(VD4014 AS STRING) VD4014,\nSAFE_CAST(VD4015 AS STRING) VD4015,\nSAFE_CAST(VD4016 AS FLOAT64) VD4016,\nSAFE_CAST(VD4017 AS FLOAT64) VD4017,\nSAFE_CAST(VD4018 AS STRING) VD4018,\nSAFE_CAST(VD4019 AS FLOAT64) VD4019,\nSAFE_CAST(VD4020 AS FLOAT64) VD4020,\nSAFE_CAST(VD4023 AS STRING) VD4023,\nSAFE_CAST(VD4030 AS STRING) VD4030,\nSAFE_CAST(VD4031 AS INT64) VD4031,\nSAFE_CAST(VD4032 AS INT64) VD4032,\nSAFE_CAST(VD4033 AS INT64) VD4033,\nSAFE_CAST(VD4034 AS INT64) VD4034,\nSAFE_CAST(VD4035 AS INT64) VD4035,\nSAFE_CAST(VD4036 AS STRING) VD4036,\nSAFE_CAST(VD4037 AS STRING) VD4037,\nSAFE_CAST(V1028001 AS FLOAT64) V1028001,\nSAFE_CAST(V1028002 AS FLOAT64) V1028002,\nSAFE_CAST(V1028003 AS FLOAT64) V1028003,\nSAFE_CAST(V1028004 AS FLOAT64) V1028004,\nSAFE_CAST(V1028005 AS FLOAT64) V1028005,\nSAFE_CAST(V1028006 AS FLOAT64) V1028006,\nSAFE_CAST(V1028007 AS FLOAT64) V1028007,\nSAFE_CAST(V1028008 AS FLOAT64) V1028008,\nSAFE_CAST(V1028009 AS FLOAT64) V1028009,\nSAFE_CAST(V1028010 AS FLOAT64) V1028010,\nSAFE_CAST(V1028011 AS FLOAT64) V1028011,\nSAFE_CAST(V1028012 AS FLOAT64) V1028012,\nSAFE_CAST(V1028013 AS FLOAT64) V1028013,\nSAFE_CAST(V1028014 AS FLOAT64) V1028014,\nSAFE_CAST(V1028015 AS FLOAT64) V1028015,\nSAFE_CAST(V1028016 AS FLOAT64) V1028016,\nSAFE_CAST(V1028017 AS FLOAT64) V1028017,\nSAFE_CAST(V1028018 AS FLOAT64) V1028018,\nSAFE_CAST(V1028019 AS FLOAT64) V1028019,\nSAFE_CAST(V1028020 AS FLOAT64) V1028020,\nSAFE_CAST(V1028021 AS FLOAT64) V1028021,\nSAFE_CAST(V1028022 AS FLOAT64) V1028022,\nSAFE_CAST(V1028023 AS FLOAT64) V1028023,\nSAFE_CAST(V1028024 AS FLOAT64) V1028024,\nSAFE_CAST(V1028025 AS FLOAT64) V1028025,\nSAFE_CAST(V1028026 AS FLOAT64) V1028026,\nSAFE_CAST(V1028027 AS FLOAT64) V1028027,\nSAFE_CAST(V1028028 AS FLOAT64) V1028028,\nSAFE_CAST(V1028029 AS FLOAT64) V1028029,\nSAFE_CAST(V1028030 AS FLOAT64) V1028030,\nSAFE_CAST(V1028031 AS FLOAT64) V1028031,\nSAFE_CAST(V1028032 AS FLOAT64) V1028032,\nSAFE_CAST(V1028033 AS FLOAT64) V1028033,\nSAFE_CAST(V1028034 AS FLOAT64) V1028034,\nSAFE_CAST(V1028035 AS FLOAT64) V1028035,\nSAFE_CAST(V1028036 AS FLOAT64) V1028036,\nSAFE_CAST(V1028037 AS FLOAT64) V1028037,\nSAFE_CAST(V1028038 AS FLOAT64) V1028038,\nSAFE_CAST(V1028039 AS FLOAT64) V1028039,\nSAFE_CAST(V1028040 AS FLOAT64) V1028040,\nSAFE_CAST(V1028041 AS FLOAT64) V1028041,\nSAFE_CAST(V1028042 AS FLOAT64) V1028042,\nSAFE_CAST(V1028043 AS FLOAT64) V1028043,\nSAFE_CAST(V1028044 AS FLOAT64) V1028044,\nSAFE_CAST(V1028045 AS FLOAT64) V1028045,\nSAFE_CAST(V1028046 AS FLOAT64) V1028046,\nSAFE_CAST(V1028047 AS FLOAT64) V1028047,\nSAFE_CAST(V1028048 AS FLOAT64) V1028048,\nSAFE_CAST(V1028049 AS FLOAT64) V1028049,\nSAFE_CAST(V1028050 AS FLOAT64) V1028050,\nSAFE_CAST(V1028051 AS FLOAT64) V1028051,\nSAFE_CAST(V1028052 AS FLOAT64) V1028052,\nSAFE_CAST(V1028053 AS FLOAT64) V1028053,\nSAFE_CAST(V1028054 AS FLOAT64) V1028054,\nSAFE_CAST(V1028055 AS FLOAT64) V1028055,\nSAFE_CAST(V1028056 AS FLOAT64) V1028056,\nSAFE_CAST(V1028057 AS FLOAT64) V1028057,\nSAFE_CAST(V1028058 AS FLOAT64) V1028058,\nSAFE_CAST(V1028059 AS FLOAT64) V1028059,\nSAFE_CAST(V1028060 AS FLOAT64) V1028060,\nSAFE_CAST(V1028061 AS FLOAT64) V1028061,\nSAFE_CAST(V1028062 AS FLOAT64) V1028062,\nSAFE_CAST(V1028063 AS FLOAT64) V1028063,\nSAFE_CAST(V1028064 AS FLOAT64) V1028064,\nSAFE_CAST(V1028065 AS FLOAT64) V1028065,\nSAFE_CAST(V1028066 AS FLOAT64) V1028066,\nSAFE_CAST(V1028067 AS FLOAT64) V1028067,\nSAFE_CAST(V1028068 AS FLOAT64) V1028068,\nSAFE_CAST(V1028069 AS FLOAT64) V1028069,\nSAFE_CAST(V1028070 AS FLOAT64) V1028070,\nSAFE_CAST(V1028071 AS FLOAT64) V1028071,\nSAFE_CAST(V1028072 AS FLOAT64) V1028072,\nSAFE_CAST(V1028073 AS FLOAT64) V1028073,\nSAFE_CAST(V1028074 AS FLOAT64) V1028074,\nSAFE_CAST(V1028075 AS FLOAT64) V1028075,\nSAFE_CAST(V1028076 AS FLOAT64) V1028076,\nSAFE_CAST(V1028077 AS FLOAT64) V1028077,\nSAFE_CAST(V1028078 AS FLOAT64) V1028078,\nSAFE_CAST(V1028079 AS FLOAT64) V1028079,\nSAFE_CAST(V1028080 AS FLOAT64) V1028080,\nSAFE_CAST(V1028081 AS FLOAT64) V1028081,\nSAFE_CAST(V1028082 AS FLOAT64) V1028082,\nSAFE_CAST(V1028083 AS FLOAT64) V1028083,\nSAFE_CAST(V1028084 AS FLOAT64) V1028084,\nSAFE_CAST(V1028085 AS FLOAT64) V1028085,\nSAFE_CAST(V1028086 AS FLOAT64) V1028086,\nSAFE_CAST(V1028087 AS FLOAT64) V1028087,\nSAFE_CAST(V1028088 AS FLOAT64) V1028088,\nSAFE_CAST(V1028089 AS FLOAT64) V1028089,\nSAFE_CAST(V1028090 AS FLOAT64) V1028090,\nSAFE_CAST(V1028091 AS FLOAT64) V1028091,\nSAFE_CAST(V1028092 AS FLOAT64) V1028092,\nSAFE_CAST(V1028093 AS FLOAT64) V1028093,\nSAFE_CAST(V1028094 AS FLOAT64) V1028094,\nSAFE_CAST(V1028095 AS FLOAT64) V1028095,\nSAFE_CAST(V1028096 AS FLOAT64) V1028096,\nSAFE_CAST(V1028097 AS FLOAT64) V1028097,\nSAFE_CAST(V1028098 AS FLOAT64) V1028098,\nSAFE_CAST(V1028099 AS FLOAT64) V1028099,\nSAFE_CAST(V1028100 AS FLOAT64) V1028100,\nSAFE_CAST(V1028101 AS FLOAT64) V1028101,\nSAFE_CAST(V1028102 AS FLOAT64) V1028102,\nSAFE_CAST(V1028103 AS FLOAT64) V1028103,\nSAFE_CAST(V1028104 AS FLOAT64) V1028104,\nSAFE_CAST(V1028105 AS FLOAT64) V1028105,\nSAFE_CAST(V1028106 AS FLOAT64) V1028106,\nSAFE_CAST(V1028107 AS FLOAT64) V1028107,\nSAFE_CAST(V1028108 AS FLOAT64) V1028108,\nSAFE_CAST(V1028109 AS FLOAT64) V1028109,\nSAFE_CAST(V1028110 AS FLOAT64) V1028110,\nSAFE_CAST(V1028111 AS FLOAT64) V1028111,\nSAFE_CAST(V1028112 AS FLOAT64) V1028112,\nSAFE_CAST(V1028113 AS FLOAT64) V1028113,\nSAFE_CAST(V1028114 AS FLOAT64) V1028114,\nSAFE_CAST(V1028115 AS FLOAT64) V1028115,\nSAFE_CAST(V1028116 AS FLOAT64) V1028116,\nSAFE_CAST(V1028117 AS FLOAT64) V1028117,\nSAFE_CAST(V1028118 AS FLOAT64) V1028118,\nSAFE_CAST(V1028119 AS FLOAT64) V1028119,\nSAFE_CAST(V1028120 AS FLOAT64) V1028120,\nSAFE_CAST(V1028121 AS FLOAT64) V1028121,\nSAFE_CAST(V1028122 AS FLOAT64) V1028122,\nSAFE_CAST(V1028123 AS FLOAT64) V1028123,\nSAFE_CAST(V1028124 AS FLOAT64) V1028124,\nSAFE_CAST(V1028125 AS FLOAT64) V1028125,\nSAFE_CAST(V1028126 AS FLOAT64) V1028126,\nSAFE_CAST(V1028127 AS FLOAT64) V1028127,\nSAFE_CAST(V1028128 AS FLOAT64) V1028128,\nSAFE_CAST(V1028129 AS FLOAT64) V1028129,\nSAFE_CAST(V1028130 AS FLOAT64) V1028130,\nSAFE_CAST(V1028131 AS FLOAT64) V1028131,\nSAFE_CAST(V1028132 AS FLOAT64) V1028132,\nSAFE_CAST(V1028133 AS FLOAT64) V1028133,\nSAFE_CAST(V1028134 AS FLOAT64) V1028134,\nSAFE_CAST(V1028135 AS FLOAT64) V1028135,\nSAFE_CAST(V1028136 AS FLOAT64) V1028136,\nSAFE_CAST(V1028137 AS FLOAT64) V1028137,\nSAFE_CAST(V1028138 AS FLOAT64) V1028138,\nSAFE_CAST(V1028139 AS FLOAT64) V1028139,\nSAFE_CAST(V1028140 AS FLOAT64) V1028140,\nSAFE_CAST(V1028141 AS FLOAT64) V1028141,\nSAFE_CAST(V1028142 AS FLOAT64) V1028142,\nSAFE_CAST(V1028143 AS FLOAT64) V1028143,\nSAFE_CAST(V1028144 AS FLOAT64) V1028144,\nSAFE_CAST(V1028145 AS FLOAT64) V1028145,\nSAFE_CAST(V1028146 AS FLOAT64) V1028146,\nSAFE_CAST(V1028147 AS FLOAT64) V1028147,\nSAFE_CAST(V1028148 AS FLOAT64) V1028148,\nSAFE_CAST(V1028149 AS FLOAT64) V1028149,\nSAFE_CAST(V1028150 AS FLOAT64) V1028150,\nSAFE_CAST(V1028151 AS FLOAT64) V1028151,\nSAFE_CAST(V1028152 AS FLOAT64) V1028152,\nSAFE_CAST(V1028153 AS FLOAT64) V1028153,\nSAFE_CAST(V1028154 AS FLOAT64) V1028154,\nSAFE_CAST(V1028155 AS FLOAT64) V1028155,\nSAFE_CAST(V1028156 AS FLOAT64) V1028156,\nSAFE_CAST(V1028157 AS FLOAT64) V1028157,\nSAFE_CAST(V1028158 AS FLOAT64) V1028158,\nSAFE_CAST(V1028159 AS FLOAT64) V1028159,\nSAFE_CAST(V1028160 AS FLOAT64) V1028160,\nSAFE_CAST(V1028161 AS FLOAT64) V1028161,\nSAFE_CAST(V1028162 AS FLOAT64) V1028162,\nSAFE_CAST(V1028163 AS FLOAT64) V1028163,\nSAFE_CAST(V1028164 AS FLOAT64) V1028164,\nSAFE_CAST(V1028165 AS FLOAT64) V1028165,\nSAFE_CAST(V1028166 AS FLOAT64) V1028166,\nSAFE_CAST(V1028167 AS FLOAT64) V1028167,\nSAFE_CAST(V1028168 AS FLOAT64) V1028168,\nSAFE_CAST(V1028169 AS FLOAT64) V1028169,\nSAFE_CAST(V1028170 AS FLOAT64) V1028170,\nSAFE_CAST(V1028171 AS FLOAT64) V1028171,\nSAFE_CAST(V1028172 AS FLOAT64) V1028172,\nSAFE_CAST(V1028173 AS FLOAT64) V1028173,\nSAFE_CAST(V1028174 AS FLOAT64) V1028174,\nSAFE_CAST(V1028175 AS FLOAT64) V1028175,\nSAFE_CAST(V1028176 AS FLOAT64) V1028176,\nSAFE_CAST(V1028177 AS FLOAT64) V1028177,\nSAFE_CAST(V1028178 AS FLOAT64) V1028178,\nSAFE_CAST(V1028179 AS FLOAT64) V1028179,\nSAFE_CAST(V1028180 AS FLOAT64) V1028180,\nSAFE_CAST(V1028181 AS FLOAT64) V1028181,\nSAFE_CAST(V1028182 AS FLOAT64) V1028182,\nSAFE_CAST(V1028183 AS FLOAT64) V1028183,\nSAFE_CAST(V1028184 AS FLOAT64) V1028184,\nSAFE_CAST(V1028185 AS FLOAT64) V1028185,\nSAFE_CAST(V1028186 AS FLOAT64) V1028186,\nSAFE_CAST(V1028187 AS FLOAT64) V1028187,\nSAFE_CAST(V1028188 AS FLOAT64) V1028188,\nSAFE_CAST(V1028189 AS FLOAT64) V1028189,\nSAFE_CAST(V1028190 AS FLOAT64) V1028190,\nSAFE_CAST(V1028191 AS FLOAT64) V1028191,\nSAFE_CAST(V1028192 AS FLOAT64) V1028192,\nSAFE_CAST(V1028193 AS FLOAT64) V1028193,\nSAFE_CAST(V1028194 AS FLOAT64) V1028194,\nSAFE_CAST(V1028195 AS FLOAT64) V1028195,\nSAFE_CAST(V1028196 AS FLOAT64) V1028196,\nSAFE_CAST(V1028197 AS FLOAT64) V1028197,\nSAFE_CAST(V1028198 AS FLOAT64) V1028198,\nSAFE_CAST(V1028199 AS FLOAT64) V1028199,\nSAFE_CAST(V1028200 AS FLOAT64) V1028200,\nSAFE_CAST(habitual AS FLOAT64) habitual,\nSAFE_CAST(efetivo AS FLOAT64) efetivo\nFROM basedosdados-staging.br_ibge_pnadc_staging.microdados AS t", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": "microdados", "schema": "br_ibge_pnadc", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "br_ibge_pnadc", "fqn": ["basedosdados", "br_ibge_pnadc", "br_ibge_pnadc__microdados"], "unique_id": "model.basedosdados.br_ibge_pnadc__microdados", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "br_ibge_pnadc/br_ibge_pnadc__microdados.sql", "original_file_path": "models/br_ibge_pnadc/br_ibge_pnadc__microdados.sql", "name": "br_ibge_pnadc__microdados", "alias": "microdados", "checksum": {"name": "sha256", "checksum": "e036c95ad5cd89365fbbd62c4c26029566f8b3171e1048a71421c2400359ee55"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/br_ibge_pnadc/br_ibge_pnadc__microdados.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "br_ibge_pnadc", "alias": "microdados"}, "created_at": 1663801356, "compiled_sql": "\nSELECT \nSAFE_CAST(ano AS INT64) ano,\nSAFE_CAST(trimestre AS INT64) trimestre,\nSAFE_CAST(id_uf AS STRING) id_uf,\nSAFE_CAST(sigla_uf AS STRING) sigla_uf,\nSAFE_CAST(capital AS STRING) capital,\nSAFE_CAST(rm_ride AS STRING) rm_ride,\nSAFE_CAST(id_upa AS STRING) id_upa,\nSAFE_CAST(id_estrato AS STRING) id_estrato,\nSAFE_CAST(id_domicilio AS STRING) id_domicilio,\nSAFE_CAST(V1008 AS INT64) V1008,\nSAFE_CAST(V1014 AS INT64) V1014,\nSAFE_CAST(V1016 AS INT64) V1016,\nSAFE_CAST(V1022 AS STRING) V1022,\nSAFE_CAST(V1023 AS STRING) V1023,\nSAFE_CAST(V1027 AS FLOAT64) V1027,\nSAFE_CAST(V1028 AS FLOAT64) V1028,\nSAFE_CAST(V1029 AS INT64) V1029,\nSAFE_CAST(V1033 AS INT64) V1033,\nSAFE_CAST(posest AS STRING) posest,\nSAFE_CAST(posest_sxi AS STRING) posest_sxi,\nSAFE_CAST(V2001 AS INT64) V2001,\nSAFE_CAST(V2003 AS INT64) V2003,\nSAFE_CAST(V2005 AS STRING) V2005,\nSAFE_CAST(V2007 AS STRING) V2007,\nSAFE_CAST(V2008 AS INT64) V2008,\nSAFE_CAST(V20081 AS INT64) V20081,\nSAFE_CAST(V20082 AS INT64) V20082,\nSAFE_CAST(V2009 AS INT64) V2009,\nSAFE_CAST(V2010 AS STRING) V2010,\nSAFE_CAST(V3001 AS STRING) V3001,\nSAFE_CAST(V3002 AS STRING) V3002,\nSAFE_CAST(V3002A AS STRING) V3002A,\nSAFE_CAST(V3003 AS STRING) V3003,\nSAFE_CAST(V3003A AS STRING) V3003A,\nSAFE_CAST(V3004 AS STRING) V3004,\nSAFE_CAST(V3005 AS STRING) V3005,\nSAFE_CAST(V3005A AS STRING) V3005A,\nSAFE_CAST(V3006 AS STRING) V3006,\nSAFE_CAST(V3006A AS STRING) V3006A,\nSAFE_CAST(V3007 AS STRING) V3007,\nSAFE_CAST(V3008 AS STRING) V3008,\nSAFE_CAST(V3009 AS STRING) V3009,\nSAFE_CAST(V3009A AS STRING) V3009A,\nSAFE_CAST(V3010 AS STRING) V3010,\nSAFE_CAST(V3011 AS STRING) V3011,\nSAFE_CAST(V3011A AS STRING) V3011A,\nSAFE_CAST(V3012 AS STRING) V3012,\nSAFE_CAST(V3013 AS STRING) V3013,\nSAFE_CAST(V3013A AS STRING) V3013A,\nSAFE_CAST(V3013B AS STRING) V3013B,\nSAFE_CAST(V3014 AS STRING) V3014,\nSAFE_CAST(V4001 AS STRING) V4001,\nSAFE_CAST(V4002 AS STRING) V4002,\nSAFE_CAST(V4003 AS STRING) V4003,\nSAFE_CAST(V4004 AS STRING) V4004,\nSAFE_CAST(V4005 AS STRING) V4005,\nSAFE_CAST(V4006 AS STRING) V4006,\nSAFE_CAST(V4006A AS STRING) V4006A,\nSAFE_CAST(V4007 AS STRING) V4007,\nSAFE_CAST(V4008 AS STRING) V4008,\nSAFE_CAST(V40081 AS INT64) V40081,\nSAFE_CAST(V40082 AS INT64) V40082,\nSAFE_CAST(V40083 AS INT64) V40083,\nSAFE_CAST(V4009 AS STRING) V4009,\nSAFE_CAST(V4010 AS STRING) V4010,\nSAFE_CAST(V4012 AS STRING) V4012,\nSAFE_CAST(V40121 AS STRING) V40121,\nSAFE_CAST(V4013 AS STRING) V4013,\nSAFE_CAST(V40132 AS STRING) V40132,\nSAFE_CAST(V40132A AS STRING) V40132A,\nSAFE_CAST(V4014 AS STRING) V4014,\nSAFE_CAST(V4015 AS STRING) V4015,\nSAFE_CAST(V40151 AS STRING) V40151,\nSAFE_CAST(V401511 AS INT64) V401511,\nSAFE_CAST(V401512 AS INT64) V401512,\nSAFE_CAST(V4016 AS STRING) V4016,\nSAFE_CAST(V40161 AS INT64) V40161,\nSAFE_CAST(V40162 AS INT64) V40162,\nSAFE_CAST(V40163 AS INT64) V40163,\nSAFE_CAST(V4017 AS STRING) V4017,\nSAFE_CAST(V40171 AS STRING) V40171,\nSAFE_CAST(V401711 AS INT64) V401711,\nSAFE_CAST(V4018 AS STRING) V4018,\nSAFE_CAST(V40181 AS INT64) V40181,\nSAFE_CAST(V40182 AS INT64) V40182,\nSAFE_CAST(V40183 AS INT64) V40183,\nSAFE_CAST(V4019 AS STRING) V4019,\nSAFE_CAST(V4020 AS STRING) V4020,\nSAFE_CAST(V4021 AS STRING) V4021,\nSAFE_CAST(V4022 AS STRING) V4022,\nSAFE_CAST(V4024 AS STRING) V4024,\nSAFE_CAST(V4025 AS STRING) V4025,\nSAFE_CAST(V4026 AS STRING) V4026,\nSAFE_CAST(V4027 AS STRING) V4027,\nSAFE_CAST(V4028 AS STRING) V4028,\nSAFE_CAST(V4029 AS STRING) V4029,\nSAFE_CAST(V4032 AS STRING) V4032,\nSAFE_CAST(V4033 AS STRING) V4033,\nSAFE_CAST(V40331 AS STRING) V40331,\nSAFE_CAST(V403311 AS STRING) V403311,\nSAFE_CAST(V403312 AS FLOAT64) V403312,\nSAFE_CAST(V40332 AS STRING) V40332,\nSAFE_CAST(V403321 AS STRING) V403321,\nSAFE_CAST(V403322 AS FLOAT64) V403322,\nSAFE_CAST(V40333 AS STRING) V40333,\nSAFE_CAST(V403331 AS STRING) V403331,\nSAFE_CAST(V4034 AS STRING) V4034,\nSAFE_CAST(V40341 AS STRING) V40341,\nSAFE_CAST(V403411 AS STRING) V403411,\nSAFE_CAST(V403412 AS FLOAT64) V403412,\nSAFE_CAST(V40342 AS STRING) V40342,\nSAFE_CAST(V403421 AS STRING) V403421,\nSAFE_CAST(V403422 AS FLOAT64) V403422,\nSAFE_CAST(V4039 AS INT64) V4039,\nSAFE_CAST(V4039C AS INT64) V4039C,\nSAFE_CAST(V4040 AS STRING) V4040,\nSAFE_CAST(V40401 AS STRING) V40401,\nSAFE_CAST(V40402 AS STRING) V40402,\nSAFE_CAST(V40403 AS STRING) V40403,\nSAFE_CAST(V4041 AS STRING) V4041,\nSAFE_CAST(V4043 AS STRING) V4043,\nSAFE_CAST(V40431 AS STRING) V40431,\nSAFE_CAST(V4044 AS STRING) V4044,\nSAFE_CAST(V4045 AS STRING) V4045,\nSAFE_CAST(V4046 AS STRING) V4046,\nSAFE_CAST(V4047 AS STRING) V4047,\nSAFE_CAST(V4048 AS STRING) V4048,\nSAFE_CAST(V4049 AS STRING) V4049,\nSAFE_CAST(V4050 AS STRING) V4050,\nSAFE_CAST(V40501 AS STRING) V40501,\nSAFE_CAST(V405011 AS STRING) V405011,\nSAFE_CAST(V405012 AS FLOAT64) V405012,\nSAFE_CAST(V40502 AS STRING) V40502,\nSAFE_CAST(V405021 AS STRING) V405021,\nSAFE_CAST(V405022 AS FLOAT64) V405022,\nSAFE_CAST(V40503 AS STRING) V40503,\nSAFE_CAST(V405031 AS STRING) V405031,\nSAFE_CAST(V4051 AS STRING) V4051,\nSAFE_CAST(V40511 AS STRING) V40511,\nSAFE_CAST(V405111 AS STRING) V405111,\nSAFE_CAST(V405112 AS FLOAT64) V405112,\nSAFE_CAST(V40512 AS STRING) V40512,\nSAFE_CAST(V405121 AS STRING) V405121,\nSAFE_CAST(V405122 AS FLOAT64) V405122,\nSAFE_CAST(V4056 AS INT64) V4056,\nSAFE_CAST(V4056C AS INT64) V4056C,\nSAFE_CAST(V4057 AS STRING) V4057,\nSAFE_CAST(V4058 AS STRING) V4058,\nSAFE_CAST(V40581 AS STRING) V40581,\nSAFE_CAST(V405811 AS STRING) V405811,\nSAFE_CAST(V405812 AS FLOAT64) V405812,\nSAFE_CAST(V40582 AS STRING) V40582,\nSAFE_CAST(V405821 AS STRING) V405821,\nSAFE_CAST(V405822 AS FLOAT64) V405822,\nSAFE_CAST(V40583 AS STRING) V40583,\nSAFE_CAST(V405831 AS STRING) V405831,\nSAFE_CAST(V40584 AS STRING) V40584,\nSAFE_CAST(V4059 AS STRING) V4059,\nSAFE_CAST(V40591 AS STRING) V40591,\nSAFE_CAST(V405911 AS STRING) V405911,\nSAFE_CAST(V405912 AS FLOAT64) V405912,\nSAFE_CAST(V40592 AS STRING) V40592,\nSAFE_CAST(V405921 AS STRING) V405921,\nSAFE_CAST(V405922 AS FLOAT64) V405922,\nSAFE_CAST(V4062 AS INT64) V4062,\nSAFE_CAST(V4062C AS INT64) V4062C,\nSAFE_CAST(V4063 AS STRING) V4063,\nSAFE_CAST(V4063A AS STRING) V4063A,\nSAFE_CAST(V4064 AS STRING) V4064,\nSAFE_CAST(V4064A AS STRING) V4064A,\nSAFE_CAST(V4071 AS STRING) V4071,\nSAFE_CAST(V4072 AS STRING) V4072,\nSAFE_CAST(V4072A AS STRING) V4072A,\nSAFE_CAST(V4073 AS STRING) V4073,\nSAFE_CAST(V4074 AS STRING) V4074,\nSAFE_CAST(V4074A AS STRING) V4074A,\nSAFE_CAST(V4075A AS STRING) V4075A,\nSAFE_CAST(V4075A1 AS INT64) V4075A1,\nSAFE_CAST(V4076 AS STRING) V4076,\nSAFE_CAST(V40761 AS INT64) V40761,\nSAFE_CAST(V40762 AS INT64) V40762,\nSAFE_CAST(V40763 AS INT64) V40763,\nSAFE_CAST(V4077 AS STRING) V4077,\nSAFE_CAST(V4078 AS STRING) V4078,\nSAFE_CAST(V4078A AS STRING) V4078A,\nSAFE_CAST(V4082 AS STRING) V4082,\nSAFE_CAST(VD2002 AS STRING) VD2002,\nSAFE_CAST(VD2003 AS INT64) VD2003,\nSAFE_CAST(VD2004 AS STRING) VD2004,\nSAFE_CAST(VD3004 AS STRING) VD3004,\nSAFE_CAST(VD3005 AS INT64) VD3005,\nSAFE_CAST(VD3006 AS STRING) VD3006,\nSAFE_CAST(VD4001 AS STRING) VD4001,\nSAFE_CAST(VD4002 AS STRING) VD4002,\nSAFE_CAST(VD4003 AS STRING) VD4003,\nSAFE_CAST(VD4004 AS STRING) VD4004,\nSAFE_CAST(VD4004A AS STRING) VD4004A,\nSAFE_CAST(VD4005 AS STRING) VD4005,\nSAFE_CAST(VD4007 AS STRING) VD4007,\nSAFE_CAST(VD4008 AS STRING) VD4008,\nSAFE_CAST(VD4009 AS STRING) VD4009,\nSAFE_CAST(VD4010 AS STRING) VD4010,\nSAFE_CAST(VD4011 AS STRING) VD4011,\nSAFE_CAST(VD4012 AS STRING) VD4012,\nSAFE_CAST(VD4013 AS STRING) VD4013,\nSAFE_CAST(VD4014 AS STRING) VD4014,\nSAFE_CAST(VD4015 AS STRING) VD4015,\nSAFE_CAST(VD4016 AS FLOAT64) VD4016,\nSAFE_CAST(VD4017 AS FLOAT64) VD4017,\nSAFE_CAST(VD4018 AS STRING) VD4018,\nSAFE_CAST(VD4019 AS FLOAT64) VD4019,\nSAFE_CAST(VD4020 AS FLOAT64) VD4020,\nSAFE_CAST(VD4023 AS STRING) VD4023,\nSAFE_CAST(VD4030 AS STRING) VD4030,\nSAFE_CAST(VD4031 AS INT64) VD4031,\nSAFE_CAST(VD4032 AS INT64) VD4032,\nSAFE_CAST(VD4033 AS INT64) VD4033,\nSAFE_CAST(VD4034 AS INT64) VD4034,\nSAFE_CAST(VD4035 AS INT64) VD4035,\nSAFE_CAST(VD4036 AS STRING) VD4036,\nSAFE_CAST(VD4037 AS STRING) VD4037,\nSAFE_CAST(V1028001 AS FLOAT64) V1028001,\nSAFE_CAST(V1028002 AS FLOAT64) V1028002,\nSAFE_CAST(V1028003 AS FLOAT64) V1028003,\nSAFE_CAST(V1028004 AS FLOAT64) V1028004,\nSAFE_CAST(V1028005 AS FLOAT64) V1028005,\nSAFE_CAST(V1028006 AS FLOAT64) V1028006,\nSAFE_CAST(V1028007 AS FLOAT64) V1028007,\nSAFE_CAST(V1028008 AS FLOAT64) V1028008,\nSAFE_CAST(V1028009 AS FLOAT64) V1028009,\nSAFE_CAST(V1028010 AS FLOAT64) V1028010,\nSAFE_CAST(V1028011 AS FLOAT64) V1028011,\nSAFE_CAST(V1028012 AS FLOAT64) V1028012,\nSAFE_CAST(V1028013 AS FLOAT64) V1028013,\nSAFE_CAST(V1028014 AS FLOAT64) V1028014,\nSAFE_CAST(V1028015 AS FLOAT64) V1028015,\nSAFE_CAST(V1028016 AS FLOAT64) V1028016,\nSAFE_CAST(V1028017 AS FLOAT64) V1028017,\nSAFE_CAST(V1028018 AS FLOAT64) V1028018,\nSAFE_CAST(V1028019 AS FLOAT64) V1028019,\nSAFE_CAST(V1028020 AS FLOAT64) V1028020,\nSAFE_CAST(V1028021 AS FLOAT64) V1028021,\nSAFE_CAST(V1028022 AS FLOAT64) V1028022,\nSAFE_CAST(V1028023 AS FLOAT64) V1028023,\nSAFE_CAST(V1028024 AS FLOAT64) V1028024,\nSAFE_CAST(V1028025 AS FLOAT64) V1028025,\nSAFE_CAST(V1028026 AS FLOAT64) V1028026,\nSAFE_CAST(V1028027 AS FLOAT64) V1028027,\nSAFE_CAST(V1028028 AS FLOAT64) V1028028,\nSAFE_CAST(V1028029 AS FLOAT64) V1028029,\nSAFE_CAST(V1028030 AS FLOAT64) V1028030,\nSAFE_CAST(V1028031 AS FLOAT64) V1028031,\nSAFE_CAST(V1028032 AS FLOAT64) V1028032,\nSAFE_CAST(V1028033 AS FLOAT64) V1028033,\nSAFE_CAST(V1028034 AS FLOAT64) V1028034,\nSAFE_CAST(V1028035 AS FLOAT64) V1028035,\nSAFE_CAST(V1028036 AS FLOAT64) V1028036,\nSAFE_CAST(V1028037 AS FLOAT64) V1028037,\nSAFE_CAST(V1028038 AS FLOAT64) V1028038,\nSAFE_CAST(V1028039 AS FLOAT64) V1028039,\nSAFE_CAST(V1028040 AS FLOAT64) V1028040,\nSAFE_CAST(V1028041 AS FLOAT64) V1028041,\nSAFE_CAST(V1028042 AS FLOAT64) V1028042,\nSAFE_CAST(V1028043 AS FLOAT64) V1028043,\nSAFE_CAST(V1028044 AS FLOAT64) V1028044,\nSAFE_CAST(V1028045 AS FLOAT64) V1028045,\nSAFE_CAST(V1028046 AS FLOAT64) V1028046,\nSAFE_CAST(V1028047 AS FLOAT64) V1028047,\nSAFE_CAST(V1028048 AS FLOAT64) V1028048,\nSAFE_CAST(V1028049 AS FLOAT64) V1028049,\nSAFE_CAST(V1028050 AS FLOAT64) V1028050,\nSAFE_CAST(V1028051 AS FLOAT64) V1028051,\nSAFE_CAST(V1028052 AS FLOAT64) V1028052,\nSAFE_CAST(V1028053 AS FLOAT64) V1028053,\nSAFE_CAST(V1028054 AS FLOAT64) V1028054,\nSAFE_CAST(V1028055 AS FLOAT64) V1028055,\nSAFE_CAST(V1028056 AS FLOAT64) V1028056,\nSAFE_CAST(V1028057 AS FLOAT64) V1028057,\nSAFE_CAST(V1028058 AS FLOAT64) V1028058,\nSAFE_CAST(V1028059 AS FLOAT64) V1028059,\nSAFE_CAST(V1028060 AS FLOAT64) V1028060,\nSAFE_CAST(V1028061 AS FLOAT64) V1028061,\nSAFE_CAST(V1028062 AS FLOAT64) V1028062,\nSAFE_CAST(V1028063 AS FLOAT64) V1028063,\nSAFE_CAST(V1028064 AS FLOAT64) V1028064,\nSAFE_CAST(V1028065 AS FLOAT64) V1028065,\nSAFE_CAST(V1028066 AS FLOAT64) V1028066,\nSAFE_CAST(V1028067 AS FLOAT64) V1028067,\nSAFE_CAST(V1028068 AS FLOAT64) V1028068,\nSAFE_CAST(V1028069 AS FLOAT64) V1028069,\nSAFE_CAST(V1028070 AS FLOAT64) V1028070,\nSAFE_CAST(V1028071 AS FLOAT64) V1028071,\nSAFE_CAST(V1028072 AS FLOAT64) V1028072,\nSAFE_CAST(V1028073 AS FLOAT64) V1028073,\nSAFE_CAST(V1028074 AS FLOAT64) V1028074,\nSAFE_CAST(V1028075 AS FLOAT64) V1028075,\nSAFE_CAST(V1028076 AS FLOAT64) V1028076,\nSAFE_CAST(V1028077 AS FLOAT64) V1028077,\nSAFE_CAST(V1028078 AS FLOAT64) V1028078,\nSAFE_CAST(V1028079 AS FLOAT64) V1028079,\nSAFE_CAST(V1028080 AS FLOAT64) V1028080,\nSAFE_CAST(V1028081 AS FLOAT64) V1028081,\nSAFE_CAST(V1028082 AS FLOAT64) V1028082,\nSAFE_CAST(V1028083 AS FLOAT64) V1028083,\nSAFE_CAST(V1028084 AS FLOAT64) V1028084,\nSAFE_CAST(V1028085 AS FLOAT64) V1028085,\nSAFE_CAST(V1028086 AS FLOAT64) V1028086,\nSAFE_CAST(V1028087 AS FLOAT64) V1028087,\nSAFE_CAST(V1028088 AS FLOAT64) V1028088,\nSAFE_CAST(V1028089 AS FLOAT64) V1028089,\nSAFE_CAST(V1028090 AS FLOAT64) V1028090,\nSAFE_CAST(V1028091 AS FLOAT64) V1028091,\nSAFE_CAST(V1028092 AS FLOAT64) V1028092,\nSAFE_CAST(V1028093 AS FLOAT64) V1028093,\nSAFE_CAST(V1028094 AS FLOAT64) V1028094,\nSAFE_CAST(V1028095 AS FLOAT64) V1028095,\nSAFE_CAST(V1028096 AS FLOAT64) V1028096,\nSAFE_CAST(V1028097 AS FLOAT64) V1028097,\nSAFE_CAST(V1028098 AS FLOAT64) V1028098,\nSAFE_CAST(V1028099 AS FLOAT64) V1028099,\nSAFE_CAST(V1028100 AS FLOAT64) V1028100,\nSAFE_CAST(V1028101 AS FLOAT64) V1028101,\nSAFE_CAST(V1028102 AS FLOAT64) V1028102,\nSAFE_CAST(V1028103 AS FLOAT64) V1028103,\nSAFE_CAST(V1028104 AS FLOAT64) V1028104,\nSAFE_CAST(V1028105 AS FLOAT64) V1028105,\nSAFE_CAST(V1028106 AS FLOAT64) V1028106,\nSAFE_CAST(V1028107 AS FLOAT64) V1028107,\nSAFE_CAST(V1028108 AS FLOAT64) V1028108,\nSAFE_CAST(V1028109 AS FLOAT64) V1028109,\nSAFE_CAST(V1028110 AS FLOAT64) V1028110,\nSAFE_CAST(V1028111 AS FLOAT64) V1028111,\nSAFE_CAST(V1028112 AS FLOAT64) V1028112,\nSAFE_CAST(V1028113 AS FLOAT64) V1028113,\nSAFE_CAST(V1028114 AS FLOAT64) V1028114,\nSAFE_CAST(V1028115 AS FLOAT64) V1028115,\nSAFE_CAST(V1028116 AS FLOAT64) V1028116,\nSAFE_CAST(V1028117 AS FLOAT64) V1028117,\nSAFE_CAST(V1028118 AS FLOAT64) V1028118,\nSAFE_CAST(V1028119 AS FLOAT64) V1028119,\nSAFE_CAST(V1028120 AS FLOAT64) V1028120,\nSAFE_CAST(V1028121 AS FLOAT64) V1028121,\nSAFE_CAST(V1028122 AS FLOAT64) V1028122,\nSAFE_CAST(V1028123 AS FLOAT64) V1028123,\nSAFE_CAST(V1028124 AS FLOAT64) V1028124,\nSAFE_CAST(V1028125 AS FLOAT64) V1028125,\nSAFE_CAST(V1028126 AS FLOAT64) V1028126,\nSAFE_CAST(V1028127 AS FLOAT64) V1028127,\nSAFE_CAST(V1028128 AS FLOAT64) V1028128,\nSAFE_CAST(V1028129 AS FLOAT64) V1028129,\nSAFE_CAST(V1028130 AS FLOAT64) V1028130,\nSAFE_CAST(V1028131 AS FLOAT64) V1028131,\nSAFE_CAST(V1028132 AS FLOAT64) V1028132,\nSAFE_CAST(V1028133 AS FLOAT64) V1028133,\nSAFE_CAST(V1028134 AS FLOAT64) V1028134,\nSAFE_CAST(V1028135 AS FLOAT64) V1028135,\nSAFE_CAST(V1028136 AS FLOAT64) V1028136,\nSAFE_CAST(V1028137 AS FLOAT64) V1028137,\nSAFE_CAST(V1028138 AS FLOAT64) V1028138,\nSAFE_CAST(V1028139 AS FLOAT64) V1028139,\nSAFE_CAST(V1028140 AS FLOAT64) V1028140,\nSAFE_CAST(V1028141 AS FLOAT64) V1028141,\nSAFE_CAST(V1028142 AS FLOAT64) V1028142,\nSAFE_CAST(V1028143 AS FLOAT64) V1028143,\nSAFE_CAST(V1028144 AS FLOAT64) V1028144,\nSAFE_CAST(V1028145 AS FLOAT64) V1028145,\nSAFE_CAST(V1028146 AS FLOAT64) V1028146,\nSAFE_CAST(V1028147 AS FLOAT64) V1028147,\nSAFE_CAST(V1028148 AS FLOAT64) V1028148,\nSAFE_CAST(V1028149 AS FLOAT64) V1028149,\nSAFE_CAST(V1028150 AS FLOAT64) V1028150,\nSAFE_CAST(V1028151 AS FLOAT64) V1028151,\nSAFE_CAST(V1028152 AS FLOAT64) V1028152,\nSAFE_CAST(V1028153 AS FLOAT64) V1028153,\nSAFE_CAST(V1028154 AS FLOAT64) V1028154,\nSAFE_CAST(V1028155 AS FLOAT64) V1028155,\nSAFE_CAST(V1028156 AS FLOAT64) V1028156,\nSAFE_CAST(V1028157 AS FLOAT64) V1028157,\nSAFE_CAST(V1028158 AS FLOAT64) V1028158,\nSAFE_CAST(V1028159 AS FLOAT64) V1028159,\nSAFE_CAST(V1028160 AS FLOAT64) V1028160,\nSAFE_CAST(V1028161 AS FLOAT64) V1028161,\nSAFE_CAST(V1028162 AS FLOAT64) V1028162,\nSAFE_CAST(V1028163 AS FLOAT64) V1028163,\nSAFE_CAST(V1028164 AS FLOAT64) V1028164,\nSAFE_CAST(V1028165 AS FLOAT64) V1028165,\nSAFE_CAST(V1028166 AS FLOAT64) V1028166,\nSAFE_CAST(V1028167 AS FLOAT64) V1028167,\nSAFE_CAST(V1028168 AS FLOAT64) V1028168,\nSAFE_CAST(V1028169 AS FLOAT64) V1028169,\nSAFE_CAST(V1028170 AS FLOAT64) V1028170,\nSAFE_CAST(V1028171 AS FLOAT64) V1028171,\nSAFE_CAST(V1028172 AS FLOAT64) V1028172,\nSAFE_CAST(V1028173 AS FLOAT64) V1028173,\nSAFE_CAST(V1028174 AS FLOAT64) V1028174,\nSAFE_CAST(V1028175 AS FLOAT64) V1028175,\nSAFE_CAST(V1028176 AS FLOAT64) V1028176,\nSAFE_CAST(V1028177 AS FLOAT64) V1028177,\nSAFE_CAST(V1028178 AS FLOAT64) V1028178,\nSAFE_CAST(V1028179 AS FLOAT64) V1028179,\nSAFE_CAST(V1028180 AS FLOAT64) V1028180,\nSAFE_CAST(V1028181 AS FLOAT64) V1028181,\nSAFE_CAST(V1028182 AS FLOAT64) V1028182,\nSAFE_CAST(V1028183 AS FLOAT64) V1028183,\nSAFE_CAST(V1028184 AS FLOAT64) V1028184,\nSAFE_CAST(V1028185 AS FLOAT64) V1028185,\nSAFE_CAST(V1028186 AS FLOAT64) V1028186,\nSAFE_CAST(V1028187 AS FLOAT64) V1028187,\nSAFE_CAST(V1028188 AS FLOAT64) V1028188,\nSAFE_CAST(V1028189 AS FLOAT64) V1028189,\nSAFE_CAST(V1028190 AS FLOAT64) V1028190,\nSAFE_CAST(V1028191 AS FLOAT64) V1028191,\nSAFE_CAST(V1028192 AS FLOAT64) V1028192,\nSAFE_CAST(V1028193 AS FLOAT64) V1028193,\nSAFE_CAST(V1028194 AS FLOAT64) V1028194,\nSAFE_CAST(V1028195 AS FLOAT64) V1028195,\nSAFE_CAST(V1028196 AS FLOAT64) V1028196,\nSAFE_CAST(V1028197 AS FLOAT64) V1028197,\nSAFE_CAST(V1028198 AS FLOAT64) V1028198,\nSAFE_CAST(V1028199 AS FLOAT64) V1028199,\nSAFE_CAST(V1028200 AS FLOAT64) V1028200,\nSAFE_CAST(habitual AS FLOAT64) habitual,\nSAFE_CAST(efetivo AS FLOAT64) efetivo\nFROM basedosdados-staging.br_ibge_pnadc_staging.microdados AS t", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`br_ibge_pnadc`.`microdados`"}, "model.basedosdados.ano_escola_serie_educacao_aprendizagem_adequada": {"raw_sql": "WITH saeb_pivot AS (\nSELECT\n  *\nFROM (\n  SELECT\n    ano,\n    id_escola,\n    id_aluno,\n    serie,\n    disciplina,\n    CASE\n      WHEN ano in (2007, 2009) THEN 1\n      ELSE peso_aluno\n    END as peso_aluno,\n    proficiencia_saeb,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb < 150) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb < 175) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb < 225) THEN 1\n      ELSE 0\n    END AS insuficiente,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 150 AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 200 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 175 AND proficiencia_saeb < 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 225 AND proficiencia_saeb < 300) THEN 1\n      ELSE 0\n    END AS basico,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 200 AND proficiencia_saeb < 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 275 AND proficiencia_saeb < 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 225 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 300 AND proficiencia_saeb < 350) THEN 1\n      ELSE 0\n    END AS proficiente,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 350) THEN 1\n      ELSE 0\n    END AS avancado,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 300) THEN 1\n      ELSE 0\n    END AS adequado,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 < 150) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 < 200) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 < 175) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 < 225) THEN 1\n      ELSE 0\n    END AS insuficiente_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 150 AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 175 AND proficiencia_saeb < 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225 AND proficiencia_saeb < 300) THEN 1\n      ELSE 0\n    END AS basico_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200 AND proficiencia_saeb < 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 275 AND proficiencia_saeb < 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 300 AND proficiencia_saeb < 350) THEN 1\n      ELSE 0\n    END AS proficiente_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 350) THEN 1\n      ELSE 0\n    END AS avancado_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 300) THEN 1\n      ELSE 0\n    END AS adequado_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 12 >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 12 >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 14 >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 14 >= 300) THEN 1\n      ELSE 0\n    END AS adequado_pandemia_SP\n  FROM `basedosdados-dev.br_inep_saeb.proficiencia`\n)\nPIVOT (\n  MAX(proficiencia_saeb)        AS proficiencia_saeb,\n  MAX(insuficiente)             AS insuficiente,\n  MAX(basico)                   AS basico,\n  MAX(proficiente)              AS proficiente,\n  MAX(avancado)                 AS avancado,\n  MAX(adequado)                 AS adequado,\n  MAX(insuficiente_pandemia_PB) AS insuficiente_pandemia_PB,\n  MAX(basico_pandemia_PB)       AS basico_pandemia_PB,\n  MAX(proficiente_pandemia_PB)  AS proficiente_pandemia_PB,\n  MAX(avancado_pandemia_PB)     AS avancado_pandemia_PB,\n  MAX(adequado_pandemia_PB)     AS adequado_pandemia_PB,\n  MAX(adequado_pandemia_SP)     AS adequado_pandemia_SP\n  FOR disciplina in (\n    'LP', 'MT'\n  )\n)\n)\n\nSELECT\n  *\nFROM (\n  SELECT\n    ano,\n    id_escola,\n    serie,\n    \n    SUM(proficiencia_saeb_LP * peso_aluno) / SUM(peso_aluno) as proficiencia_LP,\n    SUM(proficiencia_saeb_MT * peso_aluno) / SUM(peso_aluno) as proficiencia_MT,\n    \n    100 * SUM(insuficiente_LP * peso_aluno) / SUM(peso_aluno) as insuficiente_LP,\n    100 * SUM(insuficiente_MT * peso_aluno) / SUM(peso_aluno) as insuficiente_MT,\n    100 * SUM(basico_LP       * peso_aluno) / SUM(peso_aluno) as basico_LP,\n    100 * SUM(basico_MT       * peso_aluno) / SUM(peso_aluno) as basico_MT,\n    100 * SUM(proficiente_LP  * peso_aluno) / SUM(peso_aluno) as proficiente_LP,\n    100 * SUM(proficiente_MT  * peso_aluno) / SUM(peso_aluno) as proficiente_MT,\n    100 * SUM(avancado_LP     * peso_aluno) / SUM(peso_aluno) as avancado_LP,\n    100 * SUM(avancado_MT     * peso_aluno) / SUM(peso_aluno) as avancado_MT,\n    100 * SUM(adequado_LP     * peso_aluno) / SUM(peso_aluno) as adequado_LP,\n    100 * SUM(adequado_MT     * peso_aluno) / SUM(peso_aluno) as adequado_MT,\n    \n    100 * SUM(insuficiente_pandemia_PB_LP * peso_aluno) / SUM(peso_aluno) as insuficiente_pandemia_PB_LP,\n    100 * SUM(insuficiente_pandemia_PB_MT * peso_aluno) / SUM(peso_aluno) as insuficiente_pandemia_PB_MT,\n    100 * SUM(basico_pandemia_PB_LP       * peso_aluno) / SUM(peso_aluno) as basico_pandemia_PB_LP,\n    100 * SUM(basico_pandemia_PB_MT       * peso_aluno) / SUM(peso_aluno) as basico_pandemia_PB_MT,\n    100 * SUM(proficiente_pandemia_PB_LP  * peso_aluno) / SUM(peso_aluno) as proficiente_pandemia_PB_LP,\n    100 * SUM(proficiente_pandemia_PB_MT  * peso_aluno) / SUM(peso_aluno) as proficiente_pandemia_PB_MT,\n    100 * SUM(avancado_pandemia_PB_LP     * peso_aluno) / SUM(peso_aluno) as avancado_pandemia_PB_LP,\n    100 * SUM(avancado_pandemia_PB_MT     * peso_aluno) / SUM(peso_aluno) as avancado_pandemia_PB_MT,\n    100 * SUM(adequado_pandemia_PB_LP     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_PB_LP,\n    100 * SUM(adequado_pandemia_PB_MT     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_PB_MT,\n    100 * SUM(adequado_pandemia_SP_LP     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_SP_LP,\n    100 * SUM(adequado_pandemia_SP_MT     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_SP_MT,\n    \n  FROM saeb_pivot\n  GROUP BY ano, id_escola, serie\n  ORDER BY ano, id_escola, serie ASC\n)\nORDER BY id_escola, serie, ano", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "fundacao_lemann", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [{"sql": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "transaction": true, "index": null}], "pre-hook": []}, "database": "basedosdados-dev", "schema": "fundacao_lemann", "fqn": ["basedosdados", "fundacao_lemann", "ano_escola_serie_educacao_aprendizagem_adequada"], "unique_id": "model.basedosdados.ano_escola_serie_educacao_aprendizagem_adequada", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "fundacao_lemann/ano_escola_serie_educacao_aprendizagem_adequada.sql", "original_file_path": "models/fundacao_lemann/ano_escola_serie_educacao_aprendizagem_adequada.sql", "name": "ano_escola_serie_educacao_aprendizagem_adequada", "alias": "ano_escola_serie_educacao_aprendizagem_adequada", "checksum": {"name": "sha256", "checksum": "e5f974d18fa49c9b91498a618b79b473ce97ebbce7df9a8f418c9aad83e28353"}, "tags": [], "refs": [], "sources": [], "description": "Aprendizagem adequada, a n\u00edvel de escola e s\u00e9ries", "columns": {"ano": {"name": "ano", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_escola": {"name": "id_escola", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "serie": {"name": "serie", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiencia_LP": {"name": "proficiencia_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiencia_MT": {"name": "proficiencia_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "insuficiente_LP": {"name": "insuficiente_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "insuficiente_MT": {"name": "insuficiente_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "basico_LP": {"name": "basico_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "basico_MT": {"name": "basico_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiente_LP": {"name": "proficiente_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiente_MT": {"name": "proficiente_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "avancado_LP": {"name": "avancado_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "avancado_MT": {"name": "avancado_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_LP": {"name": "adequado_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_MT": {"name": "adequado_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "insuficiente_pandemia_PB_LP": {"name": "insuficiente_pandemia_PB_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "insuficiente_pandemia_PB_MT": {"name": "insuficiente_pandemia_PB_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "basico_pandemia_PB_LP": {"name": "basico_pandemia_PB_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "basico_pandemia_PB_MT": {"name": "basico_pandemia_PB_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiente_pandemia_PB_LP": {"name": "proficiente_pandemia_PB_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proficiente_pandemia_PB_MT": {"name": "proficiente_pandemia_PB_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "avancado_pandemia_PB_LP": {"name": "avancado_pandemia_PB_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "avancado_pandemia_PB_MT": {"name": "avancado_pandemia_PB_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_pandemia_PB_LP": {"name": "adequado_pandemia_PB_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_pandemia_PB_MT": {"name": "adequado_pandemia_PB_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_pandemia_SP_LP": {"name": "adequado_pandemia_SP_LP", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adequado_pandemia_SP_MT": {"name": "adequado_pandemia_SP_MT", "description": "NULLABLE", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "basedosdados://models/fundacao_lemann/schema.yml", "compiled_path": "target/compiled/basedosdados/models/fundacao_lemann/ano_escola_serie_educacao_aprendizagem_adequada.sql", "build_path": null, "deferred": false, "unrendered_config": {"post-hook": "GRANT `roles/bigquery.dataViewer` ON TABLE {{ this }} TO \"specialGroup:allUsers\"", "persist_docs": {"relation": true, "columns": true}, "materialized": "table", "schema": "fundacao_lemann"}, "created_at": 1663801357, "compiled_sql": "WITH saeb_pivot AS (\nSELECT\n  *\nFROM (\n  SELECT\n    ano,\n    id_escola,\n    id_aluno,\n    serie,\n    disciplina,\n    CASE\n      WHEN ano in (2007, 2009) THEN 1\n      ELSE peso_aluno\n    END as peso_aluno,\n    proficiencia_saeb,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb < 150) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb < 175) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb < 225) THEN 1\n      ELSE 0\n    END AS insuficiente,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 150 AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 200 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 175 AND proficiencia_saeb < 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 225 AND proficiencia_saeb < 300) THEN 1\n      ELSE 0\n    END AS basico,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 200 AND proficiencia_saeb < 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 275 AND proficiencia_saeb < 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 225 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 300 AND proficiencia_saeb < 350) THEN 1\n      ELSE 0\n    END AS proficiente,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 350) THEN 1\n      ELSE 0\n    END AS avancado,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb >= 300) THEN 1\n      ELSE 0\n    END AS adequado,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 < 150) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 < 200) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 < 175) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 < 225) THEN 1\n      ELSE 0\n    END AS insuficiente_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 150 AND proficiencia_saeb < 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 175 AND proficiencia_saeb < 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225 AND proficiencia_saeb < 300) THEN 1\n      ELSE 0\n    END AS basico_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200 AND proficiencia_saeb < 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 275 AND proficiencia_saeb < 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225 AND proficiencia_saeb < 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 300 AND proficiencia_saeb < 350) THEN 1\n      ELSE 0\n    END AS proficiente_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 250) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 325) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 275) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 350) THEN 1\n      ELSE 0\n    END AS avancado_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 16 >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 20 >= 300) THEN 1\n      ELSE 0\n    END AS adequado_pandemia_PB,\n    CASE\n      WHEN (serie = 5 AND disciplina = 'LP' AND proficiencia_saeb - 12 >= 200) THEN 1\n      WHEN (serie = 9 AND disciplina = 'LP' AND proficiencia_saeb - 12 >= 275) THEN 1\n      WHEN (serie = 5 AND disciplina = 'MT' AND proficiencia_saeb - 14 >= 225) THEN 1\n      WHEN (serie = 9 AND disciplina = 'MT' AND proficiencia_saeb - 14 >= 300) THEN 1\n      ELSE 0\n    END AS adequado_pandemia_SP\n  FROM `basedosdados-dev.br_inep_saeb.proficiencia`\n)\nPIVOT (\n  MAX(proficiencia_saeb)        AS proficiencia_saeb,\n  MAX(insuficiente)             AS insuficiente,\n  MAX(basico)                   AS basico,\n  MAX(proficiente)              AS proficiente,\n  MAX(avancado)                 AS avancado,\n  MAX(adequado)                 AS adequado,\n  MAX(insuficiente_pandemia_PB) AS insuficiente_pandemia_PB,\n  MAX(basico_pandemia_PB)       AS basico_pandemia_PB,\n  MAX(proficiente_pandemia_PB)  AS proficiente_pandemia_PB,\n  MAX(avancado_pandemia_PB)     AS avancado_pandemia_PB,\n  MAX(adequado_pandemia_PB)     AS adequado_pandemia_PB,\n  MAX(adequado_pandemia_SP)     AS adequado_pandemia_SP\n  FOR disciplina in (\n    'LP', 'MT'\n  )\n)\n)\n\nSELECT\n  *\nFROM (\n  SELECT\n    ano,\n    id_escola,\n    serie,\n    \n    SUM(proficiencia_saeb_LP * peso_aluno) / SUM(peso_aluno) as proficiencia_LP,\n    SUM(proficiencia_saeb_MT * peso_aluno) / SUM(peso_aluno) as proficiencia_MT,\n    \n    100 * SUM(insuficiente_LP * peso_aluno) / SUM(peso_aluno) as insuficiente_LP,\n    100 * SUM(insuficiente_MT * peso_aluno) / SUM(peso_aluno) as insuficiente_MT,\n    100 * SUM(basico_LP       * peso_aluno) / SUM(peso_aluno) as basico_LP,\n    100 * SUM(basico_MT       * peso_aluno) / SUM(peso_aluno) as basico_MT,\n    100 * SUM(proficiente_LP  * peso_aluno) / SUM(peso_aluno) as proficiente_LP,\n    100 * SUM(proficiente_MT  * peso_aluno) / SUM(peso_aluno) as proficiente_MT,\n    100 * SUM(avancado_LP     * peso_aluno) / SUM(peso_aluno) as avancado_LP,\n    100 * SUM(avancado_MT     * peso_aluno) / SUM(peso_aluno) as avancado_MT,\n    100 * SUM(adequado_LP     * peso_aluno) / SUM(peso_aluno) as adequado_LP,\n    100 * SUM(adequado_MT     * peso_aluno) / SUM(peso_aluno) as adequado_MT,\n    \n    100 * SUM(insuficiente_pandemia_PB_LP * peso_aluno) / SUM(peso_aluno) as insuficiente_pandemia_PB_LP,\n    100 * SUM(insuficiente_pandemia_PB_MT * peso_aluno) / SUM(peso_aluno) as insuficiente_pandemia_PB_MT,\n    100 * SUM(basico_pandemia_PB_LP       * peso_aluno) / SUM(peso_aluno) as basico_pandemia_PB_LP,\n    100 * SUM(basico_pandemia_PB_MT       * peso_aluno) / SUM(peso_aluno) as basico_pandemia_PB_MT,\n    100 * SUM(proficiente_pandemia_PB_LP  * peso_aluno) / SUM(peso_aluno) as proficiente_pandemia_PB_LP,\n    100 * SUM(proficiente_pandemia_PB_MT  * peso_aluno) / SUM(peso_aluno) as proficiente_pandemia_PB_MT,\n    100 * SUM(avancado_pandemia_PB_LP     * peso_aluno) / SUM(peso_aluno) as avancado_pandemia_PB_LP,\n    100 * SUM(avancado_pandemia_PB_MT     * peso_aluno) / SUM(peso_aluno) as avancado_pandemia_PB_MT,\n    100 * SUM(adequado_pandemia_PB_LP     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_PB_LP,\n    100 * SUM(adequado_pandemia_PB_MT     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_PB_MT,\n    100 * SUM(adequado_pandemia_SP_LP     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_SP_LP,\n    100 * SUM(adequado_pandemia_SP_MT     * peso_aluno) / SUM(peso_aluno) as adequado_pandemia_SP_MT,\n    \n  FROM saeb_pivot\n  GROUP BY ano, id_escola, serie\n  ORDER BY ano, id_escola, serie ASC\n)\nORDER BY id_escola, serie, ano", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "`basedosdados-dev`.`fundacao_lemann`.`ano_escola_serie_educacao_aprendizagem_adequada`"}, "test.basedosdados.unique_my_second_dbt_model_id.57a0f8c493": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.basedosdados.my_second_dbt_model"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "basedosdados-dev", "schema": "dbt_test__audit", "fqn": ["basedosdados", "schema_test", "unique_my_second_dbt_model_id"], "unique_id": "test.basedosdados.unique_my_second_dbt_model_id.57a0f8c493", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "schema_test/unique_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_second_dbt_model_id", "alias": "unique_my_second_dbt_model_id", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/example/schema.yml/schema_test/unique_my_second_dbt_model_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1663801356, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom `basedosdados-dev`.`example`.`my_second_dbt_model`\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id"}, "test.basedosdados.not_null_my_second_dbt_model_id.151b76d778": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.basedosdados.my_second_dbt_model"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "basedosdados-dev", "schema": "dbt_test__audit", "fqn": ["basedosdados", "schema_test", "not_null_my_second_dbt_model_id"], "unique_id": "test.basedosdados.not_null_my_second_dbt_model_id.151b76d778", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "schema_test/not_null_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_second_dbt_model_id", "alias": "not_null_my_second_dbt_model_id", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/basedosdados/models/example/schema.yml/schema_test/not_null_my_second_dbt_model_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1663801356, "compiled_sql": "\n    \n    \n\nselect *\nfrom `basedosdados-dev`.`example`.`my_second_dbt_model`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id"}, "test.basedosdados.unique_my_first_model_id.4a4cd8b027": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_model')) }}"}, "namespace": null}, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "basedosdados-dev", "schema": "dbt_test__audit", "fqn": ["basedosdados", "schema_test", "unique_my_first_model_id"], "unique_id": "test.basedosdados.unique_my_first_model_id.4a4cd8b027", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "schema_test/unique_my_first_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_first_model_id", "alias": "unique_my_first_model_id", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["my_first_model"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1663801356, "column_name": "id"}, "test.basedosdados.not_null_my_first_model_id.63c8996172": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_model')) }}"}, "namespace": null}, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "basedosdados-dev", "schema": "dbt_test__audit", "fqn": ["basedosdados", "schema_test", "not_null_my_first_model_id"], "unique_id": "test.basedosdados.not_null_my_first_model_id.63c8996172", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "schema_test/not_null_my_first_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_first_model_id", "alias": "not_null_my_first_model_id", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["my_first_model"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1663801356, "column_name": "id"}}, "sources": {}, "macros": {"macro.basedosdados.generate_schema_name": {"unique_id": "macro.basedosdados.generate_schema_name", "package_name": "basedosdados", "root_path": "/home/runner/work/queries/queries", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__get_catalog": {"unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.partition_by": {"unique_id": "macro.dbt_bigquery.partition_by", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.cluster_by": {"unique_id": "macro.dbt_bigquery.cluster_by", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery_options": {"unique_id": "macro.dbt_bigquery.bigquery_options", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery_table_options": {"unique_id": "macro.dbt_bigquery.bigquery_table_options", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__create_table_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, sql) -%}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace table {{ relation }}\n  {{ partition_by(partition_config) }}\n  {{ cluster_by(raw_cluster_by) }}\n  {{ bigquery_table_options(config, model, temporary) }}\n  as (\n    {{ sql }}\n  );\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery_view_options": {"unique_id": "macro.dbt_bigquery.bigquery_view_options", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__create_view_as": {"unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  as {{ sql }};\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__create_schema": {"unique_id": "macro.dbt_bigquery.bigquery__create_schema", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__create_schema", "macro_sql": "{% macro bigquery__create_schema(relation) -%}\n  {{ adapter.create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__drop_schema": {"unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__drop_relation": {"unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__current_timestamp": {"unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  CURRENT_TIMESTAMP()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__list_schemas": {"unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__persist_docs": {"unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__rename_relation": {"unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n  \n  {%- endset -%}\n  \n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__alter_column_type": {"unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.date_sharded_table": {"unique_id": "macro.dbt_bigquery.date_sharded_table", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.grant_access_to": {"unique_id": "macro.dbt_bigquery.grant_access_to", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.get_partitions_metadata": {"unique_id": "macro.dbt_bigquery.get_partitions_metadata", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "name": "get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__create_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.materialization_view_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__create_columns": {"unique_id": "macro.dbt_bigquery.bigquery__create_columns", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bigquery__post_snapshot": {"unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.make_date_partitioned_table": {"unique_id": "macro.dbt_bigquery.make_date_partitioned_table", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "name": "make_date_partitioned_table", "macro_sql": "{% macro make_date_partitioned_table(model, relation, dates, should_create, verbose=False) %}\n\n  {% if should_create %}\n      {{ adapter.make_date_partitioned_table(relation) }}\n  {% endif %}\n\n  {% for date in dates %}\n    {% set date = (date | string) %}\n    {% if verbose %}\n        {% set table_start_time = modules.datetime.datetime.now().strftime(\"%H:%M:%S\") %}\n        {{ log(table_start_time ~ ' | -> Running for day ' ~ date, info=True) }}\n    {% endif %}\n\n    {% set fixed_sql = model['compiled_sql'] | replace('[DBT__PARTITION_DATE]', date) %}\n    {% set _ = adapter.execute_model(model, 'table', fixed_sql, decorator=date) %}\n  {% endfor %}\n\n  {% set num_days = dates | length %}\n  {% if num_days == 1 %}\n      {% set result_str = 'CREATED 1 PARTITION' %}\n  {% else %}\n      {% set result_str = 'CREATED ' ~ num_days ~ ' PARTITIONS' %}\n  {% endif %}\n\n  {{ store_result('main', response=result_str) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.materialization_table_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "name": "materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery' -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n  {%- set verbose = config.get('verbose', False) -%}\n\n  {# partitions: iterate over each partition, running a separate query in a for-loop #}\n  {%- set partitions = config.get('partitions') -%}\n\n  {% if partitions %}\n      {% if partitions is number or partitions is string %}\n        {% set partitions = [(partitions | string)] %}\n      {% endif %}\n\n      {% if partitions is not iterable %}\n        {{ exceptions.raise_compiler_error(\"Provided `partitions` configuration is not a list. Got: \" ~ partitions, model) }}\n      {% endif %}\n  {% endif %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      Since dbt uses WRITE_TRUNCATE mode for tables, we only need to drop this thing\n      if it is not a table. If it _is_ already a table, then we can overwrite it without downtime\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% if partitions %}\n    {# Create the dp-table if 1. it does not exist or 2. it existed, but we just dropped it #}\n    {%- set should_create = (old_relation is none or exists_not_as_table) -%}\n    {{ make_date_partitioned_table(model, target_relation, partitions, should_create, verbose) }}\n  {% else %}\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- set cluster_by = config.get('cluster_by', none) -%}\n    {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n      {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n      {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    {% call statement('main') -%}\n      {{ create_table_as(False, target_relation, sql) }}\n    {% endcall -%}\n  {% endif %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt_bigquery.make_date_partitioned_table", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bq_insert_overwrite": {"unique_id": "macro.dbt_bigquery.bq_insert_overwrite", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "bq_insert_overwrite", "macro_sql": "{% macro bq_insert_overwrite(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n\n  {% if partitions is not none and partitions != [] %} {# static #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {{sql}}\n        )\n      {%- endset -%}\n\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=true) }}\n\n  {% else %} {# dynamic #}\n\n      {% set predicate -%}\n          {{ partition_by.render(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type }}>;\n      declare _dbt_max_partition {{ partition_by.data_type }} default (\n          select max({{ partition_by.field }}) from {{ this }}\n          where {{ partition_by.field }} is not null\n      );\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n        -- 1. create a temp table\n        {{ create_table_as(True, tmp_relation, sql) }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              array_agg(distinct {{ partition_by.render() }})\n          from {{ tmp_relation }}\n      );\n\n      {#\n        TODO: include_sql_header is a hack; consider a better approach that includes\n              the sql_header at the materialization-level instead\n      #}\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header=false) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n    {%- endset %}\n    {% if partition_by is none %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, on_schema_change\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n    {%- set source_sql -%}\n      {%- if tmp_relation_exists -%}\n        (\n          select * from {{ tmp_relation }}\n        )\n      {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n          {{sql}}\n        )\n      {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery' -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  \n  {% else %}\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' %} {# Check first, since otherwise we may not build a temp table #}\n      {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n      {% set tmp_relation_exists = true %}\n      {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n    \n    {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists\n    ) %}\n\n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {% endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.statement", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt_bigquery.materialization_copy_bigquery": {"unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "package_name": "dbt_bigquery", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "name": "materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter's copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/is_incremental.sql", "original_file_path": "macros/etc/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/query.sql", "original_file_path": "macros/etc/query.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/where_subquery.sql", "original_file_path": "macros/etc/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/where_subquery.sql", "original_file_path": "macros/etc/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "materialization_test_default", "macro_sql": "\n\n{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.column_list": {"unique_id": "macro.dbt.column_list", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list", "macro_sql": "{% macro column_list(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {% if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.column_list_for_create_table": {"unique_id": "macro.dbt.column_list_for_create_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list_for_create_table", "macro_sql": "{% macro column_list_for_create_table(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {{ col.data_type }} {%- if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.common_get_delete_insert_merge_sql": {"unique_id": "macro.dbt.common_get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "common_get_delete_insert_merge_sql", "macro_sql": "{% macro common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n    {{ common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.common_get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/table/table.sql", "original_file_path": "macros/materializations/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_table_as(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801355}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n  \n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change != 'ignore' %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.incremental_upsert": {"unique_id": "macro.dbt.incremental_upsert", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_upsert", "macro_sql": "{% macro incremental_upsert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    \n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    );\n    {%- endif %}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/incremental.sql", "original_file_path": "macros/materializations/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% set build_sql = incremental_upsert(tmp_relation, target_relation, unique_key=unique_key) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.incremental_upsert", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/view.sql", "original_file_path": "macros/materializations/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1663801356}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."}}, "exposures": {}, "selectors": {}, "disabled": [], "parent_map": {"model.basedosdados.microdados": [], "model.basedosdados.bens_candidato": [], "model.basedosdados.despesas_candidato": [], "model.basedosdados.receitas_candidato": [], "model.basedosdados.candidatos": [], "model.basedosdados.my_first_dbt_model": [], "model.basedosdados.my_second_dbt_model": ["model.basedosdados.my_first_dbt_model"], "model.basedosdados.br_ibge_ipca15__mes_categoria_rm": [], "model.basedosdados.br_ibge_ipca15__mes_categoria_municipio": [], "model.basedosdados.br_ibge_ipca15__mes_brasil": [], "model.basedosdados.br_ibge_ipca15__mes_categoria_brasil": [], "model.basedosdados.columns": [], "model.basedosdados.external_links": [], "model.basedosdados.organizations": [], "model.basedosdados.tables": [], "model.basedosdados.information_requests": [], "model.basedosdados.resources": [], "model.basedosdados.datasets": [], "model.basedosdados.twitter_metrics_agg": [], "model.basedosdados.twitter_metrics": [], "model.basedosdados.pessoa_fisica": [], "model.basedosdados.pessoa_juridica": [], "model.basedosdados.responsavel": [], "model.basedosdados.igp_m_mes": [], "model.basedosdados.igp_di_ano": [], "model.basedosdados.igp_og_mes": [], "model.basedosdados.igp_og_ano": [], "model.basedosdados.igp_m_ano": [], "model.basedosdados.igp_10_mes": [], "model.basedosdados.igp_di_mes": [], "model.basedosdados.mes": [], "model.basedosdados.br_ibge_ipca__mes_categoria_rm": [], "model.basedosdados.br_ibge_ipca__mes_brasil": [], "model.basedosdados.br_ibge_ipca__mes_categoria_municipio": [], "model.basedosdados.br_ibge_ipca__mes_categoria_brasil": [], "model.basedosdados.br_ibge_inpc__mes_categoria_rm": [], "model.basedosdados.br_ibge_inpc__mes_categoria_municipio": [], "model.basedosdados.br_ibge_inpc__mes_categoria_brasil": [], "model.basedosdados.br_ibge_inpc__mes_brasil": [], "model.basedosdados.eleicao_perfil_candidato_2022": [], "model.basedosdados.br_jota.eleicao_prestacao_contas_candidato_2022": [], "model.basedosdados.eleicao_prestacao_contas_candidato_origem_2022": [], "model.basedosdados.terceirizados": [], "model.basedosdados.dia": [], "model.basedosdados.br_ibge_pnadc__microdados": [], "model.basedosdados.ano_escola_serie_educacao_aprendizagem_adequada": [], "test.basedosdados.unique_my_second_dbt_model_id.57a0f8c493": ["model.basedosdados.my_second_dbt_model"], "test.basedosdados.not_null_my_second_dbt_model_id.151b76d778": ["model.basedosdados.my_second_dbt_model"], "test.basedosdados.unique_my_first_model_id.4a4cd8b027": [], "test.basedosdados.not_null_my_first_model_id.63c8996172": []}, "child_map": {"model.basedosdados.microdados": [], "model.basedosdados.bens_candidato": [], "model.basedosdados.despesas_candidato": [], "model.basedosdados.receitas_candidato": [], "model.basedosdados.candidatos": [], "model.basedosdados.my_first_dbt_model": ["model.basedosdados.my_second_dbt_model"], "model.basedosdados.my_second_dbt_model": ["test.basedosdados.not_null_my_second_dbt_model_id.151b76d778", "test.basedosdados.unique_my_second_dbt_model_id.57a0f8c493"], "model.basedosdados.br_ibge_ipca15__mes_categoria_rm": [], "model.basedosdados.br_ibge_ipca15__mes_categoria_municipio": [], "model.basedosdados.br_ibge_ipca15__mes_brasil": [], "model.basedosdados.br_ibge_ipca15__mes_categoria_brasil": [], "model.basedosdados.columns": [], "model.basedosdados.external_links": [], "model.basedosdados.organizations": [], "model.basedosdados.tables": [], "model.basedosdados.information_requests": [], "model.basedosdados.resources": [], "model.basedosdados.datasets": [], "model.basedosdados.twitter_metrics_agg": [], "model.basedosdados.twitter_metrics": [], "model.basedosdados.pessoa_fisica": [], "model.basedosdados.pessoa_juridica": [], "model.basedosdados.responsavel": [], "model.basedosdados.igp_m_mes": [], "model.basedosdados.igp_di_ano": [], "model.basedosdados.igp_og_mes": [], "model.basedosdados.igp_og_ano": [], "model.basedosdados.igp_m_ano": [], "model.basedosdados.igp_10_mes": [], "model.basedosdados.igp_di_mes": [], "model.basedosdados.mes": [], "model.basedosdados.br_ibge_ipca__mes_categoria_rm": [], "model.basedosdados.br_ibge_ipca__mes_brasil": [], "model.basedosdados.br_ibge_ipca__mes_categoria_municipio": [], "model.basedosdados.br_ibge_ipca__mes_categoria_brasil": [], "model.basedosdados.br_ibge_inpc__mes_categoria_rm": [], "model.basedosdados.br_ibge_inpc__mes_categoria_municipio": [], "model.basedosdados.br_ibge_inpc__mes_categoria_brasil": [], "model.basedosdados.br_ibge_inpc__mes_brasil": [], "model.basedosdados.eleicao_perfil_candidato_2022": [], "model.basedosdados.br_jota.eleicao_prestacao_contas_candidato_2022": [], "model.basedosdados.eleicao_prestacao_contas_candidato_origem_2022": [], "model.basedosdados.terceirizados": [], "model.basedosdados.dia": [], "model.basedosdados.br_ibge_pnadc__microdados": [], "model.basedosdados.ano_escola_serie_educacao_aprendizagem_adequada": [], "test.basedosdados.unique_my_second_dbt_model_id.57a0f8c493": [], "test.basedosdados.not_null_my_second_dbt_model_id.151b76d778": [], "test.basedosdados.unique_my_first_model_id.4a4cd8b027": [], "test.basedosdados.not_null_my_first_model_id.63c8996172": []}}